// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`API Spec Utilities > Verify that the API Spec from GitHub matches snapshot 1`] = `
{
  "components": {
    "securitySchemes": {
      "apiKey": {
        "in": "header",
        "name": "X-Algolia-API-Key",
        "type": "apiKey",
      },
      "appId": {
        "in": "header",
        "name": "X-Algolia-Application-Id",
        "type": "apiKey",
      },
    },
  },
  "info": {
    "description": "API powering the Search feature of Algolia.",
    "title": "Search API",
    "version": "1.0.0",
  },
  "openapi": "3.0.2",
  "paths": {
    "/1/clusters": {
      "get": {
        "description": "List the clusters available in a multi-clusters setup for a single appID.
Upon success, the response is 200 OK and contains the following clusters.
",
        "operationId": "listClusters",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of clusters.",
                  "properties": {
                    "topUsers": {
                      "description": "Mapping of cluster names to top users.",
                      "items": {
                        "description": "Name of the cluster.",
                        "example": "c11-test",
                        "type": "string",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "topUsers",
                  ],
                  "title": "listClustersResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "List clusters.",
        "tags": [
          "Clusters",
        ],
      },
    },
    "/1/clusters/mapping": {
      "get": {
        "description": "List the userIDs assigned to a multi-clusters appID.
The data returned will usually be a few seconds behind real time, because userID usage may take up to a few seconds to propagate to the different clusters.
Upon success, the response is 200 OK and contains the following userIDs data.
",
        "operationId": "listUserIds",
        "parameters": [
          {
            "description": "Requested page (zero-based). When specified, will retrieve a specific page; the page size is implicitly set to 100. When null, will retrieve all indices (no pagination).",
            "in": "query",
            "name": "page",
            "schema": {
              "default": null,
              "nullable": true,
              "type": "integer",
            },
          },
          {
            "description": "Maximum number of objects to retrieve.",
            "in": "query",
            "name": "hitsPerPage",
            "schema": {
              "default": 100,
              "type": "integer",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "UserIDs data.",
                  "properties": {
                    "userIDs": {
                      "description": "List of userIDs.",
                      "items": {
                        "description": "A userID.",
                        "properties": {
                          "clusterName": {
                            "description": "Cluster on which the user is assigned.",
                            "example": "c1-test",
                            "type": "string",
                          },
                          "dataSize": {
                            "description": "Data size used by the user.",
                            "example": 0,
                            "type": "integer",
                          },
                          "nbRecords": {
                            "description": "Number of records belonging to the user.",
                            "example": 42,
                            "type": "integer",
                          },
                          "userID": {
                            "description": "userID of the user.",
                            "example": "user1",
                            "pattern": "^[a-zA-Z0-9 \\\\-*.]+$",
                            "type": "string",
                          },
                        },
                        "required": [
                          "userID",
                          "clusterName",
                          "nbRecords",
                          "dataSize",
                        ],
                        "title": "userID",
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "userIDs",
                  ],
                  "title": "listUserIdsResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "List userIDs.",
        "tags": [
          "Clusters",
        ],
      },
      "post": {
        "description": "Assign or Move a userID to a cluster.
The time it takes to migrate (move) a user is proportional to the amount of data linked to the userID.
Upon success, the response is 200 OK.
A successful response indicates that the operation has been taken into account, and the userID is directly usable.
",
        "operationId": "assignUserId",
        "parameters": [
          {
            "description": "userID to assign.",
            "in": "header",
            "name": "X-Algolia-User-ID",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9 \\\\-*.]+$",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Assign userID parameters.",
                "properties": {
                  "cluster": {
                    "description": "Name of the cluster.",
                    "example": "c11-test",
                    "type": "string",
                  },
                },
                "required": [
                  "cluster",
                ],
                "title": "assignUserIdParams",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a createdAt timestamp.",
                  "properties": {
                    "createdAt": {
                      "description": "Date of creation (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "createdAt",
                  ],
                  "title": "createdAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Assign or Move userID.",
        "tags": [
          "Clusters",
        ],
      },
    },
    "/1/clusters/mapping/batch": {
      "post": {
        "description": "Assign multiple userIDs to a cluster.
Upon success, the response is 200 OK.
A successful response indicates that the operation has been taken into account, and the userIDs are directly usable.
",
        "operationId": "batchAssignUserIds",
        "parameters": [
          {
            "description": "userID to assign.",
            "in": "header",
            "name": "X-Algolia-User-ID",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9 \\\\-*.]+$",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Assign userID parameters.",
                "properties": {
                  "cluster": {
                    "description": "Name of the cluster.",
                    "example": "c11-test",
                    "type": "string",
                  },
                  "users": {
                    "description": "userIDs to assign. Note you cannot move users with this method.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "cluster",
                  "users",
                ],
                "title": "batchAssignUserIdsParams",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a createdAt timestamp.",
                  "properties": {
                    "createdAt": {
                      "description": "Date of creation (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "createdAt",
                  ],
                  "title": "createdAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Batch assign userIDs.",
        "tags": [
          "Clusters",
        ],
      },
    },
    "/1/clusters/mapping/pending": {
      "get": {
        "description": "Get the status of your clusters' migrations or user creations.
Creating a large batch of users or migrating your multi-cluster may take quite some time. This method lets you retrieve the status of the migration, so you can know when it's done.
Upon success, the response is 200 OK.
A successful response indicates that the operation has been taken into account, and the userIDs are directly usable.
",
        "operationId": "hasPendingMappings",
        "parameters": [
          {
            "description": "If the clusters pending mapping state should be on the response.",
            "in": "query",
            "name": "getClusters",
            "schema": {
              "type": "boolean",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "clusters": {
                      "additionalProperties": {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "description": "Describe cluster pending (migrating, creating, deleting) mapping state.",
                      "type": "object",
                    },
                    "pending": {
                      "description": "If there is any clusters with pending mapping state.",
                      "type": "boolean",
                    },
                  },
                  "required": [
                    "pending",
                  ],
                  "title": "hasPendingMappingsResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Get migration status.",
        "tags": [
          "Clusters",
        ],
      },
    },
    "/1/clusters/mapping/search": {
      "post": {
        "description": "Search for userIDs.
The data returned will usually be a few seconds behind real time, because userID usage may take up to a few seconds propagate to the different clusters.
To keep updates moving quickly, the index of userIDs isn't built synchronously with the mapping. Instead, the index is built once every 12h, at the same time as the update of userID usage. For example, when you perform a modification like adding or moving a userID, the search will report an outdated value until the next rebuild of the mapping, which takes place every 12h.
Upon success, the response is 200 OK and contains the following userIDs data.
",
        "operationId": "searchUserIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "OK",
                "properties": {
                  "clusterName": {
                    "description": "Name of the cluster.",
                    "example": "c11-test",
                    "type": "string",
                  },
                  "hitsPerPage": {
                    "default": 20,
                    "description": "Set the number of hits per page.",
                    "type": "integer",
                    "x-categories": [
                      "Pagination",
                    ],
                  },
                  "page": {
                    "default": 0,
                    "description": "Specify the page to retrieve.",
                    "type": "integer",
                    "x-categories": [
                      "Pagination",
                    ],
                  },
                  "query": {
                    "description": "Query to search. The search is a prefix search with typoTolerance. Use empty query to retrieve all users.",
                    "type": "string",
                  },
                },
                "required": [
                  "query",
                ],
                "title": "searchUserIdsParams",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "userIDs data.",
                  "properties": {
                    "hits": {
                      "description": "List of user object matching the query.",
                      "items": {
                        "properties": {
                          "_highlightResult": {
                            "properties": {
                              "clusterName": {
                                "additionalProperties": {
                                  "oneOf": [
                                    {
                                      "additionalProperties": false,
                                      "description": "Show highlighted section and words matched on a query.",
                                      "properties": {
                                        "fullyHighlighted": {
                                          "description": "Whether the entire attribute value is highlighted.",
                                          "type": "boolean",
                                        },
                                        "matchLevel": {
                                          "description": "Indicates how well the attribute matched the search query.",
                                          "enum": [
                                            "none",
                                            "partial",
                                            "full",
                                          ],
                                          "type": "string",
                                        },
                                        "matchedWords": {
                                          "description": "List of words from the query that matched the object.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        "value": {
                                          "description": "Markup text with occurrences highlighted.",
                                          "example": "<em>George</em> <em>Clo</em>oney",
                                          "type": "string",
                                        },
                                      },
                                      "required": [
                                        "value",
                                        "matchLevel",
                                        "matchedWords",
                                      ],
                                      "type": "object",
                                    },
                                    {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Show highlighted section and words matched on a query.",
                                        "properties": {
                                          "fullyHighlighted": {
                                            "description": "Whether the entire attribute value is highlighted.",
                                            "type": "boolean",
                                          },
                                          "matchLevel": {
                                            "description": "Indicates how well the attribute matched the search query.",
                                            "enum": [
                                              "none",
                                              "partial",
                                              "full",
                                            ],
                                            "type": "string",
                                          },
                                          "matchedWords": {
                                            "description": "List of words from the query that matched the object.",
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          "value": {
                                            "description": "Markup text with occurrences highlighted.",
                                            "example": "<em>George</em> <em>Clo</em>oney",
                                            "type": "string",
                                          },
                                        },
                                        "required": [
                                          "value",
                                          "matchLevel",
                                          "matchedWords",
                                        ],
                                        "type": "object",
                                      },
                                      "type": "array",
                                    },
                                  ],
                                },
                                "description": "Show highlighted section and words matched on a query.",
                                "type": "object",
                              },
                              "userID": {
                                "additionalProperties": {
                                  "oneOf": [
                                    {
                                      "additionalProperties": false,
                                      "description": "Show highlighted section and words matched on a query.",
                                      "properties": {
                                        "fullyHighlighted": {
                                          "description": "Whether the entire attribute value is highlighted.",
                                          "type": "boolean",
                                        },
                                        "matchLevel": {
                                          "description": "Indicates how well the attribute matched the search query.",
                                          "enum": [
                                            "none",
                                            "partial",
                                            "full",
                                          ],
                                          "type": "string",
                                        },
                                        "matchedWords": {
                                          "description": "List of words from the query that matched the object.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        "value": {
                                          "description": "Markup text with occurrences highlighted.",
                                          "example": "<em>George</em> <em>Clo</em>oney",
                                          "type": "string",
                                        },
                                      },
                                      "required": [
                                        "value",
                                        "matchLevel",
                                        "matchedWords",
                                      ],
                                      "type": "object",
                                    },
                                    {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Show highlighted section and words matched on a query.",
                                        "properties": {
                                          "fullyHighlighted": {
                                            "description": "Whether the entire attribute value is highlighted.",
                                            "type": "boolean",
                                          },
                                          "matchLevel": {
                                            "description": "Indicates how well the attribute matched the search query.",
                                            "enum": [
                                              "none",
                                              "partial",
                                              "full",
                                            ],
                                            "type": "string",
                                          },
                                          "matchedWords": {
                                            "description": "List of words from the query that matched the object.",
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          "value": {
                                            "description": "Markup text with occurrences highlighted.",
                                            "example": "<em>George</em> <em>Clo</em>oney",
                                            "type": "string",
                                          },
                                        },
                                        "required": [
                                          "value",
                                          "matchLevel",
                                          "matchedWords",
                                        ],
                                        "type": "object",
                                      },
                                      "type": "array",
                                    },
                                  ],
                                },
                                "description": "Show highlighted section and words matched on a query.",
                                "type": "object",
                              },
                            },
                            "required": [
                              "userID",
                              "clusterName",
                            ],
                            "title": "userHighlightResult",
                            "type": "object",
                          },
                          "clusterName": {
                            "description": "Name of the cluster.",
                            "example": "c11-test",
                            "type": "string",
                          },
                          "dataSize": {
                            "description": "Data size taken by all the users assigned to the cluster.",
                            "example": 481,
                            "type": "integer",
                          },
                          "nbRecords": {
                            "description": "Number of records in the cluster.",
                            "example": 3,
                            "type": "integer",
                          },
                          "objectID": {
                            "description": "userID of the requested user. Same as userID.",
                            "type": "string",
                          },
                          "userID": {
                            "description": "userID of the user.",
                            "example": "user1",
                            "pattern": "^[a-zA-Z0-9 \\\\-*.]+$",
                            "type": "string",
                          },
                        },
                        "required": [
                          "userID",
                          "clusterName",
                          "nbRecords",
                          "dataSize",
                          "objectID",
                          "_highlightResult",
                        ],
                        "title": "userHit",
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "hitsPerPage": {
                      "default": 20,
                      "description": "Maximum number of hits in a page. Minimum is 1, maximum is 1000.",
                      "type": "integer",
                    },
                    "nbHits": {
                      "description": "Number of hits that the search query matched.",
                      "example": 20,
                      "type": "integer",
                    },
                    "page": {
                      "default": 0,
                      "description": "Specify the page to retrieve.",
                      "type": "integer",
                      "x-categories": [
                        "Pagination",
                      ],
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "hits",
                    "nbHits",
                    "page",
                    "hitsPerPage",
                    "updatedAt",
                  ],
                  "title": "searchUserIdsResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Search userID.",
        "tags": [
          "Clusters",
        ],
        "x-cacheable": true,
        "x-use-read-transporter": true,
      },
    },
    "/1/clusters/mapping/top": {
      "get": {
        "description": "Get the top 10 userIDs with the highest number of records per cluster.
The data returned will usually be a few seconds behind real time, because userID usage may take up to a few seconds to propagate to the different clusters.
Upon success, the response is 200 OK and contains the following array of userIDs and clusters.
",
        "operationId": "getTopUserIds",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of userIDs and clusters.",
                  "properties": {
                    "topUsers": {
                      "description": "Mapping of cluster names to top users.",
                      "items": {
                        "additionalProperties": {
                          "items": {
                            "description": "A userID.",
                            "properties": {
                              "clusterName": {
                                "description": "Cluster on which the user is assigned.",
                                "example": "c1-test",
                                "type": "string",
                              },
                              "dataSize": {
                                "description": "Data size used by the user.",
                                "example": 0,
                                "type": "integer",
                              },
                              "nbRecords": {
                                "description": "Number of records belonging to the user.",
                                "example": 42,
                                "type": "integer",
                              },
                              "userID": {
                                "description": "userID of the user.",
                                "example": "user1",
                                "pattern": "^[a-zA-Z0-9 \\\\-*.]+$",
                                "type": "string",
                              },
                            },
                            "required": [
                              "userID",
                              "clusterName",
                              "nbRecords",
                              "dataSize",
                            ],
                            "title": "userID",
                            "type": "object",
                          },
                          "type": "array",
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "topUsers",
                  ],
                  "title": "getTopUserIdsResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Get top userID.",
        "tags": [
          "Clusters",
        ],
      },
    },
    "/1/clusters/mapping/{userID}": {
      "delete": {
        "description": "Remove a userID and its associated data from the multi-clusters.
Upon success, the response is 200 OK and a task is created to remove the userID data and mapping.
",
        "operationId": "removeUserId",
        "parameters": [
          {
            "description": "userID to assign.",
            "in": "path",
            "name": "userID",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9 \\\\-*.]+$",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "deletedAt": {
                      "description": "Date of deletion (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "deletedAt",
                  ],
                  "title": "removeUserIdResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Remove userID.",
        "tags": [
          "Clusters",
        ],
      },
      "get": {
        "description": "Returns the userID data stored in the mapping.
The data returned will usually be a few seconds behind real time, because userID usage may take up to a few seconds to propagate to the different clusters.
Upon success, the response is 200 OK and contains the following userID data.
",
        "operationId": "getUserId",
        "parameters": [
          {
            "description": "userID to assign.",
            "in": "path",
            "name": "userID",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9 \\\\-*.]+$",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "A userID.",
                  "properties": {
                    "clusterName": {
                      "description": "Cluster on which the user is assigned.",
                      "example": "c1-test",
                      "type": "string",
                    },
                    "dataSize": {
                      "description": "Data size used by the user.",
                      "example": 0,
                      "type": "integer",
                    },
                    "nbRecords": {
                      "description": "Number of records belonging to the user.",
                      "example": 42,
                      "type": "integer",
                    },
                    "userID": {
                      "description": "userID of the user.",
                      "example": "user1",
                      "pattern": "^[a-zA-Z0-9 \\\\-*.]+$",
                      "type": "string",
                    },
                  },
                  "required": [
                    "userID",
                    "clusterName",
                    "nbRecords",
                    "dataSize",
                  ],
                  "title": "userID",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Get userID.",
        "tags": [
          "Clusters",
        ],
      },
    },
    "/1/dictionaries/*/languages": {
      "get": {
        "description": "List dictionaries supported per language.",
        "operationId": "getDictionaryLanguages",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "additionalProperties": false,
                    "description": "A dictionary language.",
                    "properties": {
                      "compounds": {
                        "additionalProperties": false,
                        "description": "Custom entries for a dictionary.",
                        "nullable": true,
                        "properties": {
                          "nbCustomEntires": {
                            "description": "When nbCustomEntries is set to 0, the user didn't customize the dictionary. The dictionary is still supported with standard, Algolia-provided entries.",
                            "type": "integer",
                          },
                        },
                        "type": "object",
                      },
                      "plurals": {
                        "additionalProperties": false,
                        "description": "Custom entries for a dictionary.",
                        "nullable": true,
                        "properties": {
                          "nbCustomEntires": {
                            "description": "When nbCustomEntries is set to 0, the user didn't customize the dictionary. The dictionary is still supported with standard, Algolia-provided entries.",
                            "type": "integer",
                          },
                        },
                        "type": "object",
                      },
                      "stopwords": {
                        "additionalProperties": false,
                        "description": "Custom entries for a dictionary.",
                        "nullable": true,
                        "properties": {
                          "nbCustomEntires": {
                            "description": "When nbCustomEntries is set to 0, the user didn't customize the dictionary. The dictionary is still supported with standard, Algolia-provided entries.",
                            "type": "integer",
                          },
                        },
                        "type": "object",
                      },
                    },
                    "required": [
                      "plurals",
                      "stopwords",
                      "compounds",
                    ],
                    "type": "object",
                  },
                  "title": "getDictionaryLanguagesResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "List available languages.",
        "tags": [
          "Dictionaries",
        ],
      },
    },
    "/1/dictionaries/*/settings": {
      "get": {
        "description": "Retrieve dictionaries settings. The API stores languages whose standard entries are disabled. Fetch settings does not return false values.",
        "operationId": "getDictionarySettings",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "disableStandardEntries": {
                      "additionalProperties": false,
                      "description": "Map of language ISO code supported by the dictionary (e.g., \\"en\\" for English) to a boolean value.",
                      "properties": {
                        "compounds": {
                          "additionalProperties": {
                            "type": "boolean",
                          },
                          "description": "Language ISO code.",
                          "nullable": true,
                          "type": "object",
                        },
                        "plurals": {
                          "additionalProperties": {
                            "type": "boolean",
                          },
                          "description": "Language ISO code.",
                          "nullable": true,
                          "type": "object",
                        },
                        "stopwords": {
                          "additionalProperties": {
                            "type": "boolean",
                          },
                          "description": "Language ISO code.",
                          "nullable": true,
                          "type": "object",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "required": [
                    "disableStandardEntries",
                  ],
                  "title": "getDictionarySettingsResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Retrieve dictionaries settings.",
        "tags": [
          "Dictionaries",
        ],
      },
      "put": {
        "description": "Set dictionaries settings.",
        "operationId": "setDictionarySettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Disable the builtin Algolia entries for a type of dictionary per language.",
                "properties": {
                  "disableStandardEntries": {
                    "additionalProperties": false,
                    "description": "Map of language ISO code supported by the dictionary (e.g., \\"en\\" for English) to a boolean value.",
                    "properties": {
                      "compounds": {
                        "additionalProperties": {
                          "type": "boolean",
                        },
                        "description": "Language ISO code.",
                        "nullable": true,
                        "type": "object",
                      },
                      "plurals": {
                        "additionalProperties": {
                          "type": "boolean",
                        },
                        "description": "Language ISO code.",
                        "nullable": true,
                        "type": "object",
                      },
                      "stopwords": {
                        "additionalProperties": {
                          "type": "boolean",
                        },
                        "description": "Language ISO code.",
                        "nullable": true,
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                },
                "required": [
                  "disableStandardEntries",
                ],
                "title": "dictionarySettingsParams",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and an updatedAt timestamp.",
                  "properties": {
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                  ],
                  "title": "updatedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Set dictionaries settings.",
        "tags": [
          "Dictionaries",
        ],
      },
    },
    "/1/dictionaries/{dictionaryName}/batch": {
      "post": {
        "description": "Send a batch of dictionary entries.",
        "operationId": "batchDictionaryEntries",
        "parameters": [
          {
            "description": "The dictionary to search in.",
            "in": "path",
            "name": "dictionaryName",
            "required": true,
            "schema": {
              "enum": [
                "plurals",
                "stopwords",
                "compounds",
              ],
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "The \`batchDictionaryEntries\` parameters.",
                "properties": {
                  "clearExistingDictionaryEntries": {
                    "default": false,
                    "description": "When \`true\`, start the batch by removing all the custom entries from the dictionary.",
                    "type": "boolean",
                  },
                  "requests": {
                    "description": "List of operations to batch. Each operation is described by an \`action\` and a \`body\`.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "action": {
                          "description": "Actions to perform.",
                          "enum": [
                            "addEntry",
                            "deleteEntry",
                          ],
                          "type": "string",
                        },
                        "body": {
                          "additionalProperties": true,
                          "description": "A dictionary entry.",
                          "properties": {
                            "decomposition": {
                              "description": "A decomposition of the word of the dictionary entry.",
                              "items": {
                                "type": "string",
                              },
                              "type": "array",
                            },
                            "language": {
                              "description": "Language ISO code supported by the dictionary (e.g., \\"en\\" for English).",
                              "type": "string",
                            },
                            "objectID": {
                              "description": "Unique identifier of the object.",
                              "type": "string",
                            },
                            "state": {
                              "default": "enabled",
                              "description": "The state of the dictionary entry.",
                              "enum": [
                                "enabled",
                                "disabled",
                              ],
                              "type": "string",
                            },
                            "word": {
                              "description": "The word of the dictionary entry.",
                              "type": "string",
                            },
                            "words": {
                              "description": "The words of the dictionary entry.",
                              "items": {
                                "type": "string",
                              },
                              "type": "array",
                            },
                          },
                          "required": [
                            "objectID",
                            "language",
                          ],
                          "type": "object",
                        },
                      },
                      "required": [
                        "action",
                        "body",
                      ],
                      "title": "batchDictionaryEntriesRequest",
                      "type": "object",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "requests",
                ],
                "title": "batchDictionaryEntriesParams",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and an updatedAt timestamp.",
                  "properties": {
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                  ],
                  "title": "updatedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Batch dictionary entries.",
        "tags": [
          "Dictionaries",
        ],
      },
    },
    "/1/dictionaries/{dictionaryName}/search": {
      "post": {
        "description": "Search the dictionary entries.",
        "operationId": "searchDictionaryEntries",
        "parameters": [
          {
            "description": "The dictionary to search in.",
            "in": "path",
            "name": "dictionaryName",
            "required": true,
            "schema": {
              "enum": [
                "plurals",
                "stopwords",
                "compounds",
              ],
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "The \`searchDictionaryEntries\` parameters.",
                "properties": {
                  "hitsPerPage": {
                    "default": 20,
                    "description": "Set the number of hits per page.",
                    "type": "integer",
                    "x-categories": [
                      "Pagination",
                    ],
                  },
                  "language": {
                    "description": "Language ISO code supported by the dictionary (e.g., \\"en\\" for English).",
                    "type": "string",
                  },
                  "page": {
                    "default": 0,
                    "description": "Specify the page to retrieve.",
                    "type": "integer",
                    "x-categories": [
                      "Pagination",
                    ],
                  },
                  "query": {
                    "default": "",
                    "description": "The text to search in the index.",
                    "type": "string",
                    "x-categories": [
                      "Search",
                    ],
                  },
                },
                "required": [
                  "query",
                ],
                "title": "searchDictionaryEntriesParams",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and an updatedAt timestamp.",
                  "properties": {
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                  ],
                  "title": "updatedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Search a dictionary entries.",
        "tags": [
          "Dictionaries",
        ],
        "x-cacheable": true,
        "x-use-read-transporter": true,
      },
    },
    "/1/indexes": {
      "get": {
        "description": "List existing indexes from an application.",
        "operationId": "listIndices",
        "parameters": [
          {
            "description": "Requested page (zero-based). When specified, will retrieve a specific page; the page size is implicitly set to 100. When null, will retrieve all indices (no pagination).",
            "in": "query",
            "name": "page",
            "schema": {
              "default": null,
              "nullable": true,
              "type": "integer",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "items": {
                      "description": "List of the fetched indices.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "createdAt": {
                            "description": "Index creation date. An empty string means that the index has no records.",
                            "type": "string",
                          },
                          "dataSize": {
                            "description": "Number of bytes of the index in minified format.",
                            "type": "integer",
                          },
                          "entries": {
                            "description": "Number of records contained in the index.",
                            "type": "integer",
                          },
                          "fileSize": {
                            "description": "Number of bytes of the index binary file.",
                            "type": "integer",
                          },
                          "lastBuildTimeS": {
                            "description": "Last build time.",
                            "type": "integer",
                          },
                          "name": {
                            "description": "Index name.",
                            "type": "string",
                          },
                          "numberOfPendingTasks": {
                            "default": 0,
                            "description": "Number of pending indexing operations. This value is deprecated and should not be used.",
                            "type": "integer",
                          },
                          "pendingTask": {
                            "default": false,
                            "description": "A boolean which says whether the index has pending tasks. This value is deprecated and should not be used.",
                            "type": "boolean",
                          },
                          "primary": {
                            "description": "Only present if the index is a replica. Contains the name of the related primary index.",
                            "type": "string",
                          },
                          "replicas": {
                            "description": "Only present if the index is a primary index with replicas. Contains the names of all linked replicas.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                          "updatedAt": {
                            "description": "Date of last update (ISO-8601 format).",
                            "type": "string",
                          },
                        },
                        "required": [
                          "name",
                          "createdAt",
                          "updatedAt",
                          "entries",
                          "dataSize",
                          "fileSize",
                          "lastBuildTimeS",
                          "pendingTask",
                          "numberOfPendingTasks",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "nbPages": {
                      "description": "Number of pages.",
                      "example": 100,
                      "type": "integer",
                    },
                  },
                  "required": [
                    "items",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "List existing indexes.",
        "tags": [
          "Indices",
        ],
      },
    },
    "/1/indexes/*/batch": {
      "post": {
        "description": "Perform multiple write operations, potentially targeting multiple indices, in a single API call.",
        "operationId": "multipleBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "The \`multipleBatch\` parameters.",
                "properties": {
                  "requests": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "action": {
                          "description": "type of operation.",
                          "enum": [
                            "addObject",
                            "updateObject",
                            "partialUpdateObject",
                            "partialUpdateObjectNoCreate",
                            "deleteObject",
                            "delete",
                            "clear",
                          ],
                          "type": "string",
                        },
                        "body": {
                          "description": "arguments to the operation (depends on the type of the operation).",
                          "type": "object",
                        },
                        "indexName": {
                          "description": "Index to target for this operation.",
                          "type": "string",
                        },
                      },
                      "required": [
                        "action",
                        "body",
                        "indexName",
                      ],
                      "title": "multipleBatchRequest",
                      "type": "object",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "requests",
                ],
                "title": "batchParams",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "objectIDs": {
                      "description": "List of objectID.",
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "taskID": {
                      "additionalProperties": {
                        "description": "taskID of the task to wait for.",
                        "format": "int64",
                        "type": "integer",
                      },
                      "description": "List of tasksIDs per index.",
                      "type": "object",
                    },
                  },
                  "required": [
                    "taskID",
                    "objectIDs",
                  ],
                  "title": "multipleBatchResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Batch operations to many indices.",
        "tags": [
          "Records",
        ],
      },
    },
    "/1/indexes/*/objects": {
      "post": {
        "description": "Retrieve one or more objects, potentially from different indices, in a single API call.",
        "operationId": "getObjects",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "The \`getObjects\` parameters.",
                "properties": {
                  "requests": {
                    "items": {
                      "additionalProperties": false,
                      "description": "getObjects operation on an index.",
                      "properties": {
                        "attributesToRetrieve": {
                          "description": "List of attributes to retrieve. By default, all retrievable attributes are returned.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                        },
                        "indexName": {
                          "description": "name of the index containing the object.",
                          "type": "string",
                        },
                        "objectID": {
                          "description": "ID of the object within that index.",
                          "type": "string",
                        },
                      },
                      "required": [
                        "objectID",
                        "indexName",
                      ],
                      "title": "getObjectsRequest",
                      "type": "object",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "requests",
                ],
                "title": "getObjectsParams",
                "type": "object",
              },
            },
          },
          "description": "The Algolia object.",
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "results": {
                      "description": "List of results fetched.",
                      "items": {
                        "description": "Fetched object.",
                        "type": "object",
                        "x-is-generic": true,
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "results",
                  ],
                  "title": "getObjectsResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Retrieve one or more objects.",
        "tags": [
          "Records",
        ],
        "x-cacheable": true,
        "x-use-read-transporter": true,
      },
    },
    "/1/indexes/*/queries": {
      "post": {
        "description": "Perform a search operation targeting one or many indices.",
        "operationId": "search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "requests": {
                    "items": {
                      "oneOf": [
                        {
                          "allOf": [
                            {
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "params": {
                                      "default": "",
                                      "description": "Search parameters as URL-encoded query string.",
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                {
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "additionalProperties": false,
                                          "properties": {
                                            "query": {
                                              "default": "",
                                              "description": "The text to search in the index.",
                                              "type": "string",
                                              "x-categories": [
                                                "Search",
                                              ],
                                            },
                                          },
                                          "type": "object",
                                        },
                                        {
                                          "additionalProperties": false,
                                          "properties": {
                                            "analytics": {
                                              "default": true,
                                              "description": "Whether the current query will be taken into account in the Analytics.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Analytics",
                                              ],
                                            },
                                            "analyticsTags": {
                                              "default": [],
                                              "description": "List of tags to apply to the query for analytics purposes.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Analytics",
                                              ],
                                            },
                                            "aroundLatLng": {
                                              "default": "",
                                              "description": "Search for entries around a central geolocation, enabling a geo search within a circular area.",
                                              "type": "string",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "aroundLatLngViaIP": {
                                              "default": false,
                                              "description": "Search for entries around a given location automatically computed from the requester's IP address.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "aroundPrecision": {
                                              "default": 10,
                                              "description": "Precision of geo search (in meters), to add grouping by geo location to the ranking formula.",
                                              "type": "integer",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "aroundRadius": {
                                              "description": "Define the maximum radius for a geo search (in meters).",
                                              "oneOf": [
                                                {
                                                  "minimum": 1,
                                                  "type": "integer",
                                                },
                                                {
                                                  "enum": [
                                                    "all",
                                                  ],
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "clickAnalytics": {
                                              "default": false,
                                              "description": "Enable the Click Analytics feature.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Analytics",
                                              ],
                                            },
                                            "enableABTest": {
                                              "default": true,
                                              "description": "Whether this search should participate in running AB tests.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Advanced",
                                              ],
                                            },
                                            "enableReRanking": {
                                              "default": true,
                                              "description": "Whether this search should use AI Re-Ranking.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Advanced",
                                              ],
                                            },
                                            "facetFilters": {
                                              "description": "Filter hits by facet value.",
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "oneOf": [
                                                      {
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      {
                                                        "type": "string",
                                                      },
                                                    ],
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "facetingAfterDistinct": {
                                              "default": false,
                                              "description": "Force faceting to be applied after de-duplication (via the Distinct setting).",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Faceting",
                                              ],
                                            },
                                            "facets": {
                                              "default": [],
                                              "description": "Retrieve facets and their facet values.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Faceting",
                                              ],
                                            },
                                            "filters": {
                                              "default": "",
                                              "description": "Filter the query with numeric, facet and/or tag filters.",
                                              "type": "string",
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "getRankingInfo": {
                                              "default": false,
                                              "description": "Retrieve detailed ranking information.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Advanced",
                                              ],
                                            },
                                            "insideBoundingBox": {
                                              "description": "Search inside a rectangular area (in geo coordinates).",
                                              "items": {
                                                "format": "double",
                                                "type": "number",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "insidePolygon": {
                                              "description": "Search inside a polygon (in geo coordinates).",
                                              "items": {
                                                "format": "double",
                                                "type": "number",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "length": {
                                              "description": "Set the number of hits to retrieve (used only with offset).",
                                              "maximum": 1000,
                                              "minimum": 1,
                                              "type": "integer",
                                              "x-categories": [
                                                "Pagination",
                                              ],
                                            },
                                            "maxValuesPerFacet": {
                                              "default": 100,
                                              "description": "Maximum number of facet values to return for each facet during a regular search.",
                                              "type": "integer",
                                              "x-categories": [
                                                "Faceting",
                                              ],
                                            },
                                            "minimumAroundRadius": {
                                              "description": "Minimum radius (in meters) used for a geo search when aroundRadius is not set.",
                                              "minimum": 1,
                                              "type": "integer",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "naturalLanguages": {
                                              "default": [],
                                              "description": "This parameter changes the default values of certain parameters and settings that work best for a natural language query, such as ignorePlurals, removeStopWords, removeWordsIfNoResults, analyticsTags and ruleContexts. These parameters and settings work well together when the query is formatted in natural language instead of keywords, for example when your user performs a voice search.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Languages",
                                              ],
                                            },
                                            "numericFilters": {
                                              "description": "Filter on numeric attributes.",
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "oneOf": [
                                                      {
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      {
                                                        "type": "string",
                                                      },
                                                    ],
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "offset": {
                                              "description": "Specify the offset of the first hit to return.",
                                              "type": "integer",
                                              "x-categories": [
                                                "Pagination",
                                              ],
                                            },
                                            "optionalFilters": {
                                              "description": "Create filters for ranking purposes, where records that match the filter are ranked higher, or lower in the case of a negative optional filter.",
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "oneOf": [
                                                      {
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      {
                                                        "type": "string",
                                                      },
                                                    ],
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "page": {
                                              "default": 0,
                                              "description": "Specify the page to retrieve.",
                                              "type": "integer",
                                              "x-categories": [
                                                "Pagination",
                                              ],
                                            },
                                            "percentileComputation": {
                                              "default": true,
                                              "description": "Whether to include or exclude a query from the processing-time percentile computation.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Advanced",
                                              ],
                                            },
                                            "personalizationImpact": {
                                              "default": 100,
                                              "description": "Define the impact of the Personalization feature.",
                                              "type": "integer",
                                              "x-categories": [
                                                "Personalization",
                                              ],
                                            },
                                            "reRankingApplyFilter": {
                                              "description": "When Dynamic Re-Ranking is enabled, only records that match these filters will be impacted by Dynamic Re-Ranking.",
                                              "nullable": true,
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "oneOf": [
                                                      {
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      {
                                                        "type": "string",
                                                      },
                                                    ],
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "ruleContexts": {
                                              "default": [],
                                              "description": "Enables contextual rules.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Rules",
                                              ],
                                            },
                                            "similarQuery": {
                                              "default": "",
                                              "description": "Overrides the query parameter and performs a more generic search that can be used to find \\"similar\\" results.",
                                              "type": "string",
                                              "x-categories": [
                                                "Search",
                                              ],
                                            },
                                            "sortFacetValuesBy": {
                                              "default": "count",
                                              "description": "Controls how facet values are fetched.",
                                              "type": "string",
                                              "x-categories": [
                                                "Faceting",
                                              ],
                                            },
                                            "sumOrFiltersScores": {
                                              "default": false,
                                              "description": "Determines how to calculate the total score for filtering.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "tagFilters": {
                                              "description": "Filter hits by tags.",
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "oneOf": [
                                                      {
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      {
                                                        "type": "string",
                                                      },
                                                    ],
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "userToken": {
                                              "description": "Associates a certain user token with the current search.",
                                              "type": "string",
                                              "x-categories": [
                                                "Personalization",
                                              ],
                                            },
                                          },
                                          "type": "object",
                                        },
                                      ],
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "advancedSyntax": {
                                          "default": false,
                                          "description": "Enables the advanced query syntax.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "advancedSyntaxFeatures": {
                                          "default": [
                                            "exactPhrase",
                                            "excludeWords",
                                          ],
                                          "description": "Allows you to specify which advanced syntax features are active when ‘advancedSyntax' is enabled.",
                                          "items": {
                                            "enum": [
                                              "exactPhrase",
                                              "excludeWords",
                                            ],
                                            "type": "string",
                                            "x-categories": [
                                              "Query strategy",
                                            ],
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "allowTyposOnNumericTokens": {
                                          "default": true,
                                          "description": "Whether to allow typos on numbers (\\"numeric tokens\\") in the query string.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Typos",
                                          ],
                                        },
                                        "alternativesAsExact": {
                                          "default": [
                                            "ignorePlurals",
                                            "singleWordSynonym",
                                          ],
                                          "description": "List of alternatives that should be considered an exact match by the exact ranking criterion.",
                                          "items": {
                                            "enum": [
                                              "ignorePlurals",
                                              "singleWordSynonym",
                                              "multiWordsSynonym",
                                            ],
                                            "type": "string",
                                            "x-categories": [
                                              "Query strategy",
                                            ],
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "attributeCriteriaComputedByMinProximity": {
                                          "default": false,
                                          "description": "When attribute is ranked above proximity in your ranking formula, proximity is used to select which searchable attribute is matched in the attribute ranking stage.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "attributeForDistinct": {
                                          "description": "Name of the de-duplication attribute to be used with the distinct feature.",
                                          "type": "string",
                                        },
                                        "attributesForFaceting": {
                                          "default": [],
                                          "description": "The complete list of attributes that will be used for faceting.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Faceting",
                                          ],
                                        },
                                        "attributesToHighlight": {
                                          "description": "List of attributes to highlight.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "attributesToRetrieve": {
                                          "default": [
                                            "*",
                                          ],
                                          "description": "This parameter controls which attributes to retrieve and which not to retrieve.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Attributes",
                                          ],
                                        },
                                        "attributesToSnippet": {
                                          "default": [],
                                          "description": "List of attributes to snippet, with an optional maximum number of words to snippet.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "customRanking": {
                                          "default": [],
                                          "description": "Specifies the custom ranking criterion.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Ranking",
                                          ],
                                        },
                                        "decompoundQuery": {
                                          "default": true,
                                          "description": "Splits compound words into their composing atoms in the query.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Languages",
                                          ],
                                        },
                                        "disableExactOnAttributes": {
                                          "default": [],
                                          "description": "List of attributes on which you want to disable the exact ranking criterion.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "disableTypoToleranceOnAttributes": {
                                          "default": [],
                                          "description": "List of attributes on which you want to disable typo tolerance.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Typos",
                                          ],
                                        },
                                        "distinct": {
                                          "description": "Enables de-duplication or grouping of results.",
                                          "oneOf": [
                                            {
                                              "type": "boolean",
                                            },
                                            {
                                              "default": 0,
                                              "maximum": 4,
                                              "minimum": 0,
                                              "type": "integer",
                                            },
                                          ],
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "enablePersonalization": {
                                          "default": false,
                                          "description": "Enable the Personalization feature.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Personalization",
                                          ],
                                        },
                                        "enableRules": {
                                          "default": true,
                                          "description": "Whether Rules should be globally enabled.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Rules",
                                          ],
                                        },
                                        "exactOnSingleWordQuery": {
                                          "default": "attribute",
                                          "description": "Controls how the exact ranking criterion is computed when the query contains only one word.",
                                          "enum": [
                                            "attribute",
                                            "none",
                                            "word",
                                          ],
                                          "type": "string",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "highlightPostTag": {
                                          "default": "</em>",
                                          "description": "The HTML string to insert after the highlighted parts in all highlight and snippet results.",
                                          "type": "string",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "highlightPreTag": {
                                          "default": "<em>",
                                          "description": "The HTML string to insert before the highlighted parts in all highlight and snippet results.",
                                          "type": "string",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "hitsPerPage": {
                                          "default": 20,
                                          "description": "Set the number of hits per page.",
                                          "type": "integer",
                                          "x-categories": [
                                            "Pagination",
                                          ],
                                        },
                                        "ignorePlurals": {
                                          "description": "Treats singular, plurals, and other forms of declensions as matching terms.
ignorePlurals is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the ignore plurals functionality, where singulars and plurals are considered equivalent (foot = feet). The languages supported here are either every language (this is the default, see list of languages below), or those set by queryLanguages. false: disables ignore plurals, where singulars and plurals are not considered the same for matching purposes (foot will not find feet).
",
                                          "oneOf": [
                                            {
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            {
                                              "default": false,
                                              "type": "boolean",
                                            },
                                          ],
                                          "x-categories": [
                                            "Languages",
                                          ],
                                        },
                                        "keepDiacriticsOnCharacters": {
                                          "default": "",
                                          "description": "List of characters that the engine shouldn't automatically normalize.",
                                          "type": "string",
                                          "x-categories": [
                                            "Languages",
                                          ],
                                        },
                                        "maxFacetHits": {
                                          "default": 10,
                                          "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                                          "maximum": 100,
                                          "type": "integer",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "minProximity": {
                                          "default": 1,
                                          "description": "Precision of the proximity ranking criterion.",
                                          "maximum": 7,
                                          "minimum": 1,
                                          "type": "integer",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "minWordSizefor1Typo": {
                                          "default": 4,
                                          "description": "Minimum number of characters a word in the query string must contain to accept matches with 1 typo.",
                                          "type": "integer",
                                          "x-categories": [
                                            "Typos",
                                          ],
                                        },
                                        "minWordSizefor2Typos": {
                                          "default": 8,
                                          "description": "Minimum number of characters a word in the query string must contain to accept matches with 2 typos.",
                                          "type": "integer",
                                          "x-categories": [
                                            "Typos",
                                          ],
                                        },
                                        "optionalWords": {
                                          "default": [],
                                          "description": "A list of words that should be considered as optional when found in the query.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "queryLanguages": {
                                          "default": [],
                                          "description": "Sets the languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Languages",
                                          ],
                                        },
                                        "queryType": {
                                          "default": "prefixLast",
                                          "description": "Controls if and how query words are interpreted as prefixes.",
                                          "enum": [
                                            "prefixLast",
                                            "prefixAll",
                                            "prefixNone",
                                          ],
                                          "type": "string",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "ranking": {
                                          "default": [
                                            "typo",
                                            "geo",
                                            "words",
                                            "filters",
                                            "proximity",
                                            "attribute",
                                            "exact",
                                            "custom",
                                          ],
                                          "description": "Controls how Algolia should sort your results.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Ranking",
                                          ],
                                        },
                                        "relevancyStrictness": {
                                          "default": 100,
                                          "description": "Controls the relevancy threshold below which less relevant results aren't included in the results.",
                                          "type": "integer",
                                          "x-categories": [
                                            "Ranking",
                                          ],
                                        },
                                        "removeStopWords": {
                                          "description": "Removes stop (common) words from the query before executing it.
removeStopWords is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the stop word functionality, ensuring that stop words are removed from consideration in a search. The languages supported here are either every language, or those set by queryLanguages. false: disables stop word functionality, allowing stop words to be taken into account in a search.
",
                                          "oneOf": [
                                            {
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            {
                                              "default": false,
                                              "type": "boolean",
                                            },
                                          ],
                                          "x-categories": [
                                            "Languages",
                                          ],
                                        },
                                        "removeWordsIfNoResults": {
                                          "default": "none",
                                          "description": "Selects a strategy to remove words from the query when it doesn't match any hits.",
                                          "enum": [
                                            "none",
                                            "lastWords",
                                            "firstWords",
                                            "allOptional",
                                          ],
                                          "type": "string",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "renderingContent": {
                                          "additionalProperties": false,
                                          "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                          "properties": {
                                            "facetOrdering": {
                                              "additionalProperties": false,
                                              "description": "Defining how facets should be ordered.",
                                              "properties": {
                                                "facets": {
                                                  "additionalProperties": false,
                                                  "description": "The ordering of facets (widgets).",
                                                  "properties": {
                                                    "order": {
                                                      "description": "Pinned order of facet lists.",
                                                      "items": {
                                                        "type": "string",
                                                      },
                                                      "type": "array",
                                                    },
                                                  },
                                                  "type": "object",
                                                },
                                                "values": {
                                                  "additionalProperties": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                      "order": {
                                                        "description": "Pinned order of facet lists.",
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      "sortRemainingBy": {
                                                        "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                                        "enum": [
                                                          "count",
                                                          "alpha",
                                                          "hidden",
                                                        ],
                                                        "type": "string",
                                                      },
                                                    },
                                                    "type": "object",
                                                  },
                                                  "description": "The ordering of facet values, within an individual list.",
                                                  "type": "object",
                                                },
                                              },
                                              "type": "object",
                                            },
                                          },
                                          "type": "object",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "replaceSynonymsInHighlight": {
                                          "default": false,
                                          "description": "Whether to highlight and snippet the original word that matches the synonym or the synonym itself.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "responseFields": {
                                          "default": [],
                                          "description": "Choose which fields to return in the API response. This parameters applies to search and browse queries.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "restrictHighlightAndSnippetArrays": {
                                          "default": false,
                                          "description": "Restrict highlighting and snippeting to items that matched the query.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "restrictSearchableAttributes": {
                                          "default": [],
                                          "description": "Restricts a given query to look in only a subset of your searchable attributes.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Attributes",
                                          ],
                                        },
                                        "snippetEllipsisText": {
                                          "default": "…",
                                          "description": "String used as an ellipsis indicator when a snippet is truncated.",
                                          "type": "string",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "synonyms": {
                                          "default": true,
                                          "description": "Whether to take into account an index's synonyms for a particular search.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "typoTolerance": {
                                          "description": "Controls whether typo tolerance is enabled and how it is applied.",
                                          "oneOf": [
                                            {
                                              "default": true,
                                              "type": "boolean",
                                            },
                                            {
                                              "enum": [
                                                "min",
                                                "strict",
                                              ],
                                              "type": "string",
                                            },
                                          ],
                                          "x-categories": [
                                            "Typos",
                                          ],
                                        },
                                      },
                                      "type": "object",
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              "properties": {
                                "indexName": {
                                  "description": "The Algolia index name.",
                                  "example": "products",
                                  "type": "string",
                                },
                                "type": {
                                  "default": "default",
                                  "description": "Perform a search query with \`default\`, will search for facet values if \`facet\` is given.",
                                  "enum": [
                                    "default",
                                  ],
                                  "type": "string",
                                },
                              },
                              "required": [
                                "indexName",
                              ],
                              "type": "object",
                              "x-is-SearchForHitsOptions": true,
                            },
                          ],
                        },
                        {
                          "allOf": [
                            {
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "params": {
                                      "default": "",
                                      "description": "Search parameters as URL-encoded query string.",
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                {
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "additionalProperties": false,
                                          "properties": {
                                            "query": {
                                              "default": "",
                                              "description": "The text to search in the index.",
                                              "type": "string",
                                              "x-categories": [
                                                "Search",
                                              ],
                                            },
                                          },
                                          "type": "object",
                                        },
                                        {
                                          "additionalProperties": false,
                                          "properties": {
                                            "analytics": {
                                              "default": true,
                                              "description": "Whether the current query will be taken into account in the Analytics.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Analytics",
                                              ],
                                            },
                                            "analyticsTags": {
                                              "default": [],
                                              "description": "List of tags to apply to the query for analytics purposes.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Analytics",
                                              ],
                                            },
                                            "aroundLatLng": {
                                              "default": "",
                                              "description": "Search for entries around a central geolocation, enabling a geo search within a circular area.",
                                              "type": "string",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "aroundLatLngViaIP": {
                                              "default": false,
                                              "description": "Search for entries around a given location automatically computed from the requester's IP address.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "aroundPrecision": {
                                              "default": 10,
                                              "description": "Precision of geo search (in meters), to add grouping by geo location to the ranking formula.",
                                              "type": "integer",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "aroundRadius": {
                                              "description": "Define the maximum radius for a geo search (in meters).",
                                              "oneOf": [
                                                {
                                                  "minimum": 1,
                                                  "type": "integer",
                                                },
                                                {
                                                  "enum": [
                                                    "all",
                                                  ],
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "clickAnalytics": {
                                              "default": false,
                                              "description": "Enable the Click Analytics feature.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Analytics",
                                              ],
                                            },
                                            "enableABTest": {
                                              "default": true,
                                              "description": "Whether this search should participate in running AB tests.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Advanced",
                                              ],
                                            },
                                            "enableReRanking": {
                                              "default": true,
                                              "description": "Whether this search should use AI Re-Ranking.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Advanced",
                                              ],
                                            },
                                            "facetFilters": {
                                              "description": "Filter hits by facet value.",
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "oneOf": [
                                                      {
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      {
                                                        "type": "string",
                                                      },
                                                    ],
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "facetingAfterDistinct": {
                                              "default": false,
                                              "description": "Force faceting to be applied after de-duplication (via the Distinct setting).",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Faceting",
                                              ],
                                            },
                                            "facets": {
                                              "default": [],
                                              "description": "Retrieve facets and their facet values.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Faceting",
                                              ],
                                            },
                                            "filters": {
                                              "default": "",
                                              "description": "Filter the query with numeric, facet and/or tag filters.",
                                              "type": "string",
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "getRankingInfo": {
                                              "default": false,
                                              "description": "Retrieve detailed ranking information.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Advanced",
                                              ],
                                            },
                                            "insideBoundingBox": {
                                              "description": "Search inside a rectangular area (in geo coordinates).",
                                              "items": {
                                                "format": "double",
                                                "type": "number",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "insidePolygon": {
                                              "description": "Search inside a polygon (in geo coordinates).",
                                              "items": {
                                                "format": "double",
                                                "type": "number",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "length": {
                                              "description": "Set the number of hits to retrieve (used only with offset).",
                                              "maximum": 1000,
                                              "minimum": 1,
                                              "type": "integer",
                                              "x-categories": [
                                                "Pagination",
                                              ],
                                            },
                                            "maxValuesPerFacet": {
                                              "default": 100,
                                              "description": "Maximum number of facet values to return for each facet during a regular search.",
                                              "type": "integer",
                                              "x-categories": [
                                                "Faceting",
                                              ],
                                            },
                                            "minimumAroundRadius": {
                                              "description": "Minimum radius (in meters) used for a geo search when aroundRadius is not set.",
                                              "minimum": 1,
                                              "type": "integer",
                                              "x-categories": [
                                                "Geo-Search",
                                              ],
                                            },
                                            "naturalLanguages": {
                                              "default": [],
                                              "description": "This parameter changes the default values of certain parameters and settings that work best for a natural language query, such as ignorePlurals, removeStopWords, removeWordsIfNoResults, analyticsTags and ruleContexts. These parameters and settings work well together when the query is formatted in natural language instead of keywords, for example when your user performs a voice search.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Languages",
                                              ],
                                            },
                                            "numericFilters": {
                                              "description": "Filter on numeric attributes.",
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "oneOf": [
                                                      {
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      {
                                                        "type": "string",
                                                      },
                                                    ],
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "offset": {
                                              "description": "Specify the offset of the first hit to return.",
                                              "type": "integer",
                                              "x-categories": [
                                                "Pagination",
                                              ],
                                            },
                                            "optionalFilters": {
                                              "description": "Create filters for ranking purposes, where records that match the filter are ranked higher, or lower in the case of a negative optional filter.",
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "oneOf": [
                                                      {
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      {
                                                        "type": "string",
                                                      },
                                                    ],
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "page": {
                                              "default": 0,
                                              "description": "Specify the page to retrieve.",
                                              "type": "integer",
                                              "x-categories": [
                                                "Pagination",
                                              ],
                                            },
                                            "percentileComputation": {
                                              "default": true,
                                              "description": "Whether to include or exclude a query from the processing-time percentile computation.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Advanced",
                                              ],
                                            },
                                            "personalizationImpact": {
                                              "default": 100,
                                              "description": "Define the impact of the Personalization feature.",
                                              "type": "integer",
                                              "x-categories": [
                                                "Personalization",
                                              ],
                                            },
                                            "reRankingApplyFilter": {
                                              "description": "When Dynamic Re-Ranking is enabled, only records that match these filters will be impacted by Dynamic Re-Ranking.",
                                              "nullable": true,
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "oneOf": [
                                                      {
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      {
                                                        "type": "string",
                                                      },
                                                    ],
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "ruleContexts": {
                                              "default": [],
                                              "description": "Enables contextual rules.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                              "x-categories": [
                                                "Rules",
                                              ],
                                            },
                                            "similarQuery": {
                                              "default": "",
                                              "description": "Overrides the query parameter and performs a more generic search that can be used to find \\"similar\\" results.",
                                              "type": "string",
                                              "x-categories": [
                                                "Search",
                                              ],
                                            },
                                            "sortFacetValuesBy": {
                                              "default": "count",
                                              "description": "Controls how facet values are fetched.",
                                              "type": "string",
                                              "x-categories": [
                                                "Faceting",
                                              ],
                                            },
                                            "sumOrFiltersScores": {
                                              "default": false,
                                              "description": "Determines how to calculate the total score for filtering.",
                                              "type": "boolean",
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "tagFilters": {
                                              "description": "Filter hits by tags.",
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "oneOf": [
                                                      {
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      {
                                                        "type": "string",
                                                      },
                                                    ],
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                              "x-categories": [
                                                "Filtering",
                                              ],
                                            },
                                            "userToken": {
                                              "description": "Associates a certain user token with the current search.",
                                              "type": "string",
                                              "x-categories": [
                                                "Personalization",
                                              ],
                                            },
                                          },
                                          "type": "object",
                                        },
                                      ],
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "advancedSyntax": {
                                          "default": false,
                                          "description": "Enables the advanced query syntax.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "advancedSyntaxFeatures": {
                                          "default": [
                                            "exactPhrase",
                                            "excludeWords",
                                          ],
                                          "description": "Allows you to specify which advanced syntax features are active when ‘advancedSyntax' is enabled.",
                                          "items": {
                                            "enum": [
                                              "exactPhrase",
                                              "excludeWords",
                                            ],
                                            "type": "string",
                                            "x-categories": [
                                              "Query strategy",
                                            ],
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "allowTyposOnNumericTokens": {
                                          "default": true,
                                          "description": "Whether to allow typos on numbers (\\"numeric tokens\\") in the query string.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Typos",
                                          ],
                                        },
                                        "alternativesAsExact": {
                                          "default": [
                                            "ignorePlurals",
                                            "singleWordSynonym",
                                          ],
                                          "description": "List of alternatives that should be considered an exact match by the exact ranking criterion.",
                                          "items": {
                                            "enum": [
                                              "ignorePlurals",
                                              "singleWordSynonym",
                                              "multiWordsSynonym",
                                            ],
                                            "type": "string",
                                            "x-categories": [
                                              "Query strategy",
                                            ],
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "attributeCriteriaComputedByMinProximity": {
                                          "default": false,
                                          "description": "When attribute is ranked above proximity in your ranking formula, proximity is used to select which searchable attribute is matched in the attribute ranking stage.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "attributeForDistinct": {
                                          "description": "Name of the de-duplication attribute to be used with the distinct feature.",
                                          "type": "string",
                                        },
                                        "attributesForFaceting": {
                                          "default": [],
                                          "description": "The complete list of attributes that will be used for faceting.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Faceting",
                                          ],
                                        },
                                        "attributesToHighlight": {
                                          "description": "List of attributes to highlight.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "attributesToRetrieve": {
                                          "default": [
                                            "*",
                                          ],
                                          "description": "This parameter controls which attributes to retrieve and which not to retrieve.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Attributes",
                                          ],
                                        },
                                        "attributesToSnippet": {
                                          "default": [],
                                          "description": "List of attributes to snippet, with an optional maximum number of words to snippet.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "customRanking": {
                                          "default": [],
                                          "description": "Specifies the custom ranking criterion.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Ranking",
                                          ],
                                        },
                                        "decompoundQuery": {
                                          "default": true,
                                          "description": "Splits compound words into their composing atoms in the query.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Languages",
                                          ],
                                        },
                                        "disableExactOnAttributes": {
                                          "default": [],
                                          "description": "List of attributes on which you want to disable the exact ranking criterion.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "disableTypoToleranceOnAttributes": {
                                          "default": [],
                                          "description": "List of attributes on which you want to disable typo tolerance.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Typos",
                                          ],
                                        },
                                        "distinct": {
                                          "description": "Enables de-duplication or grouping of results.",
                                          "oneOf": [
                                            {
                                              "type": "boolean",
                                            },
                                            {
                                              "default": 0,
                                              "maximum": 4,
                                              "minimum": 0,
                                              "type": "integer",
                                            },
                                          ],
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "enablePersonalization": {
                                          "default": false,
                                          "description": "Enable the Personalization feature.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Personalization",
                                          ],
                                        },
                                        "enableRules": {
                                          "default": true,
                                          "description": "Whether Rules should be globally enabled.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Rules",
                                          ],
                                        },
                                        "exactOnSingleWordQuery": {
                                          "default": "attribute",
                                          "description": "Controls how the exact ranking criterion is computed when the query contains only one word.",
                                          "enum": [
                                            "attribute",
                                            "none",
                                            "word",
                                          ],
                                          "type": "string",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "highlightPostTag": {
                                          "default": "</em>",
                                          "description": "The HTML string to insert after the highlighted parts in all highlight and snippet results.",
                                          "type": "string",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "highlightPreTag": {
                                          "default": "<em>",
                                          "description": "The HTML string to insert before the highlighted parts in all highlight and snippet results.",
                                          "type": "string",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "hitsPerPage": {
                                          "default": 20,
                                          "description": "Set the number of hits per page.",
                                          "type": "integer",
                                          "x-categories": [
                                            "Pagination",
                                          ],
                                        },
                                        "ignorePlurals": {
                                          "description": "Treats singular, plurals, and other forms of declensions as matching terms.
ignorePlurals is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the ignore plurals functionality, where singulars and plurals are considered equivalent (foot = feet). The languages supported here are either every language (this is the default, see list of languages below), or those set by queryLanguages. false: disables ignore plurals, where singulars and plurals are not considered the same for matching purposes (foot will not find feet).
",
                                          "oneOf": [
                                            {
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            {
                                              "default": false,
                                              "type": "boolean",
                                            },
                                          ],
                                          "x-categories": [
                                            "Languages",
                                          ],
                                        },
                                        "keepDiacriticsOnCharacters": {
                                          "default": "",
                                          "description": "List of characters that the engine shouldn't automatically normalize.",
                                          "type": "string",
                                          "x-categories": [
                                            "Languages",
                                          ],
                                        },
                                        "maxFacetHits": {
                                          "default": 10,
                                          "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                                          "maximum": 100,
                                          "type": "integer",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "minProximity": {
                                          "default": 1,
                                          "description": "Precision of the proximity ranking criterion.",
                                          "maximum": 7,
                                          "minimum": 1,
                                          "type": "integer",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "minWordSizefor1Typo": {
                                          "default": 4,
                                          "description": "Minimum number of characters a word in the query string must contain to accept matches with 1 typo.",
                                          "type": "integer",
                                          "x-categories": [
                                            "Typos",
                                          ],
                                        },
                                        "minWordSizefor2Typos": {
                                          "default": 8,
                                          "description": "Minimum number of characters a word in the query string must contain to accept matches with 2 typos.",
                                          "type": "integer",
                                          "x-categories": [
                                            "Typos",
                                          ],
                                        },
                                        "optionalWords": {
                                          "default": [],
                                          "description": "A list of words that should be considered as optional when found in the query.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "queryLanguages": {
                                          "default": [],
                                          "description": "Sets the languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Languages",
                                          ],
                                        },
                                        "queryType": {
                                          "default": "prefixLast",
                                          "description": "Controls if and how query words are interpreted as prefixes.",
                                          "enum": [
                                            "prefixLast",
                                            "prefixAll",
                                            "prefixNone",
                                          ],
                                          "type": "string",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "ranking": {
                                          "default": [
                                            "typo",
                                            "geo",
                                            "words",
                                            "filters",
                                            "proximity",
                                            "attribute",
                                            "exact",
                                            "custom",
                                          ],
                                          "description": "Controls how Algolia should sort your results.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Ranking",
                                          ],
                                        },
                                        "relevancyStrictness": {
                                          "default": 100,
                                          "description": "Controls the relevancy threshold below which less relevant results aren't included in the results.",
                                          "type": "integer",
                                          "x-categories": [
                                            "Ranking",
                                          ],
                                        },
                                        "removeStopWords": {
                                          "description": "Removes stop (common) words from the query before executing it.
removeStopWords is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the stop word functionality, ensuring that stop words are removed from consideration in a search. The languages supported here are either every language, or those set by queryLanguages. false: disables stop word functionality, allowing stop words to be taken into account in a search.
",
                                          "oneOf": [
                                            {
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            {
                                              "default": false,
                                              "type": "boolean",
                                            },
                                          ],
                                          "x-categories": [
                                            "Languages",
                                          ],
                                        },
                                        "removeWordsIfNoResults": {
                                          "default": "none",
                                          "description": "Selects a strategy to remove words from the query when it doesn't match any hits.",
                                          "enum": [
                                            "none",
                                            "lastWords",
                                            "firstWords",
                                            "allOptional",
                                          ],
                                          "type": "string",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "renderingContent": {
                                          "additionalProperties": false,
                                          "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                          "properties": {
                                            "facetOrdering": {
                                              "additionalProperties": false,
                                              "description": "Defining how facets should be ordered.",
                                              "properties": {
                                                "facets": {
                                                  "additionalProperties": false,
                                                  "description": "The ordering of facets (widgets).",
                                                  "properties": {
                                                    "order": {
                                                      "description": "Pinned order of facet lists.",
                                                      "items": {
                                                        "type": "string",
                                                      },
                                                      "type": "array",
                                                    },
                                                  },
                                                  "type": "object",
                                                },
                                                "values": {
                                                  "additionalProperties": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                      "order": {
                                                        "description": "Pinned order of facet lists.",
                                                        "items": {
                                                          "type": "string",
                                                        },
                                                        "type": "array",
                                                      },
                                                      "sortRemainingBy": {
                                                        "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                                        "enum": [
                                                          "count",
                                                          "alpha",
                                                          "hidden",
                                                        ],
                                                        "type": "string",
                                                      },
                                                    },
                                                    "type": "object",
                                                  },
                                                  "description": "The ordering of facet values, within an individual list.",
                                                  "type": "object",
                                                },
                                              },
                                              "type": "object",
                                            },
                                          },
                                          "type": "object",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "replaceSynonymsInHighlight": {
                                          "default": false,
                                          "description": "Whether to highlight and snippet the original word that matches the synonym or the synonym itself.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "responseFields": {
                                          "default": [],
                                          "description": "Choose which fields to return in the API response. This parameters applies to search and browse queries.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "restrictHighlightAndSnippetArrays": {
                                          "default": false,
                                          "description": "Restrict highlighting and snippeting to items that matched the query.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "restrictSearchableAttributes": {
                                          "default": [],
                                          "description": "Restricts a given query to look in only a subset of your searchable attributes.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                          "x-categories": [
                                            "Attributes",
                                          ],
                                        },
                                        "snippetEllipsisText": {
                                          "default": "…",
                                          "description": "String used as an ellipsis indicator when a snippet is truncated.",
                                          "type": "string",
                                          "x-categories": [
                                            "Highlighting and Snippeting",
                                          ],
                                        },
                                        "synonyms": {
                                          "default": true,
                                          "description": "Whether to take into account an index's synonyms for a particular search.",
                                          "type": "boolean",
                                          "x-categories": [
                                            "Advanced",
                                          ],
                                        },
                                        "typoTolerance": {
                                          "description": "Controls whether typo tolerance is enabled and how it is applied.",
                                          "oneOf": [
                                            {
                                              "default": true,
                                              "type": "boolean",
                                            },
                                            {
                                              "enum": [
                                                "min",
                                                "strict",
                                              ],
                                              "type": "string",
                                            },
                                          ],
                                          "x-categories": [
                                            "Typos",
                                          ],
                                        },
                                      },
                                      "type": "object",
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              "properties": {
                                "facet": {
                                  "description": "The \`facet\` name.",
                                  "type": "string",
                                },
                                "facetQuery": {
                                  "default": "",
                                  "description": "Text to search inside the facet's values.",
                                  "type": "string",
                                },
                                "indexName": {
                                  "description": "The Algolia index name.",
                                  "example": "products",
                                  "type": "string",
                                },
                                "maxFacetHits": {
                                  "default": 10,
                                  "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                                  "maximum": 100,
                                  "type": "integer",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "type": {
                                  "default": "facet",
                                  "description": "Perform a search query with \`default\`, will search for facet values if \`facet\` is given.",
                                  "enum": [
                                    "facet",
                                  ],
                                  "type": "string",
                                },
                              },
                              "required": [
                                "indexName",
                                "type",
                                "facet",
                              ],
                              "type": "object",
                            },
                          ],
                        },
                      ],
                    },
                    "type": "array",
                  },
                  "strategy": {
                    "enum": [
                      "none",
                      "stopIfEnoughMatches",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "requests",
                ],
                "title": "searchMethodParams",
                "type": "object",
              },
            },
          },
          "description": "The \`search\` requests and strategy.",
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "results": {
                      "items": {
                        "allOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "abTestID": {
                                "description": "If a search encounters an index that is being A/B tested, abTestID reports the ongoing A/B test ID.",
                                "type": "integer",
                              },
                              "abTestVariantID": {
                                "description": "If a search encounters an index that is being A/B tested, abTestVariantID reports the variant ID of the index used (starting at 1).",
                                "type": "integer",
                              },
                              "aroundLatLng": {
                                "description": "The computed geo location.",
                                "pattern": "^(-?\\\\d+(\\\\.\\\\d+)?),\\\\s*(-?\\\\d+(\\\\.\\\\d+)?)$",
                                "type": "string",
                              },
                              "automaticRadius": {
                                "description": "The automatically computed radius. For legacy reasons, this parameter is a string and not an integer.",
                                "type": "string",
                              },
                              "exhaustiveFacetsCount": {
                                "description": "Whether the facet count is exhaustive or approximate.",
                                "type": "boolean",
                              },
                              "exhaustiveNbHits": {
                                "description": "Indicate if the nbHits count was exhaustive or approximate.",
                                "type": "boolean",
                              },
                              "exhaustiveTypo": {
                                "description": "Indicate if the typo-tolerance search was exhaustive or approximate (only included when typo-tolerance is enabled).",
                                "type": "boolean",
                              },
                              "facets": {
                                "additionalProperties": {
                                  "additionalProperties": {
                                    "type": "integer",
                                  },
                                  "type": "object",
                                },
                                "description": "A mapping of each facet name to the corresponding facet counts.",
                                "example": {
                                  "category": {
                                    "food": 1,
                                    "tech": 42,
                                  },
                                },
                                "title": "facets",
                                "type": "object",
                              },
                              "facets_stats": {
                                "additionalProperties": {
                                  "properties": {
                                    "avg": {
                                      "description": "The average facet value in the result set.",
                                      "type": "integer",
                                    },
                                    "max": {
                                      "description": "The maximum value in the result set.",
                                      "type": "integer",
                                    },
                                    "min": {
                                      "description": "The minimum value in the result set.",
                                      "type": "integer",
                                    },
                                    "sum": {
                                      "description": "The sum of all values in the result set.",
                                      "type": "integer",
                                    },
                                  },
                                  "title": "facetStats",
                                  "type": "object",
                                },
                                "description": "Statistics for numerical facets.",
                                "title": "facetsStats",
                                "type": "object",
                              },
                              "hitsPerPage": {
                                "default": 20,
                                "description": "Set the number of hits per page.",
                                "type": "integer",
                                "x-categories": [
                                  "Pagination",
                                ],
                              },
                              "index": {
                                "description": "Index name used for the query.",
                                "example": "indexName",
                                "type": "string",
                              },
                              "indexUsed": {
                                "description": "Index name used for the query. In the case of an A/B test, the targeted index isn't always the index used by the query.",
                                "example": "indexNameAlt",
                                "type": "string",
                              },
                              "message": {
                                "description": "Used to return warnings about the query.",
                                "type": "string",
                              },
                              "nbHits": {
                                "description": "Number of hits that the search query matched.",
                                "example": 20,
                                "type": "integer",
                              },
                              "nbPages": {
                                "description": "Number of pages available for the current query.",
                                "example": 1,
                                "type": "integer",
                              },
                              "nbSortedHits": {
                                "description": "The number of hits selected and sorted by the relevant sort algorithm.",
                                "example": 20,
                                "type": "integer",
                              },
                              "page": {
                                "default": 0,
                                "description": "Specify the page to retrieve.",
                                "type": "integer",
                                "x-categories": [
                                  "Pagination",
                                ],
                              },
                              "params": {
                                "description": "A url-encoded string of all search parameters.",
                                "example": "query=a&hitsPerPage=20",
                                "type": "string",
                              },
                              "parsedQuery": {
                                "description": "The query string that will be searched, after normalization.",
                                "type": "string",
                              },
                              "processingTimeMS": {
                                "description": "Time the server took to process the request, in milliseconds.",
                                "example": 20,
                                "type": "integer",
                              },
                              "query": {
                                "default": "",
                                "description": "The text to search in the index.",
                                "type": "string",
                                "x-categories": [
                                  "Search",
                                ],
                              },
                              "queryAfterRemoval": {
                                "description": "A markup text indicating which parts of the original query have been removed in order to retrieve a non-empty result set.",
                                "type": "string",
                              },
                              "renderingContent": {
                                "additionalProperties": false,
                                "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                "properties": {
                                  "facetOrdering": {
                                    "additionalProperties": false,
                                    "description": "Defining how facets should be ordered.",
                                    "properties": {
                                      "facets": {
                                        "additionalProperties": false,
                                        "description": "The ordering of facets (widgets).",
                                        "properties": {
                                          "order": {
                                            "description": "Pinned order of facet lists.",
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                        },
                                        "type": "object",
                                      },
                                      "values": {
                                        "additionalProperties": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "order": {
                                              "description": "Pinned order of facet lists.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            "sortRemainingBy": {
                                              "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                              "enum": [
                                                "count",
                                                "alpha",
                                                "hidden",
                                              ],
                                              "type": "string",
                                            },
                                          },
                                          "type": "object",
                                        },
                                        "description": "The ordering of facet values, within an individual list.",
                                        "type": "object",
                                      },
                                    },
                                    "type": "object",
                                  },
                                },
                                "type": "object",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "serverUsed": {
                                "description": "Actual host name of the server that processed the request.",
                                "type": "string",
                              },
                              "userData": {
                                "default": {},
                                "description": "Lets you store custom data in your indices.",
                                "type": "object",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                            },
                            "required": [
                              "nbHits",
                              "page",
                              "nbPages",
                              "hitsPerPage",
                              "processingTimeMS",
                              "exhaustiveNbHits",
                              "query",
                              "params",
                            ],
                            "type": "object",
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "hits": {
                                "items": {
                                  "additionalProperties": true,
                                  "description": "A single hit.",
                                  "properties": {
                                    "_distinctSeqID": {
                                      "type": "integer",
                                    },
                                    "_highlightResult": {
                                      "additionalProperties": {
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "Show highlighted section and words matched on a query.",
                                            "properties": {
                                              "fullyHighlighted": {
                                                "description": "Whether the entire attribute value is highlighted.",
                                                "type": "boolean",
                                              },
                                              "matchLevel": {
                                                "description": "Indicates how well the attribute matched the search query.",
                                                "enum": [
                                                  "none",
                                                  "partial",
                                                  "full",
                                                ],
                                                "type": "string",
                                              },
                                              "matchedWords": {
                                                "description": "List of words from the query that matched the object.",
                                                "items": {
                                                  "type": "string",
                                                },
                                                "type": "array",
                                              },
                                              "value": {
                                                "description": "Markup text with occurrences highlighted.",
                                                "example": "<em>George</em> <em>Clo</em>oney",
                                                "type": "string",
                                              },
                                            },
                                            "required": [
                                              "value",
                                              "matchLevel",
                                              "matchedWords",
                                            ],
                                            "type": "object",
                                          },
                                          {
                                            "items": {
                                              "additionalProperties": false,
                                              "description": "Show highlighted section and words matched on a query.",
                                              "properties": {
                                                "fullyHighlighted": {
                                                  "description": "Whether the entire attribute value is highlighted.",
                                                  "type": "boolean",
                                                },
                                                "matchLevel": {
                                                  "description": "Indicates how well the attribute matched the search query.",
                                                  "enum": [
                                                    "none",
                                                    "partial",
                                                    "full",
                                                  ],
                                                  "type": "string",
                                                },
                                                "matchedWords": {
                                                  "description": "List of words from the query that matched the object.",
                                                  "items": {
                                                    "type": "string",
                                                  },
                                                  "type": "array",
                                                },
                                                "value": {
                                                  "description": "Markup text with occurrences highlighted.",
                                                  "example": "<em>George</em> <em>Clo</em>oney",
                                                  "type": "string",
                                                },
                                              },
                                              "required": [
                                                "value",
                                                "matchLevel",
                                                "matchedWords",
                                              ],
                                              "type": "object",
                                            },
                                            "type": "array",
                                          },
                                        ],
                                      },
                                      "description": "Show highlighted section and words matched on a query.",
                                      "type": "object",
                                    },
                                    "_rankingInfo": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "filters": {
                                          "description": "This field is reserved for advanced usage.",
                                          "type": "integer",
                                        },
                                        "firstMatchedWord": {
                                          "description": "Position of the most important matched attribute in the attributes to index list.",
                                          "type": "integer",
                                        },
                                        "geoDistance": {
                                          "description": "Distance between the geo location in the search query and the best matching geo location in the record, divided by the geo precision (in meters).",
                                          "type": "integer",
                                        },
                                        "geoPrecision": {
                                          "description": "Precision used when computing the geo distance, in meters.",
                                          "type": "integer",
                                        },
                                        "matchedGeoLocation": {
                                          "properties": {
                                            "distance": {
                                              "description": "Distance between the matched location and the search location (in meters).",
                                              "type": "integer",
                                            },
                                            "lat": {
                                              "description": "Latitude of the matched location.",
                                              "format": "double",
                                              "type": "number",
                                            },
                                            "lng": {
                                              "description": "Longitude of the matched location.",
                                              "format": "double",
                                              "type": "number",
                                            },
                                          },
                                          "type": "object",
                                        },
                                        "nbExactWords": {
                                          "description": "Number of exactly matched words.",
                                          "type": "integer",
                                        },
                                        "nbTypos": {
                                          "description": "Number of typos encountered when matching the record.",
                                          "type": "integer",
                                        },
                                        "personalization": {
                                          "properties": {
                                            "filtersScore": {
                                              "description": "The score of the filters.",
                                              "type": "integer",
                                            },
                                            "rankingScore": {
                                              "description": "The score of the ranking.",
                                              "type": "integer",
                                            },
                                            "score": {
                                              "description": "The score of the event.",
                                              "type": "integer",
                                            },
                                          },
                                          "type": "object",
                                        },
                                        "promoted": {
                                          "description": "Present and set to true if a Rule promoted the hit.",
                                          "type": "boolean",
                                        },
                                        "promotedByReRanking": {
                                          "description": "Wether the record are promoted by the re-ranking strategy.",
                                          "type": "boolean",
                                        },
                                        "proximityDistance": {
                                          "description": "When the query contains more than one word, the sum of the distances between matched words (in meters).",
                                          "type": "integer",
                                        },
                                        "userScore": {
                                          "description": "Custom ranking for the object, expressed as a single integer value.",
                                          "type": "integer",
                                        },
                                        "words": {
                                          "description": "Number of matched words, including prefixes and typos.",
                                          "type": "integer",
                                        },
                                      },
                                      "required": [
                                        "promoted",
                                        "nbTypos",
                                        "firstMatchedWord",
                                        "geoDistance",
                                        "nbExactWords",
                                        "words",
                                        "filters",
                                        "userScore",
                                      ],
                                      "type": "object",
                                    },
                                    "_snippetResult": {
                                      "additionalProperties": {
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "Snippeted attributes show parts of the matched attributes. Only returned when attributesToSnippet is non-empty.",
                                            "properties": {
                                              "matchLevel": {
                                                "description": "Indicates how well the attribute matched the search query.",
                                                "enum": [
                                                  "none",
                                                  "partial",
                                                  "full",
                                                ],
                                                "type": "string",
                                              },
                                              "value": {
                                                "description": "Markup text with occurrences highlighted.",
                                                "example": "<em>George</em> <em>Clo</em>oney",
                                                "type": "string",
                                              },
                                            },
                                            "required": [
                                              "value",
                                              "matchLevel",
                                            ],
                                            "type": "object",
                                          },
                                          {
                                            "items": {
                                              "additionalProperties": false,
                                              "description": "Snippeted attributes show parts of the matched attributes. Only returned when attributesToSnippet is non-empty.",
                                              "properties": {
                                                "matchLevel": {
                                                  "description": "Indicates how well the attribute matched the search query.",
                                                  "enum": [
                                                    "none",
                                                    "partial",
                                                    "full",
                                                  ],
                                                  "type": "string",
                                                },
                                                "value": {
                                                  "description": "Markup text with occurrences highlighted.",
                                                  "example": "<em>George</em> <em>Clo</em>oney",
                                                  "type": "string",
                                                },
                                              },
                                              "required": [
                                                "value",
                                                "matchLevel",
                                              ],
                                              "type": "object",
                                            },
                                            "type": "array",
                                          },
                                        ],
                                      },
                                      "description": "Snippeted attributes show parts of the matched attributes. Only returned when attributesToSnippet is non-empty.",
                                      "type": "object",
                                    },
                                    "objectID": {
                                      "description": "Unique identifier of the object.",
                                      "type": "string",
                                    },
                                  },
                                  "required": [
                                    "objectID",
                                  ],
                                  "type": "object",
                                  "x-is-generic": true,
                                },
                                "type": "array",
                              },
                            },
                            "required": [
                              "hits",
                            ],
                            "type": "object",
                          },
                        ],
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "results",
                  ],
                  "title": "searchResponses",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Search multiple indices.",
        "tags": [
          "Search",
        ],
        "x-cacheable": true,
        "x-legacy-signature": true,
        "x-use-read-transporter": true,
      },
    },
    "/1/indexes/{indexName}": {
      "delete": {
        "description": "Delete an existing index.",
        "operationId": "deleteIndex",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and a deletedAt timestamp.",
                  "properties": {
                    "deletedAt": {
                      "description": "Date of deletion (ISO-8601 format).",
                      "type": "string",
                    },
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": [
                    "taskID",
                    "deletedAt",
                  ],
                  "title": "deletedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Delete index.",
        "tags": [
          "Indices",
        ],
      },
      "post": {
        "description": "Add an object to the index, automatically assigning it an object ID.",
        "operationId": "saveObject",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
              },
            },
          },
          "description": "The Algolia record.",
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "createdAt": {
                      "type": "string",
                    },
                    "objectID": {
                      "description": "Unique identifier of the object.",
                      "type": "string",
                    },
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": [
                    "taskID",
                    "createdAt",
                  ],
                  "title": "saveObjectResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Add an object to the index.",
        "tags": [
          "Records",
        ],
      },
    },
    "/1/indexes/{indexName}/batch": {
      "post": {
        "description": "Perform multiple write operations targeting one index, in a single API call.",
        "operationId": "batch",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "The \`batch\` parameters.",
                "properties": {
                  "requests": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "action": {
                          "description": "type of operation.",
                          "enum": [
                            "addObject",
                            "updateObject",
                            "partialUpdateObject",
                            "partialUpdateObjectNoCreate",
                            "deleteObject",
                            "delete",
                            "clear",
                          ],
                          "type": "string",
                        },
                        "body": {
                          "description": "arguments to the operation (depends on the type of the operation).",
                          "type": "object",
                        },
                      },
                      "required": [
                        "action",
                        "body",
                      ],
                      "title": "batchRequest",
                      "type": "object",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "requests",
                ],
                "title": "batchWriteParams",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "objectIDs": {
                      "description": "List of objectID.",
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": [
                    "taskID",
                    "objectIDs",
                  ],
                  "title": "batchResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Batch operations to one index.",
        "tags": [
          "Records",
        ],
      },
    },
    "/1/indexes/{indexName}/browse": {
      "post": {
        "description": "This method allows you to retrieve all index content. It can retrieve up to 1,000 records per call and supports full text search and filters.
For performance reasons, some features are not supported, including \`distinct\`, sorting by \`typos\`, \`words\` or \`geo distance\`.
When there is more content to be browsed, the response contains a cursor field. This cursor has to be passed to the subsequent call to browse in order to get the next page of results. When the end of the index has been reached, the cursor field is absent from the response.
",
        "operationId": "browse",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "params": {
                        "default": "",
                        "description": "Search parameters as URL-encoded query string.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  {
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "allOf": [
                              {
                                "additionalProperties": false,
                                "properties": {
                                  "query": {
                                    "default": "",
                                    "description": "The text to search in the index.",
                                    "type": "string",
                                    "x-categories": [
                                      "Search",
                                    ],
                                  },
                                },
                                "type": "object",
                              },
                              {
                                "additionalProperties": false,
                                "properties": {
                                  "analytics": {
                                    "default": true,
                                    "description": "Whether the current query will be taken into account in the Analytics.",
                                    "type": "boolean",
                                    "x-categories": [
                                      "Analytics",
                                    ],
                                  },
                                  "analyticsTags": {
                                    "default": [],
                                    "description": "List of tags to apply to the query for analytics purposes.",
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                    "x-categories": [
                                      "Analytics",
                                    ],
                                  },
                                  "aroundLatLng": {
                                    "default": "",
                                    "description": "Search for entries around a central geolocation, enabling a geo search within a circular area.",
                                    "type": "string",
                                    "x-categories": [
                                      "Geo-Search",
                                    ],
                                  },
                                  "aroundLatLngViaIP": {
                                    "default": false,
                                    "description": "Search for entries around a given location automatically computed from the requester's IP address.",
                                    "type": "boolean",
                                    "x-categories": [
                                      "Geo-Search",
                                    ],
                                  },
                                  "aroundPrecision": {
                                    "default": 10,
                                    "description": "Precision of geo search (in meters), to add grouping by geo location to the ranking formula.",
                                    "type": "integer",
                                    "x-categories": [
                                      "Geo-Search",
                                    ],
                                  },
                                  "aroundRadius": {
                                    "description": "Define the maximum radius for a geo search (in meters).",
                                    "oneOf": [
                                      {
                                        "minimum": 1,
                                        "type": "integer",
                                      },
                                      {
                                        "enum": [
                                          "all",
                                        ],
                                        "type": "string",
                                      },
                                    ],
                                    "x-categories": [
                                      "Geo-Search",
                                    ],
                                  },
                                  "clickAnalytics": {
                                    "default": false,
                                    "description": "Enable the Click Analytics feature.",
                                    "type": "boolean",
                                    "x-categories": [
                                      "Analytics",
                                    ],
                                  },
                                  "enableABTest": {
                                    "default": true,
                                    "description": "Whether this search should participate in running AB tests.",
                                    "type": "boolean",
                                    "x-categories": [
                                      "Advanced",
                                    ],
                                  },
                                  "enableReRanking": {
                                    "default": true,
                                    "description": "Whether this search should use AI Re-Ranking.",
                                    "type": "boolean",
                                    "x-categories": [
                                      "Advanced",
                                    ],
                                  },
                                  "facetFilters": {
                                    "description": "Filter hits by facet value.",
                                    "oneOf": [
                                      {
                                        "items": {
                                          "oneOf": [
                                            {
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            {
                                              "type": "string",
                                            },
                                          ],
                                        },
                                        "type": "array",
                                      },
                                      {
                                        "type": "string",
                                      },
                                    ],
                                    "x-categories": [
                                      "Filtering",
                                    ],
                                  },
                                  "facetingAfterDistinct": {
                                    "default": false,
                                    "description": "Force faceting to be applied after de-duplication (via the Distinct setting).",
                                    "type": "boolean",
                                    "x-categories": [
                                      "Faceting",
                                    ],
                                  },
                                  "facets": {
                                    "default": [],
                                    "description": "Retrieve facets and their facet values.",
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                    "x-categories": [
                                      "Faceting",
                                    ],
                                  },
                                  "filters": {
                                    "default": "",
                                    "description": "Filter the query with numeric, facet and/or tag filters.",
                                    "type": "string",
                                    "x-categories": [
                                      "Filtering",
                                    ],
                                  },
                                  "getRankingInfo": {
                                    "default": false,
                                    "description": "Retrieve detailed ranking information.",
                                    "type": "boolean",
                                    "x-categories": [
                                      "Advanced",
                                    ],
                                  },
                                  "insideBoundingBox": {
                                    "description": "Search inside a rectangular area (in geo coordinates).",
                                    "items": {
                                      "format": "double",
                                      "type": "number",
                                    },
                                    "type": "array",
                                    "x-categories": [
                                      "Geo-Search",
                                    ],
                                  },
                                  "insidePolygon": {
                                    "description": "Search inside a polygon (in geo coordinates).",
                                    "items": {
                                      "format": "double",
                                      "type": "number",
                                    },
                                    "type": "array",
                                    "x-categories": [
                                      "Geo-Search",
                                    ],
                                  },
                                  "length": {
                                    "description": "Set the number of hits to retrieve (used only with offset).",
                                    "maximum": 1000,
                                    "minimum": 1,
                                    "type": "integer",
                                    "x-categories": [
                                      "Pagination",
                                    ],
                                  },
                                  "maxValuesPerFacet": {
                                    "default": 100,
                                    "description": "Maximum number of facet values to return for each facet during a regular search.",
                                    "type": "integer",
                                    "x-categories": [
                                      "Faceting",
                                    ],
                                  },
                                  "minimumAroundRadius": {
                                    "description": "Minimum radius (in meters) used for a geo search when aroundRadius is not set.",
                                    "minimum": 1,
                                    "type": "integer",
                                    "x-categories": [
                                      "Geo-Search",
                                    ],
                                  },
                                  "naturalLanguages": {
                                    "default": [],
                                    "description": "This parameter changes the default values of certain parameters and settings that work best for a natural language query, such as ignorePlurals, removeStopWords, removeWordsIfNoResults, analyticsTags and ruleContexts. These parameters and settings work well together when the query is formatted in natural language instead of keywords, for example when your user performs a voice search.",
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                    "x-categories": [
                                      "Languages",
                                    ],
                                  },
                                  "numericFilters": {
                                    "description": "Filter on numeric attributes.",
                                    "oneOf": [
                                      {
                                        "items": {
                                          "oneOf": [
                                            {
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            {
                                              "type": "string",
                                            },
                                          ],
                                        },
                                        "type": "array",
                                      },
                                      {
                                        "type": "string",
                                      },
                                    ],
                                    "x-categories": [
                                      "Filtering",
                                    ],
                                  },
                                  "offset": {
                                    "description": "Specify the offset of the first hit to return.",
                                    "type": "integer",
                                    "x-categories": [
                                      "Pagination",
                                    ],
                                  },
                                  "optionalFilters": {
                                    "description": "Create filters for ranking purposes, where records that match the filter are ranked higher, or lower in the case of a negative optional filter.",
                                    "oneOf": [
                                      {
                                        "items": {
                                          "oneOf": [
                                            {
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            {
                                              "type": "string",
                                            },
                                          ],
                                        },
                                        "type": "array",
                                      },
                                      {
                                        "type": "string",
                                      },
                                    ],
                                    "x-categories": [
                                      "Filtering",
                                    ],
                                  },
                                  "page": {
                                    "default": 0,
                                    "description": "Specify the page to retrieve.",
                                    "type": "integer",
                                    "x-categories": [
                                      "Pagination",
                                    ],
                                  },
                                  "percentileComputation": {
                                    "default": true,
                                    "description": "Whether to include or exclude a query from the processing-time percentile computation.",
                                    "type": "boolean",
                                    "x-categories": [
                                      "Advanced",
                                    ],
                                  },
                                  "personalizationImpact": {
                                    "default": 100,
                                    "description": "Define the impact of the Personalization feature.",
                                    "type": "integer",
                                    "x-categories": [
                                      "Personalization",
                                    ],
                                  },
                                  "reRankingApplyFilter": {
                                    "description": "When Dynamic Re-Ranking is enabled, only records that match these filters will be impacted by Dynamic Re-Ranking.",
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "items": {
                                          "oneOf": [
                                            {
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            {
                                              "type": "string",
                                            },
                                          ],
                                        },
                                        "type": "array",
                                      },
                                      {
                                        "type": "string",
                                      },
                                    ],
                                    "x-categories": [
                                      "Filtering",
                                    ],
                                  },
                                  "ruleContexts": {
                                    "default": [],
                                    "description": "Enables contextual rules.",
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                    "x-categories": [
                                      "Rules",
                                    ],
                                  },
                                  "similarQuery": {
                                    "default": "",
                                    "description": "Overrides the query parameter and performs a more generic search that can be used to find \\"similar\\" results.",
                                    "type": "string",
                                    "x-categories": [
                                      "Search",
                                    ],
                                  },
                                  "sortFacetValuesBy": {
                                    "default": "count",
                                    "description": "Controls how facet values are fetched.",
                                    "type": "string",
                                    "x-categories": [
                                      "Faceting",
                                    ],
                                  },
                                  "sumOrFiltersScores": {
                                    "default": false,
                                    "description": "Determines how to calculate the total score for filtering.",
                                    "type": "boolean",
                                    "x-categories": [
                                      "Filtering",
                                    ],
                                  },
                                  "tagFilters": {
                                    "description": "Filter hits by tags.",
                                    "oneOf": [
                                      {
                                        "items": {
                                          "oneOf": [
                                            {
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            {
                                              "type": "string",
                                            },
                                          ],
                                        },
                                        "type": "array",
                                      },
                                      {
                                        "type": "string",
                                      },
                                    ],
                                    "x-categories": [
                                      "Filtering",
                                    ],
                                  },
                                  "userToken": {
                                    "description": "Associates a certain user token with the current search.",
                                    "type": "string",
                                    "x-categories": [
                                      "Personalization",
                                    ],
                                  },
                                },
                                "type": "object",
                              },
                            ],
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "advancedSyntax": {
                                "default": false,
                                "description": "Enables the advanced query syntax.",
                                "type": "boolean",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "advancedSyntaxFeatures": {
                                "default": [
                                  "exactPhrase",
                                  "excludeWords",
                                ],
                                "description": "Allows you to specify which advanced syntax features are active when ‘advancedSyntax' is enabled.",
                                "items": {
                                  "enum": [
                                    "exactPhrase",
                                    "excludeWords",
                                  ],
                                  "type": "string",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "type": "array",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "allowTyposOnNumericTokens": {
                                "default": true,
                                "description": "Whether to allow typos on numbers (\\"numeric tokens\\") in the query string.",
                                "type": "boolean",
                                "x-categories": [
                                  "Typos",
                                ],
                              },
                              "alternativesAsExact": {
                                "default": [
                                  "ignorePlurals",
                                  "singleWordSynonym",
                                ],
                                "description": "List of alternatives that should be considered an exact match by the exact ranking criterion.",
                                "items": {
                                  "enum": [
                                    "ignorePlurals",
                                    "singleWordSynonym",
                                    "multiWordsSynonym",
                                  ],
                                  "type": "string",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "type": "array",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "attributeCriteriaComputedByMinProximity": {
                                "default": false,
                                "description": "When attribute is ranked above proximity in your ranking formula, proximity is used to select which searchable attribute is matched in the attribute ranking stage.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "attributeForDistinct": {
                                "description": "Name of the de-duplication attribute to be used with the distinct feature.",
                                "type": "string",
                              },
                              "attributesForFaceting": {
                                "default": [],
                                "description": "The complete list of attributes that will be used for faceting.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Faceting",
                                ],
                              },
                              "attributesToHighlight": {
                                "description": "List of attributes to highlight.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "attributesToRetrieve": {
                                "default": [
                                  "*",
                                ],
                                "description": "This parameter controls which attributes to retrieve and which not to retrieve.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Attributes",
                                ],
                              },
                              "attributesToSnippet": {
                                "default": [],
                                "description": "List of attributes to snippet, with an optional maximum number of words to snippet.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "customRanking": {
                                "default": [],
                                "description": "Specifies the custom ranking criterion.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Ranking",
                                ],
                              },
                              "decompoundQuery": {
                                "default": true,
                                "description": "Splits compound words into their composing atoms in the query.",
                                "type": "boolean",
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "disableExactOnAttributes": {
                                "default": [],
                                "description": "List of attributes on which you want to disable the exact ranking criterion.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "disableTypoToleranceOnAttributes": {
                                "default": [],
                                "description": "List of attributes on which you want to disable typo tolerance.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Typos",
                                ],
                              },
                              "distinct": {
                                "description": "Enables de-duplication or grouping of results.",
                                "oneOf": [
                                  {
                                    "type": "boolean",
                                  },
                                  {
                                    "default": 0,
                                    "maximum": 4,
                                    "minimum": 0,
                                    "type": "integer",
                                  },
                                ],
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "enablePersonalization": {
                                "default": false,
                                "description": "Enable the Personalization feature.",
                                "type": "boolean",
                                "x-categories": [
                                  "Personalization",
                                ],
                              },
                              "enableRules": {
                                "default": true,
                                "description": "Whether Rules should be globally enabled.",
                                "type": "boolean",
                                "x-categories": [
                                  "Rules",
                                ],
                              },
                              "exactOnSingleWordQuery": {
                                "default": "attribute",
                                "description": "Controls how the exact ranking criterion is computed when the query contains only one word.",
                                "enum": [
                                  "attribute",
                                  "none",
                                  "word",
                                ],
                                "type": "string",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "highlightPostTag": {
                                "default": "</em>",
                                "description": "The HTML string to insert after the highlighted parts in all highlight and snippet results.",
                                "type": "string",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "highlightPreTag": {
                                "default": "<em>",
                                "description": "The HTML string to insert before the highlighted parts in all highlight and snippet results.",
                                "type": "string",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "hitsPerPage": {
                                "default": 20,
                                "description": "Set the number of hits per page.",
                                "type": "integer",
                                "x-categories": [
                                  "Pagination",
                                ],
                              },
                              "ignorePlurals": {
                                "description": "Treats singular, plurals, and other forms of declensions as matching terms.
ignorePlurals is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the ignore plurals functionality, where singulars and plurals are considered equivalent (foot = feet). The languages supported here are either every language (this is the default, see list of languages below), or those set by queryLanguages. false: disables ignore plurals, where singulars and plurals are not considered the same for matching purposes (foot will not find feet).
",
                                "oneOf": [
                                  {
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "default": false,
                                    "type": "boolean",
                                  },
                                ],
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "keepDiacriticsOnCharacters": {
                                "default": "",
                                "description": "List of characters that the engine shouldn't automatically normalize.",
                                "type": "string",
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "maxFacetHits": {
                                "default": 10,
                                "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                                "maximum": 100,
                                "type": "integer",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "minProximity": {
                                "default": 1,
                                "description": "Precision of the proximity ranking criterion.",
                                "maximum": 7,
                                "minimum": 1,
                                "type": "integer",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "minWordSizefor1Typo": {
                                "default": 4,
                                "description": "Minimum number of characters a word in the query string must contain to accept matches with 1 typo.",
                                "type": "integer",
                                "x-categories": [
                                  "Typos",
                                ],
                              },
                              "minWordSizefor2Typos": {
                                "default": 8,
                                "description": "Minimum number of characters a word in the query string must contain to accept matches with 2 typos.",
                                "type": "integer",
                                "x-categories": [
                                  "Typos",
                                ],
                              },
                              "optionalWords": {
                                "default": [],
                                "description": "A list of words that should be considered as optional when found in the query.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "queryLanguages": {
                                "default": [],
                                "description": "Sets the languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "queryType": {
                                "default": "prefixLast",
                                "description": "Controls if and how query words are interpreted as prefixes.",
                                "enum": [
                                  "prefixLast",
                                  "prefixAll",
                                  "prefixNone",
                                ],
                                "type": "string",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "ranking": {
                                "default": [
                                  "typo",
                                  "geo",
                                  "words",
                                  "filters",
                                  "proximity",
                                  "attribute",
                                  "exact",
                                  "custom",
                                ],
                                "description": "Controls how Algolia should sort your results.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Ranking",
                                ],
                              },
                              "relevancyStrictness": {
                                "default": 100,
                                "description": "Controls the relevancy threshold below which less relevant results aren't included in the results.",
                                "type": "integer",
                                "x-categories": [
                                  "Ranking",
                                ],
                              },
                              "removeStopWords": {
                                "description": "Removes stop (common) words from the query before executing it.
removeStopWords is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the stop word functionality, ensuring that stop words are removed from consideration in a search. The languages supported here are either every language, or those set by queryLanguages. false: disables stop word functionality, allowing stop words to be taken into account in a search.
",
                                "oneOf": [
                                  {
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "default": false,
                                    "type": "boolean",
                                  },
                                ],
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "removeWordsIfNoResults": {
                                "default": "none",
                                "description": "Selects a strategy to remove words from the query when it doesn't match any hits.",
                                "enum": [
                                  "none",
                                  "lastWords",
                                  "firstWords",
                                  "allOptional",
                                ],
                                "type": "string",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "renderingContent": {
                                "additionalProperties": false,
                                "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                "properties": {
                                  "facetOrdering": {
                                    "additionalProperties": false,
                                    "description": "Defining how facets should be ordered.",
                                    "properties": {
                                      "facets": {
                                        "additionalProperties": false,
                                        "description": "The ordering of facets (widgets).",
                                        "properties": {
                                          "order": {
                                            "description": "Pinned order of facet lists.",
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                        },
                                        "type": "object",
                                      },
                                      "values": {
                                        "additionalProperties": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "order": {
                                              "description": "Pinned order of facet lists.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            "sortRemainingBy": {
                                              "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                              "enum": [
                                                "count",
                                                "alpha",
                                                "hidden",
                                              ],
                                              "type": "string",
                                            },
                                          },
                                          "type": "object",
                                        },
                                        "description": "The ordering of facet values, within an individual list.",
                                        "type": "object",
                                      },
                                    },
                                    "type": "object",
                                  },
                                },
                                "type": "object",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "replaceSynonymsInHighlight": {
                                "default": false,
                                "description": "Whether to highlight and snippet the original word that matches the synonym or the synonym itself.",
                                "type": "boolean",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "responseFields": {
                                "default": [],
                                "description": "Choose which fields to return in the API response. This parameters applies to search and browse queries.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "restrictHighlightAndSnippetArrays": {
                                "default": false,
                                "description": "Restrict highlighting and snippeting to items that matched the query.",
                                "type": "boolean",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "restrictSearchableAttributes": {
                                "default": [],
                                "description": "Restricts a given query to look in only a subset of your searchable attributes.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Attributes",
                                ],
                              },
                              "snippetEllipsisText": {
                                "default": "…",
                                "description": "String used as an ellipsis indicator when a snippet is truncated.",
                                "type": "string",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "synonyms": {
                                "default": true,
                                "description": "Whether to take into account an index's synonyms for a particular search.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "typoTolerance": {
                                "description": "Controls whether typo tolerance is enabled and how it is applied.",
                                "oneOf": [
                                  {
                                    "default": true,
                                    "type": "boolean",
                                  },
                                  {
                                    "enum": [
                                      "min",
                                      "strict",
                                    ],
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Typos",
                                ],
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "cursor": {
                            "description": "Cursor indicating the location to resume browsing from. Must match the value returned by the previous call.",
                            "example": "jMDY3M2MwM2QwMWUxMmQwYWI0ZTN",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                ],
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "properties": {
                        "abTestID": {
                          "description": "If a search encounters an index that is being A/B tested, abTestID reports the ongoing A/B test ID.",
                          "type": "integer",
                        },
                        "abTestVariantID": {
                          "description": "If a search encounters an index that is being A/B tested, abTestVariantID reports the variant ID of the index used (starting at 1).",
                          "type": "integer",
                        },
                        "aroundLatLng": {
                          "description": "The computed geo location.",
                          "pattern": "^(-?\\\\d+(\\\\.\\\\d+)?),\\\\s*(-?\\\\d+(\\\\.\\\\d+)?)$",
                          "type": "string",
                        },
                        "automaticRadius": {
                          "description": "The automatically computed radius. For legacy reasons, this parameter is a string and not an integer.",
                          "type": "string",
                        },
                        "exhaustiveFacetsCount": {
                          "description": "Whether the facet count is exhaustive or approximate.",
                          "type": "boolean",
                        },
                        "exhaustiveNbHits": {
                          "description": "Indicate if the nbHits count was exhaustive or approximate.",
                          "type": "boolean",
                        },
                        "exhaustiveTypo": {
                          "description": "Indicate if the typo-tolerance search was exhaustive or approximate (only included when typo-tolerance is enabled).",
                          "type": "boolean",
                        },
                        "facets": {
                          "additionalProperties": {
                            "additionalProperties": {
                              "type": "integer",
                            },
                            "type": "object",
                          },
                          "description": "A mapping of each facet name to the corresponding facet counts.",
                          "example": {
                            "category": {
                              "food": 1,
                              "tech": 42,
                            },
                          },
                          "title": "facets",
                          "type": "object",
                        },
                        "facets_stats": {
                          "additionalProperties": {
                            "properties": {
                              "avg": {
                                "description": "The average facet value in the result set.",
                                "type": "integer",
                              },
                              "max": {
                                "description": "The maximum value in the result set.",
                                "type": "integer",
                              },
                              "min": {
                                "description": "The minimum value in the result set.",
                                "type": "integer",
                              },
                              "sum": {
                                "description": "The sum of all values in the result set.",
                                "type": "integer",
                              },
                            },
                            "title": "facetStats",
                            "type": "object",
                          },
                          "description": "Statistics for numerical facets.",
                          "title": "facetsStats",
                          "type": "object",
                        },
                        "hitsPerPage": {
                          "default": 20,
                          "description": "Set the number of hits per page.",
                          "type": "integer",
                          "x-categories": [
                            "Pagination",
                          ],
                        },
                        "index": {
                          "description": "Index name used for the query.",
                          "example": "indexName",
                          "type": "string",
                        },
                        "indexUsed": {
                          "description": "Index name used for the query. In the case of an A/B test, the targeted index isn't always the index used by the query.",
                          "example": "indexNameAlt",
                          "type": "string",
                        },
                        "message": {
                          "description": "Used to return warnings about the query.",
                          "type": "string",
                        },
                        "nbHits": {
                          "description": "Number of hits that the search query matched.",
                          "example": 20,
                          "type": "integer",
                        },
                        "nbPages": {
                          "description": "Number of pages available for the current query.",
                          "example": 1,
                          "type": "integer",
                        },
                        "nbSortedHits": {
                          "description": "The number of hits selected and sorted by the relevant sort algorithm.",
                          "example": 20,
                          "type": "integer",
                        },
                        "page": {
                          "default": 0,
                          "description": "Specify the page to retrieve.",
                          "type": "integer",
                          "x-categories": [
                            "Pagination",
                          ],
                        },
                        "params": {
                          "description": "A url-encoded string of all search parameters.",
                          "example": "query=a&hitsPerPage=20",
                          "type": "string",
                        },
                        "parsedQuery": {
                          "description": "The query string that will be searched, after normalization.",
                          "type": "string",
                        },
                        "processingTimeMS": {
                          "description": "Time the server took to process the request, in milliseconds.",
                          "example": 20,
                          "type": "integer",
                        },
                        "query": {
                          "default": "",
                          "description": "The text to search in the index.",
                          "type": "string",
                          "x-categories": [
                            "Search",
                          ],
                        },
                        "queryAfterRemoval": {
                          "description": "A markup text indicating which parts of the original query have been removed in order to retrieve a non-empty result set.",
                          "type": "string",
                        },
                        "renderingContent": {
                          "additionalProperties": false,
                          "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                          "properties": {
                            "facetOrdering": {
                              "additionalProperties": false,
                              "description": "Defining how facets should be ordered.",
                              "properties": {
                                "facets": {
                                  "additionalProperties": false,
                                  "description": "The ordering of facets (widgets).",
                                  "properties": {
                                    "order": {
                                      "description": "Pinned order of facet lists.",
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                  },
                                  "type": "object",
                                },
                                "values": {
                                  "additionalProperties": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "order": {
                                        "description": "Pinned order of facet lists.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                      },
                                      "sortRemainingBy": {
                                        "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                        "enum": [
                                          "count",
                                          "alpha",
                                          "hidden",
                                        ],
                                        "type": "string",
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "description": "The ordering of facet values, within an individual list.",
                                  "type": "object",
                                },
                              },
                              "type": "object",
                            },
                          },
                          "type": "object",
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                        "serverUsed": {
                          "description": "Actual host name of the server that processed the request.",
                          "type": "string",
                        },
                        "userData": {
                          "default": {},
                          "description": "Lets you store custom data in your indices.",
                          "type": "object",
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                      },
                      "required": [
                        "nbHits",
                        "page",
                        "nbPages",
                        "hitsPerPage",
                        "processingTimeMS",
                        "exhaustiveNbHits",
                        "query",
                        "params",
                      ],
                      "type": "object",
                    },
                    {
                      "additionalProperties": false,
                      "properties": {
                        "hits": {
                          "items": {
                            "additionalProperties": true,
                            "description": "A single hit.",
                            "properties": {
                              "_distinctSeqID": {
                                "type": "integer",
                              },
                              "_highlightResult": {
                                "additionalProperties": {
                                  "oneOf": [
                                    {
                                      "additionalProperties": false,
                                      "description": "Show highlighted section and words matched on a query.",
                                      "properties": {
                                        "fullyHighlighted": {
                                          "description": "Whether the entire attribute value is highlighted.",
                                          "type": "boolean",
                                        },
                                        "matchLevel": {
                                          "description": "Indicates how well the attribute matched the search query.",
                                          "enum": [
                                            "none",
                                            "partial",
                                            "full",
                                          ],
                                          "type": "string",
                                        },
                                        "matchedWords": {
                                          "description": "List of words from the query that matched the object.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        "value": {
                                          "description": "Markup text with occurrences highlighted.",
                                          "example": "<em>George</em> <em>Clo</em>oney",
                                          "type": "string",
                                        },
                                      },
                                      "required": [
                                        "value",
                                        "matchLevel",
                                        "matchedWords",
                                      ],
                                      "type": "object",
                                    },
                                    {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Show highlighted section and words matched on a query.",
                                        "properties": {
                                          "fullyHighlighted": {
                                            "description": "Whether the entire attribute value is highlighted.",
                                            "type": "boolean",
                                          },
                                          "matchLevel": {
                                            "description": "Indicates how well the attribute matched the search query.",
                                            "enum": [
                                              "none",
                                              "partial",
                                              "full",
                                            ],
                                            "type": "string",
                                          },
                                          "matchedWords": {
                                            "description": "List of words from the query that matched the object.",
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          "value": {
                                            "description": "Markup text with occurrences highlighted.",
                                            "example": "<em>George</em> <em>Clo</em>oney",
                                            "type": "string",
                                          },
                                        },
                                        "required": [
                                          "value",
                                          "matchLevel",
                                          "matchedWords",
                                        ],
                                        "type": "object",
                                      },
                                      "type": "array",
                                    },
                                  ],
                                },
                                "description": "Show highlighted section and words matched on a query.",
                                "type": "object",
                              },
                              "_rankingInfo": {
                                "additionalProperties": false,
                                "properties": {
                                  "filters": {
                                    "description": "This field is reserved for advanced usage.",
                                    "type": "integer",
                                  },
                                  "firstMatchedWord": {
                                    "description": "Position of the most important matched attribute in the attributes to index list.",
                                    "type": "integer",
                                  },
                                  "geoDistance": {
                                    "description": "Distance between the geo location in the search query and the best matching geo location in the record, divided by the geo precision (in meters).",
                                    "type": "integer",
                                  },
                                  "geoPrecision": {
                                    "description": "Precision used when computing the geo distance, in meters.",
                                    "type": "integer",
                                  },
                                  "matchedGeoLocation": {
                                    "properties": {
                                      "distance": {
                                        "description": "Distance between the matched location and the search location (in meters).",
                                        "type": "integer",
                                      },
                                      "lat": {
                                        "description": "Latitude of the matched location.",
                                        "format": "double",
                                        "type": "number",
                                      },
                                      "lng": {
                                        "description": "Longitude of the matched location.",
                                        "format": "double",
                                        "type": "number",
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "nbExactWords": {
                                    "description": "Number of exactly matched words.",
                                    "type": "integer",
                                  },
                                  "nbTypos": {
                                    "description": "Number of typos encountered when matching the record.",
                                    "type": "integer",
                                  },
                                  "personalization": {
                                    "properties": {
                                      "filtersScore": {
                                        "description": "The score of the filters.",
                                        "type": "integer",
                                      },
                                      "rankingScore": {
                                        "description": "The score of the ranking.",
                                        "type": "integer",
                                      },
                                      "score": {
                                        "description": "The score of the event.",
                                        "type": "integer",
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "promoted": {
                                    "description": "Present and set to true if a Rule promoted the hit.",
                                    "type": "boolean",
                                  },
                                  "promotedByReRanking": {
                                    "description": "Wether the record are promoted by the re-ranking strategy.",
                                    "type": "boolean",
                                  },
                                  "proximityDistance": {
                                    "description": "When the query contains more than one word, the sum of the distances between matched words (in meters).",
                                    "type": "integer",
                                  },
                                  "userScore": {
                                    "description": "Custom ranking for the object, expressed as a single integer value.",
                                    "type": "integer",
                                  },
                                  "words": {
                                    "description": "Number of matched words, including prefixes and typos.",
                                    "type": "integer",
                                  },
                                },
                                "required": [
                                  "promoted",
                                  "nbTypos",
                                  "firstMatchedWord",
                                  "geoDistance",
                                  "nbExactWords",
                                  "words",
                                  "filters",
                                  "userScore",
                                ],
                                "type": "object",
                              },
                              "_snippetResult": {
                                "additionalProperties": {
                                  "oneOf": [
                                    {
                                      "additionalProperties": false,
                                      "description": "Snippeted attributes show parts of the matched attributes. Only returned when attributesToSnippet is non-empty.",
                                      "properties": {
                                        "matchLevel": {
                                          "description": "Indicates how well the attribute matched the search query.",
                                          "enum": [
                                            "none",
                                            "partial",
                                            "full",
                                          ],
                                          "type": "string",
                                        },
                                        "value": {
                                          "description": "Markup text with occurrences highlighted.",
                                          "example": "<em>George</em> <em>Clo</em>oney",
                                          "type": "string",
                                        },
                                      },
                                      "required": [
                                        "value",
                                        "matchLevel",
                                      ],
                                      "type": "object",
                                    },
                                    {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Snippeted attributes show parts of the matched attributes. Only returned when attributesToSnippet is non-empty.",
                                        "properties": {
                                          "matchLevel": {
                                            "description": "Indicates how well the attribute matched the search query.",
                                            "enum": [
                                              "none",
                                              "partial",
                                              "full",
                                            ],
                                            "type": "string",
                                          },
                                          "value": {
                                            "description": "Markup text with occurrences highlighted.",
                                            "example": "<em>George</em> <em>Clo</em>oney",
                                            "type": "string",
                                          },
                                        },
                                        "required": [
                                          "value",
                                          "matchLevel",
                                        ],
                                        "type": "object",
                                      },
                                      "type": "array",
                                    },
                                  ],
                                },
                                "description": "Snippeted attributes show parts of the matched attributes. Only returned when attributesToSnippet is non-empty.",
                                "type": "object",
                              },
                              "objectID": {
                                "description": "Unique identifier of the object.",
                                "type": "string",
                              },
                            },
                            "required": [
                              "objectID",
                            ],
                            "type": "object",
                            "x-is-generic": true,
                          },
                          "type": "array",
                        },
                      },
                      "required": [
                        "hits",
                      ],
                      "type": "object",
                    },
                    {
                      "additionalProperties": false,
                      "properties": {
                        "cursor": {
                          "description": "Cursor indicating the location to resume browsing from. Must match the value returned by the previous call.",
                          "example": "jMDY3M2MwM2QwMWUxMmQwYWI0ZTN",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  ],
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Retrieve all index content.",
        "tags": [
          "Search",
        ],
      },
    },
    "/1/indexes/{indexName}/clear": {
      "post": {
        "description": "Delete an index's content, but leave settings and index-specific API keys untouched.",
        "operationId": "clearObjects",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and an updatedAt timestamp.",
                  "properties": {
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                  ],
                  "title": "updatedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Clear all objects from an index.",
        "tags": [
          "Records",
        ],
      },
    },
    "/1/indexes/{indexName}/deleteByQuery": {
      "post": {
        "description": "Remove all objects matching a filter (including geo filters).
This method enables you to delete one or more objects based on filters (numeric, facet, tag or geo queries).
It doesn't accept empty filters or a query.
",
        "operationId": "deleteBy",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "aroundLatLng": {
                    "default": "",
                    "description": "Search for entries around a central geolocation, enabling a geo search within a circular area.",
                    "type": "string",
                    "x-categories": [
                      "Geo-Search",
                    ],
                  },
                  "aroundRadius": {
                    "description": "Define the maximum radius for a geo search (in meters).",
                    "oneOf": [
                      {
                        "minimum": 1,
                        "type": "integer",
                      },
                      {
                        "enum": [
                          "all",
                        ],
                        "type": "string",
                      },
                    ],
                    "x-categories": [
                      "Geo-Search",
                    ],
                  },
                  "facetFilters": {
                    "description": "Filter hits by facet value.",
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "items": {
                                "type": "string",
                              },
                              "type": "array",
                            },
                            {
                              "type": "string",
                            },
                          ],
                        },
                        "type": "array",
                      },
                      {
                        "type": "string",
                      },
                    ],
                    "x-categories": [
                      "Filtering",
                    ],
                  },
                  "filters": {
                    "default": "",
                    "description": "Filter the query with numeric, facet and/or tag filters.",
                    "type": "string",
                    "x-categories": [
                      "Filtering",
                    ],
                  },
                  "insideBoundingBox": {
                    "description": "Search inside a rectangular area (in geo coordinates).",
                    "items": {
                      "format": "double",
                      "type": "number",
                    },
                    "type": "array",
                    "x-categories": [
                      "Geo-Search",
                    ],
                  },
                  "insidePolygon": {
                    "description": "Search inside a polygon (in geo coordinates).",
                    "items": {
                      "format": "double",
                      "type": "number",
                    },
                    "type": "array",
                    "x-categories": [
                      "Geo-Search",
                    ],
                  },
                  "numericFilters": {
                    "description": "Filter on numeric attributes.",
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "items": {
                                "type": "string",
                              },
                              "type": "array",
                            },
                            {
                              "type": "string",
                            },
                          ],
                        },
                        "type": "array",
                      },
                      {
                        "type": "string",
                      },
                    ],
                    "x-categories": [
                      "Filtering",
                    ],
                  },
                  "tagFilters": {
                    "description": "Filter hits by tags.",
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "items": {
                                "type": "string",
                              },
                              "type": "array",
                            },
                            {
                              "type": "string",
                            },
                          ],
                        },
                        "type": "array",
                      },
                      {
                        "type": "string",
                      },
                    ],
                    "x-categories": [
                      "Filtering",
                    ],
                  },
                },
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and a deletedAt timestamp.",
                  "properties": {
                    "deletedAt": {
                      "description": "Date of deletion (ISO-8601 format).",
                      "type": "string",
                    },
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": [
                    "taskID",
                    "deletedAt",
                  ],
                  "title": "deletedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Delete all records matching the query.",
        "tags": [
          "Records",
        ],
      },
    },
    "/1/indexes/{indexName}/facets/{facetName}/query": {
      "post": {
        "description": "Search for values of a given facet, optionally restricting the returned values to those contained in objects matching other search criteria.",
        "operationId": "searchForFacetValues",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "The facet name.",
            "in": "path",
            "name": "facetName",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "facetQuery": {
                    "default": "",
                    "description": "Text to search inside the facet's values.",
                    "type": "string",
                  },
                  "maxFacetHits": {
                    "default": 10,
                    "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                    "maximum": 100,
                    "type": "integer",
                    "x-categories": [
                      "Advanced",
                    ],
                  },
                  "params": {
                    "default": "",
                    "description": "Search parameters as URL-encoded query string.",
                    "type": "string",
                  },
                },
                "title": "searchForFacetValuesRequest",
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "facetHits": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "count": {
                            "description": "How many objects contain this facet value. This takes into account the extra search parameters specified in the query. Like for a regular search query, the counts may not be exhaustive.",
                            "type": "integer",
                          },
                          "highlighted": {
                            "description": "Markup text with occurrences highlighted.",
                            "example": "<em>George</em> <em>Clo</em>oney",
                            "type": "string",
                          },
                          "value": {
                            "description": "Raw value of the facet.",
                            "type": "string",
                          },
                        },
                        "required": [
                          "value",
                          "highlighted",
                          "count",
                        ],
                        "title": "facetHits",
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "facetHits",
                  ],
                  "title": "searchForFacetValuesResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Search for values of a given facet.",
        "tags": [
          "Search",
        ],
        "x-cacheable": true,
        "x-use-read-transporter": true,
      },
    },
    "/1/indexes/{indexName}/operation": {
      "post": {
        "description": "Performs a copy or a move operation on a index.",
        "operationId": "operationIndex",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "destination": {
                    "description": "The Algolia index name.",
                    "example": "products",
                    "type": "string",
                  },
                  "operation": {
                    "description": "Type of operation to perform (move or copy).",
                    "enum": [
                      "move",
                      "copy",
                    ],
                    "type": "string",
                  },
                  "scope": {
                    "description": "Scope of the data to copy. When absent, a full copy is performed. When present, only the selected scopes are copied.",
                    "items": {
                      "enum": [
                        "settings",
                        "synonyms",
                        "rules",
                      ],
                      "type": "string",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "operation",
                  "destination",
                ],
                "title": "operationIndexParams",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and an updatedAt timestamp.",
                  "properties": {
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                  ],
                  "title": "updatedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Copy/move index.",
        "tags": [
          "Indices",
        ],
      },
    },
    "/1/indexes/{indexName}/query": {
      "post": {
        "description": "Perform a search operation targeting one specific index.",
        "operationId": "searchSingleIndex",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "params": {
                        "default": "",
                        "description": "Search parameters as URL-encoded query string.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  {
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "query": {
                                "default": "",
                                "description": "The text to search in the index.",
                                "type": "string",
                                "x-categories": [
                                  "Search",
                                ],
                              },
                            },
                            "type": "object",
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "analytics": {
                                "default": true,
                                "description": "Whether the current query will be taken into account in the Analytics.",
                                "type": "boolean",
                                "x-categories": [
                                  "Analytics",
                                ],
                              },
                              "analyticsTags": {
                                "default": [],
                                "description": "List of tags to apply to the query for analytics purposes.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Analytics",
                                ],
                              },
                              "aroundLatLng": {
                                "default": "",
                                "description": "Search for entries around a central geolocation, enabling a geo search within a circular area.",
                                "type": "string",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "aroundLatLngViaIP": {
                                "default": false,
                                "description": "Search for entries around a given location automatically computed from the requester's IP address.",
                                "type": "boolean",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "aroundPrecision": {
                                "default": 10,
                                "description": "Precision of geo search (in meters), to add grouping by geo location to the ranking formula.",
                                "type": "integer",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "aroundRadius": {
                                "description": "Define the maximum radius for a geo search (in meters).",
                                "oneOf": [
                                  {
                                    "minimum": 1,
                                    "type": "integer",
                                  },
                                  {
                                    "enum": [
                                      "all",
                                    ],
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "clickAnalytics": {
                                "default": false,
                                "description": "Enable the Click Analytics feature.",
                                "type": "boolean",
                                "x-categories": [
                                  "Analytics",
                                ],
                              },
                              "enableABTest": {
                                "default": true,
                                "description": "Whether this search should participate in running AB tests.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "enableReRanking": {
                                "default": true,
                                "description": "Whether this search should use AI Re-Ranking.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "facetFilters": {
                                "description": "Filter hits by facet value.",
                                "oneOf": [
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        {
                                          "type": "string",
                                        },
                                      ],
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "facetingAfterDistinct": {
                                "default": false,
                                "description": "Force faceting to be applied after de-duplication (via the Distinct setting).",
                                "type": "boolean",
                                "x-categories": [
                                  "Faceting",
                                ],
                              },
                              "facets": {
                                "default": [],
                                "description": "Retrieve facets and their facet values.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Faceting",
                                ],
                              },
                              "filters": {
                                "default": "",
                                "description": "Filter the query with numeric, facet and/or tag filters.",
                                "type": "string",
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "getRankingInfo": {
                                "default": false,
                                "description": "Retrieve detailed ranking information.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "insideBoundingBox": {
                                "description": "Search inside a rectangular area (in geo coordinates).",
                                "items": {
                                  "format": "double",
                                  "type": "number",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "insidePolygon": {
                                "description": "Search inside a polygon (in geo coordinates).",
                                "items": {
                                  "format": "double",
                                  "type": "number",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "length": {
                                "description": "Set the number of hits to retrieve (used only with offset).",
                                "maximum": 1000,
                                "minimum": 1,
                                "type": "integer",
                                "x-categories": [
                                  "Pagination",
                                ],
                              },
                              "maxValuesPerFacet": {
                                "default": 100,
                                "description": "Maximum number of facet values to return for each facet during a regular search.",
                                "type": "integer",
                                "x-categories": [
                                  "Faceting",
                                ],
                              },
                              "minimumAroundRadius": {
                                "description": "Minimum radius (in meters) used for a geo search when aroundRadius is not set.",
                                "minimum": 1,
                                "type": "integer",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "naturalLanguages": {
                                "default": [],
                                "description": "This parameter changes the default values of certain parameters and settings that work best for a natural language query, such as ignorePlurals, removeStopWords, removeWordsIfNoResults, analyticsTags and ruleContexts. These parameters and settings work well together when the query is formatted in natural language instead of keywords, for example when your user performs a voice search.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "numericFilters": {
                                "description": "Filter on numeric attributes.",
                                "oneOf": [
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        {
                                          "type": "string",
                                        },
                                      ],
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "offset": {
                                "description": "Specify the offset of the first hit to return.",
                                "type": "integer",
                                "x-categories": [
                                  "Pagination",
                                ],
                              },
                              "optionalFilters": {
                                "description": "Create filters for ranking purposes, where records that match the filter are ranked higher, or lower in the case of a negative optional filter.",
                                "oneOf": [
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        {
                                          "type": "string",
                                        },
                                      ],
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "page": {
                                "default": 0,
                                "description": "Specify the page to retrieve.",
                                "type": "integer",
                                "x-categories": [
                                  "Pagination",
                                ],
                              },
                              "percentileComputation": {
                                "default": true,
                                "description": "Whether to include or exclude a query from the processing-time percentile computation.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "personalizationImpact": {
                                "default": 100,
                                "description": "Define the impact of the Personalization feature.",
                                "type": "integer",
                                "x-categories": [
                                  "Personalization",
                                ],
                              },
                              "reRankingApplyFilter": {
                                "description": "When Dynamic Re-Ranking is enabled, only records that match these filters will be impacted by Dynamic Re-Ranking.",
                                "nullable": true,
                                "oneOf": [
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        {
                                          "type": "string",
                                        },
                                      ],
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "ruleContexts": {
                                "default": [],
                                "description": "Enables contextual rules.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Rules",
                                ],
                              },
                              "similarQuery": {
                                "default": "",
                                "description": "Overrides the query parameter and performs a more generic search that can be used to find \\"similar\\" results.",
                                "type": "string",
                                "x-categories": [
                                  "Search",
                                ],
                              },
                              "sortFacetValuesBy": {
                                "default": "count",
                                "description": "Controls how facet values are fetched.",
                                "type": "string",
                                "x-categories": [
                                  "Faceting",
                                ],
                              },
                              "sumOrFiltersScores": {
                                "default": false,
                                "description": "Determines how to calculate the total score for filtering.",
                                "type": "boolean",
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "tagFilters": {
                                "description": "Filter hits by tags.",
                                "oneOf": [
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        {
                                          "type": "string",
                                        },
                                      ],
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "userToken": {
                                "description": "Associates a certain user token with the current search.",
                                "type": "string",
                                "x-categories": [
                                  "Personalization",
                                ],
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "advancedSyntax": {
                            "default": false,
                            "description": "Enables the advanced query syntax.",
                            "type": "boolean",
                            "x-categories": [
                              "Query strategy",
                            ],
                          },
                          "advancedSyntaxFeatures": {
                            "default": [
                              "exactPhrase",
                              "excludeWords",
                            ],
                            "description": "Allows you to specify which advanced syntax features are active when ‘advancedSyntax' is enabled.",
                            "items": {
                              "enum": [
                                "exactPhrase",
                                "excludeWords",
                              ],
                              "type": "string",
                              "x-categories": [
                                "Query strategy",
                              ],
                            },
                            "type": "array",
                            "x-categories": [
                              "Query strategy",
                            ],
                          },
                          "allowTyposOnNumericTokens": {
                            "default": true,
                            "description": "Whether to allow typos on numbers (\\"numeric tokens\\") in the query string.",
                            "type": "boolean",
                            "x-categories": [
                              "Typos",
                            ],
                          },
                          "alternativesAsExact": {
                            "default": [
                              "ignorePlurals",
                              "singleWordSynonym",
                            ],
                            "description": "List of alternatives that should be considered an exact match by the exact ranking criterion.",
                            "items": {
                              "enum": [
                                "ignorePlurals",
                                "singleWordSynonym",
                                "multiWordsSynonym",
                              ],
                              "type": "string",
                              "x-categories": [
                                "Query strategy",
                              ],
                            },
                            "type": "array",
                            "x-categories": [
                              "Query strategy",
                            ],
                          },
                          "attributeCriteriaComputedByMinProximity": {
                            "default": false,
                            "description": "When attribute is ranked above proximity in your ranking formula, proximity is used to select which searchable attribute is matched in the attribute ranking stage.",
                            "type": "boolean",
                            "x-categories": [
                              "Advanced",
                            ],
                          },
                          "attributeForDistinct": {
                            "description": "Name of the de-duplication attribute to be used with the distinct feature.",
                            "type": "string",
                          },
                          "attributesForFaceting": {
                            "default": [],
                            "description": "The complete list of attributes that will be used for faceting.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Faceting",
                            ],
                          },
                          "attributesToHighlight": {
                            "description": "List of attributes to highlight.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Highlighting and Snippeting",
                            ],
                          },
                          "attributesToRetrieve": {
                            "default": [
                              "*",
                            ],
                            "description": "This parameter controls which attributes to retrieve and which not to retrieve.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Attributes",
                            ],
                          },
                          "attributesToSnippet": {
                            "default": [],
                            "description": "List of attributes to snippet, with an optional maximum number of words to snippet.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Highlighting and Snippeting",
                            ],
                          },
                          "customRanking": {
                            "default": [],
                            "description": "Specifies the custom ranking criterion.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Ranking",
                            ],
                          },
                          "decompoundQuery": {
                            "default": true,
                            "description": "Splits compound words into their composing atoms in the query.",
                            "type": "boolean",
                            "x-categories": [
                              "Languages",
                            ],
                          },
                          "disableExactOnAttributes": {
                            "default": [],
                            "description": "List of attributes on which you want to disable the exact ranking criterion.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Query strategy",
                            ],
                          },
                          "disableTypoToleranceOnAttributes": {
                            "default": [],
                            "description": "List of attributes on which you want to disable typo tolerance.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Typos",
                            ],
                          },
                          "distinct": {
                            "description": "Enables de-duplication or grouping of results.",
                            "oneOf": [
                              {
                                "type": "boolean",
                              },
                              {
                                "default": 0,
                                "maximum": 4,
                                "minimum": 0,
                                "type": "integer",
                              },
                            ],
                            "x-categories": [
                              "Advanced",
                            ],
                          },
                          "enablePersonalization": {
                            "default": false,
                            "description": "Enable the Personalization feature.",
                            "type": "boolean",
                            "x-categories": [
                              "Personalization",
                            ],
                          },
                          "enableRules": {
                            "default": true,
                            "description": "Whether Rules should be globally enabled.",
                            "type": "boolean",
                            "x-categories": [
                              "Rules",
                            ],
                          },
                          "exactOnSingleWordQuery": {
                            "default": "attribute",
                            "description": "Controls how the exact ranking criterion is computed when the query contains only one word.",
                            "enum": [
                              "attribute",
                              "none",
                              "word",
                            ],
                            "type": "string",
                            "x-categories": [
                              "Query strategy",
                            ],
                          },
                          "highlightPostTag": {
                            "default": "</em>",
                            "description": "The HTML string to insert after the highlighted parts in all highlight and snippet results.",
                            "type": "string",
                            "x-categories": [
                              "Highlighting and Snippeting",
                            ],
                          },
                          "highlightPreTag": {
                            "default": "<em>",
                            "description": "The HTML string to insert before the highlighted parts in all highlight and snippet results.",
                            "type": "string",
                            "x-categories": [
                              "Highlighting and Snippeting",
                            ],
                          },
                          "hitsPerPage": {
                            "default": 20,
                            "description": "Set the number of hits per page.",
                            "type": "integer",
                            "x-categories": [
                              "Pagination",
                            ],
                          },
                          "ignorePlurals": {
                            "description": "Treats singular, plurals, and other forms of declensions as matching terms.
ignorePlurals is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the ignore plurals functionality, where singulars and plurals are considered equivalent (foot = feet). The languages supported here are either every language (this is the default, see list of languages below), or those set by queryLanguages. false: disables ignore plurals, where singulars and plurals are not considered the same for matching purposes (foot will not find feet).
",
                            "oneOf": [
                              {
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                              },
                              {
                                "default": false,
                                "type": "boolean",
                              },
                            ],
                            "x-categories": [
                              "Languages",
                            ],
                          },
                          "keepDiacriticsOnCharacters": {
                            "default": "",
                            "description": "List of characters that the engine shouldn't automatically normalize.",
                            "type": "string",
                            "x-categories": [
                              "Languages",
                            ],
                          },
                          "maxFacetHits": {
                            "default": 10,
                            "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                            "maximum": 100,
                            "type": "integer",
                            "x-categories": [
                              "Advanced",
                            ],
                          },
                          "minProximity": {
                            "default": 1,
                            "description": "Precision of the proximity ranking criterion.",
                            "maximum": 7,
                            "minimum": 1,
                            "type": "integer",
                            "x-categories": [
                              "Advanced",
                            ],
                          },
                          "minWordSizefor1Typo": {
                            "default": 4,
                            "description": "Minimum number of characters a word in the query string must contain to accept matches with 1 typo.",
                            "type": "integer",
                            "x-categories": [
                              "Typos",
                            ],
                          },
                          "minWordSizefor2Typos": {
                            "default": 8,
                            "description": "Minimum number of characters a word in the query string must contain to accept matches with 2 typos.",
                            "type": "integer",
                            "x-categories": [
                              "Typos",
                            ],
                          },
                          "optionalWords": {
                            "default": [],
                            "description": "A list of words that should be considered as optional when found in the query.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Query strategy",
                            ],
                          },
                          "queryLanguages": {
                            "default": [],
                            "description": "Sets the languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Languages",
                            ],
                          },
                          "queryType": {
                            "default": "prefixLast",
                            "description": "Controls if and how query words are interpreted as prefixes.",
                            "enum": [
                              "prefixLast",
                              "prefixAll",
                              "prefixNone",
                            ],
                            "type": "string",
                            "x-categories": [
                              "Query strategy",
                            ],
                          },
                          "ranking": {
                            "default": [
                              "typo",
                              "geo",
                              "words",
                              "filters",
                              "proximity",
                              "attribute",
                              "exact",
                              "custom",
                            ],
                            "description": "Controls how Algolia should sort your results.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Ranking",
                            ],
                          },
                          "relevancyStrictness": {
                            "default": 100,
                            "description": "Controls the relevancy threshold below which less relevant results aren't included in the results.",
                            "type": "integer",
                            "x-categories": [
                              "Ranking",
                            ],
                          },
                          "removeStopWords": {
                            "description": "Removes stop (common) words from the query before executing it.
removeStopWords is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the stop word functionality, ensuring that stop words are removed from consideration in a search. The languages supported here are either every language, or those set by queryLanguages. false: disables stop word functionality, allowing stop words to be taken into account in a search.
",
                            "oneOf": [
                              {
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                              },
                              {
                                "default": false,
                                "type": "boolean",
                              },
                            ],
                            "x-categories": [
                              "Languages",
                            ],
                          },
                          "removeWordsIfNoResults": {
                            "default": "none",
                            "description": "Selects a strategy to remove words from the query when it doesn't match any hits.",
                            "enum": [
                              "none",
                              "lastWords",
                              "firstWords",
                              "allOptional",
                            ],
                            "type": "string",
                            "x-categories": [
                              "Query strategy",
                            ],
                          },
                          "renderingContent": {
                            "additionalProperties": false,
                            "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                            "properties": {
                              "facetOrdering": {
                                "additionalProperties": false,
                                "description": "Defining how facets should be ordered.",
                                "properties": {
                                  "facets": {
                                    "additionalProperties": false,
                                    "description": "The ordering of facets (widgets).",
                                    "properties": {
                                      "order": {
                                        "description": "Pinned order of facet lists.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "values": {
                                    "additionalProperties": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "order": {
                                          "description": "Pinned order of facet lists.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        "sortRemainingBy": {
                                          "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                          "enum": [
                                            "count",
                                            "alpha",
                                            "hidden",
                                          ],
                                          "type": "string",
                                        },
                                      },
                                      "type": "object",
                                    },
                                    "description": "The ordering of facet values, within an individual list.",
                                    "type": "object",
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                            "x-categories": [
                              "Advanced",
                            ],
                          },
                          "replaceSynonymsInHighlight": {
                            "default": false,
                            "description": "Whether to highlight and snippet the original word that matches the synonym or the synonym itself.",
                            "type": "boolean",
                            "x-categories": [
                              "Highlighting and Snippeting",
                            ],
                          },
                          "responseFields": {
                            "default": [],
                            "description": "Choose which fields to return in the API response. This parameters applies to search and browse queries.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Advanced",
                            ],
                          },
                          "restrictHighlightAndSnippetArrays": {
                            "default": false,
                            "description": "Restrict highlighting and snippeting to items that matched the query.",
                            "type": "boolean",
                            "x-categories": [
                              "Highlighting and Snippeting",
                            ],
                          },
                          "restrictSearchableAttributes": {
                            "default": [],
                            "description": "Restricts a given query to look in only a subset of your searchable attributes.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-categories": [
                              "Attributes",
                            ],
                          },
                          "snippetEllipsisText": {
                            "default": "…",
                            "description": "String used as an ellipsis indicator when a snippet is truncated.",
                            "type": "string",
                            "x-categories": [
                              "Highlighting and Snippeting",
                            ],
                          },
                          "synonyms": {
                            "default": true,
                            "description": "Whether to take into account an index's synonyms for a particular search.",
                            "type": "boolean",
                            "x-categories": [
                              "Advanced",
                            ],
                          },
                          "typoTolerance": {
                            "description": "Controls whether typo tolerance is enabled and how it is applied.",
                            "oneOf": [
                              {
                                "default": true,
                                "type": "boolean",
                              },
                              {
                                "enum": [
                                  "min",
                                  "strict",
                                ],
                                "type": "string",
                              },
                            ],
                            "x-categories": [
                              "Typos",
                            ],
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                ],
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "properties": {
                        "abTestID": {
                          "description": "If a search encounters an index that is being A/B tested, abTestID reports the ongoing A/B test ID.",
                          "type": "integer",
                        },
                        "abTestVariantID": {
                          "description": "If a search encounters an index that is being A/B tested, abTestVariantID reports the variant ID of the index used (starting at 1).",
                          "type": "integer",
                        },
                        "aroundLatLng": {
                          "description": "The computed geo location.",
                          "pattern": "^(-?\\\\d+(\\\\.\\\\d+)?),\\\\s*(-?\\\\d+(\\\\.\\\\d+)?)$",
                          "type": "string",
                        },
                        "automaticRadius": {
                          "description": "The automatically computed radius. For legacy reasons, this parameter is a string and not an integer.",
                          "type": "string",
                        },
                        "exhaustiveFacetsCount": {
                          "description": "Whether the facet count is exhaustive or approximate.",
                          "type": "boolean",
                        },
                        "exhaustiveNbHits": {
                          "description": "Indicate if the nbHits count was exhaustive or approximate.",
                          "type": "boolean",
                        },
                        "exhaustiveTypo": {
                          "description": "Indicate if the typo-tolerance search was exhaustive or approximate (only included when typo-tolerance is enabled).",
                          "type": "boolean",
                        },
                        "facets": {
                          "additionalProperties": {
                            "additionalProperties": {
                              "type": "integer",
                            },
                            "type": "object",
                          },
                          "description": "A mapping of each facet name to the corresponding facet counts.",
                          "example": {
                            "category": {
                              "food": 1,
                              "tech": 42,
                            },
                          },
                          "title": "facets",
                          "type": "object",
                        },
                        "facets_stats": {
                          "additionalProperties": {
                            "properties": {
                              "avg": {
                                "description": "The average facet value in the result set.",
                                "type": "integer",
                              },
                              "max": {
                                "description": "The maximum value in the result set.",
                                "type": "integer",
                              },
                              "min": {
                                "description": "The minimum value in the result set.",
                                "type": "integer",
                              },
                              "sum": {
                                "description": "The sum of all values in the result set.",
                                "type": "integer",
                              },
                            },
                            "title": "facetStats",
                            "type": "object",
                          },
                          "description": "Statistics for numerical facets.",
                          "title": "facetsStats",
                          "type": "object",
                        },
                        "hitsPerPage": {
                          "default": 20,
                          "description": "Set the number of hits per page.",
                          "type": "integer",
                          "x-categories": [
                            "Pagination",
                          ],
                        },
                        "index": {
                          "description": "Index name used for the query.",
                          "example": "indexName",
                          "type": "string",
                        },
                        "indexUsed": {
                          "description": "Index name used for the query. In the case of an A/B test, the targeted index isn't always the index used by the query.",
                          "example": "indexNameAlt",
                          "type": "string",
                        },
                        "message": {
                          "description": "Used to return warnings about the query.",
                          "type": "string",
                        },
                        "nbHits": {
                          "description": "Number of hits that the search query matched.",
                          "example": 20,
                          "type": "integer",
                        },
                        "nbPages": {
                          "description": "Number of pages available for the current query.",
                          "example": 1,
                          "type": "integer",
                        },
                        "nbSortedHits": {
                          "description": "The number of hits selected and sorted by the relevant sort algorithm.",
                          "example": 20,
                          "type": "integer",
                        },
                        "page": {
                          "default": 0,
                          "description": "Specify the page to retrieve.",
                          "type": "integer",
                          "x-categories": [
                            "Pagination",
                          ],
                        },
                        "params": {
                          "description": "A url-encoded string of all search parameters.",
                          "example": "query=a&hitsPerPage=20",
                          "type": "string",
                        },
                        "parsedQuery": {
                          "description": "The query string that will be searched, after normalization.",
                          "type": "string",
                        },
                        "processingTimeMS": {
                          "description": "Time the server took to process the request, in milliseconds.",
                          "example": 20,
                          "type": "integer",
                        },
                        "query": {
                          "default": "",
                          "description": "The text to search in the index.",
                          "type": "string",
                          "x-categories": [
                            "Search",
                          ],
                        },
                        "queryAfterRemoval": {
                          "description": "A markup text indicating which parts of the original query have been removed in order to retrieve a non-empty result set.",
                          "type": "string",
                        },
                        "renderingContent": {
                          "additionalProperties": false,
                          "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                          "properties": {
                            "facetOrdering": {
                              "additionalProperties": false,
                              "description": "Defining how facets should be ordered.",
                              "properties": {
                                "facets": {
                                  "additionalProperties": false,
                                  "description": "The ordering of facets (widgets).",
                                  "properties": {
                                    "order": {
                                      "description": "Pinned order of facet lists.",
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                  },
                                  "type": "object",
                                },
                                "values": {
                                  "additionalProperties": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "order": {
                                        "description": "Pinned order of facet lists.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                      },
                                      "sortRemainingBy": {
                                        "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                        "enum": [
                                          "count",
                                          "alpha",
                                          "hidden",
                                        ],
                                        "type": "string",
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "description": "The ordering of facet values, within an individual list.",
                                  "type": "object",
                                },
                              },
                              "type": "object",
                            },
                          },
                          "type": "object",
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                        "serverUsed": {
                          "description": "Actual host name of the server that processed the request.",
                          "type": "string",
                        },
                        "userData": {
                          "default": {},
                          "description": "Lets you store custom data in your indices.",
                          "type": "object",
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                      },
                      "required": [
                        "nbHits",
                        "page",
                        "nbPages",
                        "hitsPerPage",
                        "processingTimeMS",
                        "exhaustiveNbHits",
                        "query",
                        "params",
                      ],
                      "type": "object",
                    },
                    {
                      "additionalProperties": false,
                      "properties": {
                        "hits": {
                          "items": {
                            "additionalProperties": true,
                            "description": "A single hit.",
                            "properties": {
                              "_distinctSeqID": {
                                "type": "integer",
                              },
                              "_highlightResult": {
                                "additionalProperties": {
                                  "oneOf": [
                                    {
                                      "additionalProperties": false,
                                      "description": "Show highlighted section and words matched on a query.",
                                      "properties": {
                                        "fullyHighlighted": {
                                          "description": "Whether the entire attribute value is highlighted.",
                                          "type": "boolean",
                                        },
                                        "matchLevel": {
                                          "description": "Indicates how well the attribute matched the search query.",
                                          "enum": [
                                            "none",
                                            "partial",
                                            "full",
                                          ],
                                          "type": "string",
                                        },
                                        "matchedWords": {
                                          "description": "List of words from the query that matched the object.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        "value": {
                                          "description": "Markup text with occurrences highlighted.",
                                          "example": "<em>George</em> <em>Clo</em>oney",
                                          "type": "string",
                                        },
                                      },
                                      "required": [
                                        "value",
                                        "matchLevel",
                                        "matchedWords",
                                      ],
                                      "type": "object",
                                    },
                                    {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Show highlighted section and words matched on a query.",
                                        "properties": {
                                          "fullyHighlighted": {
                                            "description": "Whether the entire attribute value is highlighted.",
                                            "type": "boolean",
                                          },
                                          "matchLevel": {
                                            "description": "Indicates how well the attribute matched the search query.",
                                            "enum": [
                                              "none",
                                              "partial",
                                              "full",
                                            ],
                                            "type": "string",
                                          },
                                          "matchedWords": {
                                            "description": "List of words from the query that matched the object.",
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          "value": {
                                            "description": "Markup text with occurrences highlighted.",
                                            "example": "<em>George</em> <em>Clo</em>oney",
                                            "type": "string",
                                          },
                                        },
                                        "required": [
                                          "value",
                                          "matchLevel",
                                          "matchedWords",
                                        ],
                                        "type": "object",
                                      },
                                      "type": "array",
                                    },
                                  ],
                                },
                                "description": "Show highlighted section and words matched on a query.",
                                "type": "object",
                              },
                              "_rankingInfo": {
                                "additionalProperties": false,
                                "properties": {
                                  "filters": {
                                    "description": "This field is reserved for advanced usage.",
                                    "type": "integer",
                                  },
                                  "firstMatchedWord": {
                                    "description": "Position of the most important matched attribute in the attributes to index list.",
                                    "type": "integer",
                                  },
                                  "geoDistance": {
                                    "description": "Distance between the geo location in the search query and the best matching geo location in the record, divided by the geo precision (in meters).",
                                    "type": "integer",
                                  },
                                  "geoPrecision": {
                                    "description": "Precision used when computing the geo distance, in meters.",
                                    "type": "integer",
                                  },
                                  "matchedGeoLocation": {
                                    "properties": {
                                      "distance": {
                                        "description": "Distance between the matched location and the search location (in meters).",
                                        "type": "integer",
                                      },
                                      "lat": {
                                        "description": "Latitude of the matched location.",
                                        "format": "double",
                                        "type": "number",
                                      },
                                      "lng": {
                                        "description": "Longitude of the matched location.",
                                        "format": "double",
                                        "type": "number",
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "nbExactWords": {
                                    "description": "Number of exactly matched words.",
                                    "type": "integer",
                                  },
                                  "nbTypos": {
                                    "description": "Number of typos encountered when matching the record.",
                                    "type": "integer",
                                  },
                                  "personalization": {
                                    "properties": {
                                      "filtersScore": {
                                        "description": "The score of the filters.",
                                        "type": "integer",
                                      },
                                      "rankingScore": {
                                        "description": "The score of the ranking.",
                                        "type": "integer",
                                      },
                                      "score": {
                                        "description": "The score of the event.",
                                        "type": "integer",
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "promoted": {
                                    "description": "Present and set to true if a Rule promoted the hit.",
                                    "type": "boolean",
                                  },
                                  "promotedByReRanking": {
                                    "description": "Wether the record are promoted by the re-ranking strategy.",
                                    "type": "boolean",
                                  },
                                  "proximityDistance": {
                                    "description": "When the query contains more than one word, the sum of the distances between matched words (in meters).",
                                    "type": "integer",
                                  },
                                  "userScore": {
                                    "description": "Custom ranking for the object, expressed as a single integer value.",
                                    "type": "integer",
                                  },
                                  "words": {
                                    "description": "Number of matched words, including prefixes and typos.",
                                    "type": "integer",
                                  },
                                },
                                "required": [
                                  "promoted",
                                  "nbTypos",
                                  "firstMatchedWord",
                                  "geoDistance",
                                  "nbExactWords",
                                  "words",
                                  "filters",
                                  "userScore",
                                ],
                                "type": "object",
                              },
                              "_snippetResult": {
                                "additionalProperties": {
                                  "oneOf": [
                                    {
                                      "additionalProperties": false,
                                      "description": "Snippeted attributes show parts of the matched attributes. Only returned when attributesToSnippet is non-empty.",
                                      "properties": {
                                        "matchLevel": {
                                          "description": "Indicates how well the attribute matched the search query.",
                                          "enum": [
                                            "none",
                                            "partial",
                                            "full",
                                          ],
                                          "type": "string",
                                        },
                                        "value": {
                                          "description": "Markup text with occurrences highlighted.",
                                          "example": "<em>George</em> <em>Clo</em>oney",
                                          "type": "string",
                                        },
                                      },
                                      "required": [
                                        "value",
                                        "matchLevel",
                                      ],
                                      "type": "object",
                                    },
                                    {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Snippeted attributes show parts of the matched attributes. Only returned when attributesToSnippet is non-empty.",
                                        "properties": {
                                          "matchLevel": {
                                            "description": "Indicates how well the attribute matched the search query.",
                                            "enum": [
                                              "none",
                                              "partial",
                                              "full",
                                            ],
                                            "type": "string",
                                          },
                                          "value": {
                                            "description": "Markup text with occurrences highlighted.",
                                            "example": "<em>George</em> <em>Clo</em>oney",
                                            "type": "string",
                                          },
                                        },
                                        "required": [
                                          "value",
                                          "matchLevel",
                                        ],
                                        "type": "object",
                                      },
                                      "type": "array",
                                    },
                                  ],
                                },
                                "description": "Snippeted attributes show parts of the matched attributes. Only returned when attributesToSnippet is non-empty.",
                                "type": "object",
                              },
                              "objectID": {
                                "description": "Unique identifier of the object.",
                                "type": "string",
                              },
                            },
                            "required": [
                              "objectID",
                            ],
                            "type": "object",
                            "x-is-generic": true,
                          },
                          "type": "array",
                        },
                      },
                      "required": [
                        "hits",
                      ],
                      "type": "object",
                    },
                  ],
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Search in a single index.",
        "tags": [
          "Search",
        ],
        "x-cacheable": true,
        "x-use-read-transporter": true,
      },
    },
    "/1/indexes/{indexName}/rules/batch": {
      "post": {
        "description": "Create/update multiple rules objects at once.",
        "operationId": "saveRules",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "When true, changes are also propagated to replicas of the given indexName.",
            "in": "query",
            "name": "forwardToReplicas",
            "schema": {
              "type": "boolean",
            },
          },
          {
            "description": "When true, existing Rules are cleared before adding this batch. When false, existing Rules are kept.",
            "in": "query",
            "name": "clearExistingRules",
            "required": false,
            "schema": {
              "type": "boolean",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Rules to add.",
                "items": {
                  "additionalProperties": false,
                  "description": "Rule object.",
                  "properties": {
                    "conditions": {
                      "description": "A list of conditions that should apply to activate a Rule. You can use up to 25 conditions per Rule.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "alternatives": {
                            "default": false,
                            "description": "Whether the pattern matches on plurals, synonyms, and typos.",
                            "type": "boolean",
                          },
                          "anchoring": {
                            "description": "Whether the pattern parameter must match the beginning or the end of the query string, or both, or none.",
                            "enum": [
                              "is",
                              "startsWith",
                              "endsWith",
                              "contains",
                            ],
                            "type": "string",
                          },
                          "context": {
                            "description": "Rule context format: [A-Za-z0-9_-]+).",
                            "type": "string",
                          },
                          "pattern": {
                            "description": "Query pattern syntax.",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "consequence": {
                      "additionalProperties": false,
                      "description": "Consequence of the Rule.",
                      "properties": {
                        "filterPromotes": {
                          "default": false,
                          "description": "Only use in combination with the promote consequence. When true, promoted results will be restricted to match the filters of the current search. When false, the promoted results will show up regardless of the filters.",
                          "type": "boolean",
                        },
                        "hide": {
                          "description": "Objects to hide from hits. Each object must contain an objectID field. By default, you can hide up to 50 items per rule.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Unique identifier of the object to hide.",
                            "properties": {
                              "objectID": {
                                "description": "Unique identifier of the object.",
                                "type": "string",
                              },
                            },
                            "required": [
                              "objectID",
                            ],
                            "title": "consequenceHide",
                            "type": "object",
                          },
                          "type": "array",
                        },
                        "params": {
                          "allOf": [
                            {
                              "additionalProperties": false,
                              "properties": {
                                "analytics": {
                                  "default": true,
                                  "description": "Whether the current query will be taken into account in the Analytics.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Analytics",
                                  ],
                                },
                                "analyticsTags": {
                                  "default": [],
                                  "description": "List of tags to apply to the query for analytics purposes.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Analytics",
                                  ],
                                },
                                "aroundLatLng": {
                                  "default": "",
                                  "description": "Search for entries around a central geolocation, enabling a geo search within a circular area.",
                                  "type": "string",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "aroundLatLngViaIP": {
                                  "default": false,
                                  "description": "Search for entries around a given location automatically computed from the requester's IP address.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "aroundPrecision": {
                                  "default": 10,
                                  "description": "Precision of geo search (in meters), to add grouping by geo location to the ranking formula.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "aroundRadius": {
                                  "description": "Define the maximum radius for a geo search (in meters).",
                                  "oneOf": [
                                    {
                                      "minimum": 1,
                                      "type": "integer",
                                    },
                                    {
                                      "enum": [
                                        "all",
                                      ],
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "clickAnalytics": {
                                  "default": false,
                                  "description": "Enable the Click Analytics feature.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Analytics",
                                  ],
                                },
                                "enableABTest": {
                                  "default": true,
                                  "description": "Whether this search should participate in running AB tests.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "enableReRanking": {
                                  "default": true,
                                  "description": "Whether this search should use AI Re-Ranking.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "facetFilters": {
                                  "description": "Filter hits by facet value.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "facetingAfterDistinct": {
                                  "default": false,
                                  "description": "Force faceting to be applied after de-duplication (via the Distinct setting).",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Faceting",
                                  ],
                                },
                                "facets": {
                                  "default": [],
                                  "description": "Retrieve facets and their facet values.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Faceting",
                                  ],
                                },
                                "filters": {
                                  "default": "",
                                  "description": "Filter the query with numeric, facet and/or tag filters.",
                                  "type": "string",
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "getRankingInfo": {
                                  "default": false,
                                  "description": "Retrieve detailed ranking information.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "insideBoundingBox": {
                                  "description": "Search inside a rectangular area (in geo coordinates).",
                                  "items": {
                                    "format": "double",
                                    "type": "number",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "insidePolygon": {
                                  "description": "Search inside a polygon (in geo coordinates).",
                                  "items": {
                                    "format": "double",
                                    "type": "number",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "length": {
                                  "description": "Set the number of hits to retrieve (used only with offset).",
                                  "maximum": 1000,
                                  "minimum": 1,
                                  "type": "integer",
                                  "x-categories": [
                                    "Pagination",
                                  ],
                                },
                                "maxValuesPerFacet": {
                                  "default": 100,
                                  "description": "Maximum number of facet values to return for each facet during a regular search.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Faceting",
                                  ],
                                },
                                "minimumAroundRadius": {
                                  "description": "Minimum radius (in meters) used for a geo search when aroundRadius is not set.",
                                  "minimum": 1,
                                  "type": "integer",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "naturalLanguages": {
                                  "default": [],
                                  "description": "This parameter changes the default values of certain parameters and settings that work best for a natural language query, such as ignorePlurals, removeStopWords, removeWordsIfNoResults, analyticsTags and ruleContexts. These parameters and settings work well together when the query is formatted in natural language instead of keywords, for example when your user performs a voice search.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "numericFilters": {
                                  "description": "Filter on numeric attributes.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "offset": {
                                  "description": "Specify the offset of the first hit to return.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Pagination",
                                  ],
                                },
                                "optionalFilters": {
                                  "description": "Create filters for ranking purposes, where records that match the filter are ranked higher, or lower in the case of a negative optional filter.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "page": {
                                  "default": 0,
                                  "description": "Specify the page to retrieve.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Pagination",
                                  ],
                                },
                                "percentileComputation": {
                                  "default": true,
                                  "description": "Whether to include or exclude a query from the processing-time percentile computation.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "personalizationImpact": {
                                  "default": 100,
                                  "description": "Define the impact of the Personalization feature.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Personalization",
                                  ],
                                },
                                "reRankingApplyFilter": {
                                  "description": "When Dynamic Re-Ranking is enabled, only records that match these filters will be impacted by Dynamic Re-Ranking.",
                                  "nullable": true,
                                  "oneOf": [
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "ruleContexts": {
                                  "default": [],
                                  "description": "Enables contextual rules.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Rules",
                                  ],
                                },
                                "similarQuery": {
                                  "default": "",
                                  "description": "Overrides the query parameter and performs a more generic search that can be used to find \\"similar\\" results.",
                                  "type": "string",
                                  "x-categories": [
                                    "Search",
                                  ],
                                },
                                "sortFacetValuesBy": {
                                  "default": "count",
                                  "description": "Controls how facet values are fetched.",
                                  "type": "string",
                                  "x-categories": [
                                    "Faceting",
                                  ],
                                },
                                "sumOrFiltersScores": {
                                  "default": false,
                                  "description": "Determines how to calculate the total score for filtering.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "tagFilters": {
                                  "description": "Filter hits by tags.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "userToken": {
                                  "description": "Associates a certain user token with the current search.",
                                  "type": "string",
                                  "x-categories": [
                                    "Personalization",
                                  ],
                                },
                              },
                              "type": "object",
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "advancedSyntax": {
                                  "default": false,
                                  "description": "Enables the advanced query syntax.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "advancedSyntaxFeatures": {
                                  "default": [
                                    "exactPhrase",
                                    "excludeWords",
                                  ],
                                  "description": "Allows you to specify which advanced syntax features are active when ‘advancedSyntax' is enabled.",
                                  "items": {
                                    "enum": [
                                      "exactPhrase",
                                      "excludeWords",
                                    ],
                                    "type": "string",
                                    "x-categories": [
                                      "Query strategy",
                                    ],
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "allowTyposOnNumericTokens": {
                                  "default": true,
                                  "description": "Whether to allow typos on numbers (\\"numeric tokens\\") in the query string.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Typos",
                                  ],
                                },
                                "alternativesAsExact": {
                                  "default": [
                                    "ignorePlurals",
                                    "singleWordSynonym",
                                  ],
                                  "description": "List of alternatives that should be considered an exact match by the exact ranking criterion.",
                                  "items": {
                                    "enum": [
                                      "ignorePlurals",
                                      "singleWordSynonym",
                                      "multiWordsSynonym",
                                    ],
                                    "type": "string",
                                    "x-categories": [
                                      "Query strategy",
                                    ],
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "attributeCriteriaComputedByMinProximity": {
                                  "default": false,
                                  "description": "When attribute is ranked above proximity in your ranking formula, proximity is used to select which searchable attribute is matched in the attribute ranking stage.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "attributeForDistinct": {
                                  "description": "Name of the de-duplication attribute to be used with the distinct feature.",
                                  "type": "string",
                                },
                                "attributesForFaceting": {
                                  "default": [],
                                  "description": "The complete list of attributes that will be used for faceting.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Faceting",
                                  ],
                                },
                                "attributesToHighlight": {
                                  "description": "List of attributes to highlight.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "attributesToRetrieve": {
                                  "default": [
                                    "*",
                                  ],
                                  "description": "This parameter controls which attributes to retrieve and which not to retrieve.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Attributes",
                                  ],
                                },
                                "attributesToSnippet": {
                                  "default": [],
                                  "description": "List of attributes to snippet, with an optional maximum number of words to snippet.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "customRanking": {
                                  "default": [],
                                  "description": "Specifies the custom ranking criterion.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Ranking",
                                  ],
                                },
                                "decompoundQuery": {
                                  "default": true,
                                  "description": "Splits compound words into their composing atoms in the query.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "disableExactOnAttributes": {
                                  "default": [],
                                  "description": "List of attributes on which you want to disable the exact ranking criterion.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "disableTypoToleranceOnAttributes": {
                                  "default": [],
                                  "description": "List of attributes on which you want to disable typo tolerance.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Typos",
                                  ],
                                },
                                "distinct": {
                                  "description": "Enables de-duplication or grouping of results.",
                                  "oneOf": [
                                    {
                                      "type": "boolean",
                                    },
                                    {
                                      "default": 0,
                                      "maximum": 4,
                                      "minimum": 0,
                                      "type": "integer",
                                    },
                                  ],
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "enablePersonalization": {
                                  "default": false,
                                  "description": "Enable the Personalization feature.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Personalization",
                                  ],
                                },
                                "enableRules": {
                                  "default": true,
                                  "description": "Whether Rules should be globally enabled.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Rules",
                                  ],
                                },
                                "exactOnSingleWordQuery": {
                                  "default": "attribute",
                                  "description": "Controls how the exact ranking criterion is computed when the query contains only one word.",
                                  "enum": [
                                    "attribute",
                                    "none",
                                    "word",
                                  ],
                                  "type": "string",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "highlightPostTag": {
                                  "default": "</em>",
                                  "description": "The HTML string to insert after the highlighted parts in all highlight and snippet results.",
                                  "type": "string",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "highlightPreTag": {
                                  "default": "<em>",
                                  "description": "The HTML string to insert before the highlighted parts in all highlight and snippet results.",
                                  "type": "string",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "hitsPerPage": {
                                  "default": 20,
                                  "description": "Set the number of hits per page.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Pagination",
                                  ],
                                },
                                "ignorePlurals": {
                                  "description": "Treats singular, plurals, and other forms of declensions as matching terms.
ignorePlurals is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the ignore plurals functionality, where singulars and plurals are considered equivalent (foot = feet). The languages supported here are either every language (this is the default, see list of languages below), or those set by queryLanguages. false: disables ignore plurals, where singulars and plurals are not considered the same for matching purposes (foot will not find feet).
",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "default": false,
                                      "type": "boolean",
                                    },
                                  ],
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "keepDiacriticsOnCharacters": {
                                  "default": "",
                                  "description": "List of characters that the engine shouldn't automatically normalize.",
                                  "type": "string",
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "maxFacetHits": {
                                  "default": 10,
                                  "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                                  "maximum": 100,
                                  "type": "integer",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "minProximity": {
                                  "default": 1,
                                  "description": "Precision of the proximity ranking criterion.",
                                  "maximum": 7,
                                  "minimum": 1,
                                  "type": "integer",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "minWordSizefor1Typo": {
                                  "default": 4,
                                  "description": "Minimum number of characters a word in the query string must contain to accept matches with 1 typo.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Typos",
                                  ],
                                },
                                "minWordSizefor2Typos": {
                                  "default": 8,
                                  "description": "Minimum number of characters a word in the query string must contain to accept matches with 2 typos.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Typos",
                                  ],
                                },
                                "optionalWords": {
                                  "default": [],
                                  "description": "A list of words that should be considered as optional when found in the query.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "queryLanguages": {
                                  "default": [],
                                  "description": "Sets the languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "queryType": {
                                  "default": "prefixLast",
                                  "description": "Controls if and how query words are interpreted as prefixes.",
                                  "enum": [
                                    "prefixLast",
                                    "prefixAll",
                                    "prefixNone",
                                  ],
                                  "type": "string",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "ranking": {
                                  "default": [
                                    "typo",
                                    "geo",
                                    "words",
                                    "filters",
                                    "proximity",
                                    "attribute",
                                    "exact",
                                    "custom",
                                  ],
                                  "description": "Controls how Algolia should sort your results.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Ranking",
                                  ],
                                },
                                "relevancyStrictness": {
                                  "default": 100,
                                  "description": "Controls the relevancy threshold below which less relevant results aren't included in the results.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Ranking",
                                  ],
                                },
                                "removeStopWords": {
                                  "description": "Removes stop (common) words from the query before executing it.
removeStopWords is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the stop word functionality, ensuring that stop words are removed from consideration in a search. The languages supported here are either every language, or those set by queryLanguages. false: disables stop word functionality, allowing stop words to be taken into account in a search.
",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "default": false,
                                      "type": "boolean",
                                    },
                                  ],
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "removeWordsIfNoResults": {
                                  "default": "none",
                                  "description": "Selects a strategy to remove words from the query when it doesn't match any hits.",
                                  "enum": [
                                    "none",
                                    "lastWords",
                                    "firstWords",
                                    "allOptional",
                                  ],
                                  "type": "string",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "renderingContent": {
                                  "additionalProperties": false,
                                  "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                  "properties": {
                                    "facetOrdering": {
                                      "additionalProperties": false,
                                      "description": "Defining how facets should be ordered.",
                                      "properties": {
                                        "facets": {
                                          "additionalProperties": false,
                                          "description": "The ordering of facets (widgets).",
                                          "properties": {
                                            "order": {
                                              "description": "Pinned order of facet lists.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                          },
                                          "type": "object",
                                        },
                                        "values": {
                                          "additionalProperties": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "order": {
                                                "description": "Pinned order of facet lists.",
                                                "items": {
                                                  "type": "string",
                                                },
                                                "type": "array",
                                              },
                                              "sortRemainingBy": {
                                                "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                                "enum": [
                                                  "count",
                                                  "alpha",
                                                  "hidden",
                                                ],
                                                "type": "string",
                                              },
                                            },
                                            "type": "object",
                                          },
                                          "description": "The ordering of facet values, within an individual list.",
                                          "type": "object",
                                        },
                                      },
                                      "type": "object",
                                    },
                                  },
                                  "type": "object",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "replaceSynonymsInHighlight": {
                                  "default": false,
                                  "description": "Whether to highlight and snippet the original word that matches the synonym or the synonym itself.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "responseFields": {
                                  "default": [],
                                  "description": "Choose which fields to return in the API response. This parameters applies to search and browse queries.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "restrictHighlightAndSnippetArrays": {
                                  "default": false,
                                  "description": "Restrict highlighting and snippeting to items that matched the query.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "restrictSearchableAttributes": {
                                  "default": [],
                                  "description": "Restricts a given query to look in only a subset of your searchable attributes.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Attributes",
                                  ],
                                },
                                "snippetEllipsisText": {
                                  "default": "…",
                                  "description": "String used as an ellipsis indicator when a snippet is truncated.",
                                  "type": "string",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "synonyms": {
                                  "default": true,
                                  "description": "Whether to take into account an index's synonyms for a particular search.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "typoTolerance": {
                                  "description": "Controls whether typo tolerance is enabled and how it is applied.",
                                  "oneOf": [
                                    {
                                      "default": true,
                                      "type": "boolean",
                                    },
                                    {
                                      "enum": [
                                        "min",
                                        "strict",
                                      ],
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Typos",
                                  ],
                                },
                              },
                              "type": "object",
                            },
                            {
                              "additionalProperties": false,
                              "description": "Additional search parameters. Any valid search parameter is allowed.",
                              "properties": {
                                "automaticFacetFilters": {
                                  "description": "Names of facets to which automatic filtering must be applied; they must match the facet name of a facet value placeholder in the query pattern.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Automatic facet Filter.",
                                        "properties": {
                                          "disjunctive": {
                                            "default": false,
                                            "description": "Whether the filter is disjunctive (true) or conjunctive (false).",
                                            "type": "boolean",
                                          },
                                          "facet": {
                                            "description": "Attribute to filter on. This must match a facet placeholder in the Rule's pattern.",
                                            "type": "string",
                                          },
                                          "score": {
                                            "default": 1,
                                            "description": "Score for the filter. Typically used for optional or disjunctive filters.",
                                            "type": "integer",
                                          },
                                        },
                                        "required": [
                                          "facet",
                                        ],
                                        "type": "object",
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                  ],
                                },
                                "automaticOptionalFacetFilters": {
                                  "description": "Same syntax as automaticFacetFilters, but the engine treats the filters as optional.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Automatic facet Filter.",
                                        "properties": {
                                          "disjunctive": {
                                            "default": false,
                                            "description": "Whether the filter is disjunctive (true) or conjunctive (false).",
                                            "type": "boolean",
                                          },
                                          "facet": {
                                            "description": "Attribute to filter on. This must match a facet placeholder in the Rule's pattern.",
                                            "type": "string",
                                          },
                                          "score": {
                                            "default": 1,
                                            "description": "Score for the filter. Typically used for optional or disjunctive filters.",
                                            "type": "integer",
                                          },
                                        },
                                        "required": [
                                          "facet",
                                        ],
                                        "type": "object",
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                  ],
                                },
                                "query": {
                                  "description": "When providing a string, it replaces the entire query string. When providing an object, it describes incremental edits to be made to the query string (but you can't do both).",
                                  "oneOf": [
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "edits": {
                                          "description": "Edits to apply.",
                                          "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "delete": {
                                                "description": "Text or patterns to remove from the query string.",
                                                "type": "string",
                                              },
                                              "insert": {
                                                "description": "Text that should be inserted in place of the removed text inside the query string.",
                                                "type": "string",
                                              },
                                              "type": {
                                                "description": "Type of edit.",
                                                "enum": [
                                                  "remove",
                                                  "replace",
                                                ],
                                                "type": "string",
                                              },
                                            },
                                            "type": "object",
                                          },
                                          "type": "array",
                                        },
                                        "remove": {
                                          "description": "Words to remove.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                      },
                                      "type": "object",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                },
                                "renderingContent": {
                                  "additionalProperties": false,
                                  "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                  "properties": {
                                    "facetOrdering": {
                                      "additionalProperties": false,
                                      "description": "Defining how facets should be ordered.",
                                      "properties": {
                                        "facets": {
                                          "additionalProperties": false,
                                          "description": "The ordering of facets (widgets).",
                                          "properties": {
                                            "order": {
                                              "description": "Pinned order of facet lists.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                          },
                                          "type": "object",
                                        },
                                        "values": {
                                          "additionalProperties": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "order": {
                                                "description": "Pinned order of facet lists.",
                                                "items": {
                                                  "type": "string",
                                                },
                                                "type": "array",
                                              },
                                              "sortRemainingBy": {
                                                "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                                "enum": [
                                                  "count",
                                                  "alpha",
                                                  "hidden",
                                                ],
                                                "type": "string",
                                              },
                                            },
                                            "type": "object",
                                          },
                                          "description": "The ordering of facet values, within an individual list.",
                                          "type": "object",
                                        },
                                      },
                                      "type": "object",
                                    },
                                  },
                                  "type": "object",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                              },
                              "type": "object",
                            },
                          ],
                        },
                        "promote": {
                          "description": "Objects to promote as hits.",
                          "items": {
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Multiple objectIDs to promote as hits.",
                                "properties": {
                                  "objectIDs": {
                                    "description": "Array of unique identifiers of the objects to promote.",
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                  },
                                  "position": {
                                    "description": "The position to promote the objects to (zero-based). If you pass objectIDs, the objects are placed at this position as a group. For example, if you pass four objectIDs to position 0, the objects take the first four positions.",
                                    "type": "integer",
                                  },
                                },
                                "required": [
                                  "position",
                                  "objectIDs",
                                ],
                                "type": "object",
                              },
                              {
                                "additionalProperties": false,
                                "description": "Single objectID to promote as hits.",
                                "properties": {
                                  "objectID": {
                                    "description": "Unique identifier of the object to promote.",
                                    "type": "string",
                                  },
                                  "position": {
                                    "description": "The position to promote the objects to (zero-based). If you pass objectIDs, the objects are placed at this position as a group. For example, if you pass four objectIDs to position 0, the objects take the first four positions.",
                                    "type": "integer",
                                  },
                                },
                                "required": [
                                  "position",
                                  "objectID",
                                ],
                                "type": "object",
                              },
                            ],
                          },
                          "type": "array",
                        },
                        "userData": {
                          "description": "Custom JSON object that will be appended to the userData array in the response. This object isn't interpreted by the API. It's limited to 1kB of minified JSON.",
                          "type": "object",
                        },
                      },
                      "type": "object",
                    },
                    "description": {
                      "description": "This field is intended for Rule management purposes, in particular to ease searching for Rules and presenting them to human readers. It's not interpreted by the API.",
                      "type": "string",
                    },
                    "enabled": {
                      "default": true,
                      "description": "Whether the Rule is enabled. Disabled Rules remain in the index, but aren't applied at query time.",
                      "type": "boolean",
                    },
                    "objectID": {
                      "description": "Unique identifier of the object.",
                      "type": "string",
                    },
                    "validity": {
                      "description": "By default, Rules are permanently valid. When validity periods are specified, the Rule applies only during those periods; it's ignored the rest of the time. The list must not be empty.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "from": {
                            "description": "Lower bound of the time range (Unix timestamp).",
                            "type": "integer",
                          },
                          "until": {
                            "description": "Upper bound of the time range (Unix timestamp).",
                            "type": "integer",
                          },
                        },
                        "required": [
                          "from",
                          "until",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "objectID",
                  ],
                  "type": "object",
                },
                "type": "array",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and an updatedAt timestamp.",
                  "properties": {
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                  ],
                  "title": "updatedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Save a batch of rules.",
        "tags": [
          "Rules",
        ],
        "x-codegen-request-body-name": "rules",
      },
    },
    "/1/indexes/{indexName}/rules/clear": {
      "post": {
        "description": "Delete all Rules in the index.",
        "operationId": "clearRules",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "When true, changes are also propagated to replicas of the given indexName.",
            "in": "query",
            "name": "forwardToReplicas",
            "schema": {
              "type": "boolean",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and an updatedAt timestamp.",
                  "properties": {
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                  ],
                  "title": "updatedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Clear Rules.",
        "tags": [
          "Rules",
        ],
      },
    },
    "/1/indexes/{indexName}/rules/search": {
      "post": {
        "description": "Search for rules matching various criteria.",
        "operationId": "searchRules",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Parameters for the search.",
                "properties": {
                  "anchoring": {
                    "description": "Whether the pattern parameter must match the beginning or the end of the query string, or both, or none.",
                    "enum": [
                      "is",
                      "startsWith",
                      "endsWith",
                      "contains",
                    ],
                    "type": "string",
                  },
                  "context": {
                    "description": "Restricts matches to contextual rules with a specific context (exact match).",
                    "type": "string",
                  },
                  "enabled": {
                    "default": null,
                    "description": "When specified, restricts matches to rules with a specific enabled status. When absent (default), all rules are retrieved, regardless of their enabled status.",
                    "nullable": true,
                    "type": "boolean",
                  },
                  "hitsPerPage": {
                    "default": 20,
                    "description": "Maximum number of hits in a page. Minimum is 1, maximum is 1000.",
                    "type": "integer",
                  },
                  "page": {
                    "default": 0,
                    "description": "Requested page (zero-based).",
                    "type": "integer",
                  },
                  "query": {
                    "default": "",
                    "description": "Full text query.",
                    "type": "string",
                  },
                  "requestOptions": {
                    "description": "A mapping of requestOptions to send along with the request.",
                    "items": {
                      "description": "Request Option.",
                      "type": "object",
                    },
                    "type": "array",
                  },
                },
                "title": "searchRulesParams",
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "hits": {
                      "description": "Fetched rules.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Rule object.",
                        "properties": {
                          "conditions": {
                            "description": "A list of conditions that should apply to activate a Rule. You can use up to 25 conditions per Rule.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "alternatives": {
                                  "default": false,
                                  "description": "Whether the pattern matches on plurals, synonyms, and typos.",
                                  "type": "boolean",
                                },
                                "anchoring": {
                                  "description": "Whether the pattern parameter must match the beginning or the end of the query string, or both, or none.",
                                  "enum": [
                                    "is",
                                    "startsWith",
                                    "endsWith",
                                    "contains",
                                  ],
                                  "type": "string",
                                },
                                "context": {
                                  "description": "Rule context format: [A-Za-z0-9_-]+).",
                                  "type": "string",
                                },
                                "pattern": {
                                  "description": "Query pattern syntax.",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "consequence": {
                            "additionalProperties": false,
                            "description": "Consequence of the Rule.",
                            "properties": {
                              "filterPromotes": {
                                "default": false,
                                "description": "Only use in combination with the promote consequence. When true, promoted results will be restricted to match the filters of the current search. When false, the promoted results will show up regardless of the filters.",
                                "type": "boolean",
                              },
                              "hide": {
                                "description": "Objects to hide from hits. Each object must contain an objectID field. By default, you can hide up to 50 items per rule.",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Unique identifier of the object to hide.",
                                  "properties": {
                                    "objectID": {
                                      "description": "Unique identifier of the object.",
                                      "type": "string",
                                    },
                                  },
                                  "required": [
                                    "objectID",
                                  ],
                                  "title": "consequenceHide",
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "params": {
                                "allOf": [
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "analytics": {
                                        "default": true,
                                        "description": "Whether the current query will be taken into account in the Analytics.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Analytics",
                                        ],
                                      },
                                      "analyticsTags": {
                                        "default": [],
                                        "description": "List of tags to apply to the query for analytics purposes.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Analytics",
                                        ],
                                      },
                                      "aroundLatLng": {
                                        "default": "",
                                        "description": "Search for entries around a central geolocation, enabling a geo search within a circular area.",
                                        "type": "string",
                                        "x-categories": [
                                          "Geo-Search",
                                        ],
                                      },
                                      "aroundLatLngViaIP": {
                                        "default": false,
                                        "description": "Search for entries around a given location automatically computed from the requester's IP address.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Geo-Search",
                                        ],
                                      },
                                      "aroundPrecision": {
                                        "default": 10,
                                        "description": "Precision of geo search (in meters), to add grouping by geo location to the ranking formula.",
                                        "type": "integer",
                                        "x-categories": [
                                          "Geo-Search",
                                        ],
                                      },
                                      "aroundRadius": {
                                        "description": "Define the maximum radius for a geo search (in meters).",
                                        "oneOf": [
                                          {
                                            "minimum": 1,
                                            "type": "integer",
                                          },
                                          {
                                            "enum": [
                                              "all",
                                            ],
                                            "type": "string",
                                          },
                                        ],
                                        "x-categories": [
                                          "Geo-Search",
                                        ],
                                      },
                                      "clickAnalytics": {
                                        "default": false,
                                        "description": "Enable the Click Analytics feature.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Analytics",
                                        ],
                                      },
                                      "enableABTest": {
                                        "default": true,
                                        "description": "Whether this search should participate in running AB tests.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                      "enableReRanking": {
                                        "default": true,
                                        "description": "Whether this search should use AI Re-Ranking.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                      "facetFilters": {
                                        "description": "Filter hits by facet value.",
                                        "oneOf": [
                                          {
                                            "items": {
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "type": "string",
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                        "x-categories": [
                                          "Filtering",
                                        ],
                                      },
                                      "facetingAfterDistinct": {
                                        "default": false,
                                        "description": "Force faceting to be applied after de-duplication (via the Distinct setting).",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Faceting",
                                        ],
                                      },
                                      "facets": {
                                        "default": [],
                                        "description": "Retrieve facets and their facet values.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Faceting",
                                        ],
                                      },
                                      "filters": {
                                        "default": "",
                                        "description": "Filter the query with numeric, facet and/or tag filters.",
                                        "type": "string",
                                        "x-categories": [
                                          "Filtering",
                                        ],
                                      },
                                      "getRankingInfo": {
                                        "default": false,
                                        "description": "Retrieve detailed ranking information.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                      "insideBoundingBox": {
                                        "description": "Search inside a rectangular area (in geo coordinates).",
                                        "items": {
                                          "format": "double",
                                          "type": "number",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Geo-Search",
                                        ],
                                      },
                                      "insidePolygon": {
                                        "description": "Search inside a polygon (in geo coordinates).",
                                        "items": {
                                          "format": "double",
                                          "type": "number",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Geo-Search",
                                        ],
                                      },
                                      "length": {
                                        "description": "Set the number of hits to retrieve (used only with offset).",
                                        "maximum": 1000,
                                        "minimum": 1,
                                        "type": "integer",
                                        "x-categories": [
                                          "Pagination",
                                        ],
                                      },
                                      "maxValuesPerFacet": {
                                        "default": 100,
                                        "description": "Maximum number of facet values to return for each facet during a regular search.",
                                        "type": "integer",
                                        "x-categories": [
                                          "Faceting",
                                        ],
                                      },
                                      "minimumAroundRadius": {
                                        "description": "Minimum radius (in meters) used for a geo search when aroundRadius is not set.",
                                        "minimum": 1,
                                        "type": "integer",
                                        "x-categories": [
                                          "Geo-Search",
                                        ],
                                      },
                                      "naturalLanguages": {
                                        "default": [],
                                        "description": "This parameter changes the default values of certain parameters and settings that work best for a natural language query, such as ignorePlurals, removeStopWords, removeWordsIfNoResults, analyticsTags and ruleContexts. These parameters and settings work well together when the query is formatted in natural language instead of keywords, for example when your user performs a voice search.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Languages",
                                        ],
                                      },
                                      "numericFilters": {
                                        "description": "Filter on numeric attributes.",
                                        "oneOf": [
                                          {
                                            "items": {
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "type": "string",
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                        "x-categories": [
                                          "Filtering",
                                        ],
                                      },
                                      "offset": {
                                        "description": "Specify the offset of the first hit to return.",
                                        "type": "integer",
                                        "x-categories": [
                                          "Pagination",
                                        ],
                                      },
                                      "optionalFilters": {
                                        "description": "Create filters for ranking purposes, where records that match the filter are ranked higher, or lower in the case of a negative optional filter.",
                                        "oneOf": [
                                          {
                                            "items": {
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "type": "string",
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                        "x-categories": [
                                          "Filtering",
                                        ],
                                      },
                                      "page": {
                                        "default": 0,
                                        "description": "Specify the page to retrieve.",
                                        "type": "integer",
                                        "x-categories": [
                                          "Pagination",
                                        ],
                                      },
                                      "percentileComputation": {
                                        "default": true,
                                        "description": "Whether to include or exclude a query from the processing-time percentile computation.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                      "personalizationImpact": {
                                        "default": 100,
                                        "description": "Define the impact of the Personalization feature.",
                                        "type": "integer",
                                        "x-categories": [
                                          "Personalization",
                                        ],
                                      },
                                      "reRankingApplyFilter": {
                                        "description": "When Dynamic Re-Ranking is enabled, only records that match these filters will be impacted by Dynamic Re-Ranking.",
                                        "nullable": true,
                                        "oneOf": [
                                          {
                                            "items": {
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "type": "string",
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                        "x-categories": [
                                          "Filtering",
                                        ],
                                      },
                                      "ruleContexts": {
                                        "default": [],
                                        "description": "Enables contextual rules.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Rules",
                                        ],
                                      },
                                      "similarQuery": {
                                        "default": "",
                                        "description": "Overrides the query parameter and performs a more generic search that can be used to find \\"similar\\" results.",
                                        "type": "string",
                                        "x-categories": [
                                          "Search",
                                        ],
                                      },
                                      "sortFacetValuesBy": {
                                        "default": "count",
                                        "description": "Controls how facet values are fetched.",
                                        "type": "string",
                                        "x-categories": [
                                          "Faceting",
                                        ],
                                      },
                                      "sumOrFiltersScores": {
                                        "default": false,
                                        "description": "Determines how to calculate the total score for filtering.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Filtering",
                                        ],
                                      },
                                      "tagFilters": {
                                        "description": "Filter hits by tags.",
                                        "oneOf": [
                                          {
                                            "items": {
                                              "oneOf": [
                                                {
                                                  "items": {
                                                    "type": "string",
                                                  },
                                                  "type": "array",
                                                },
                                                {
                                                  "type": "string",
                                                },
                                              ],
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                        "x-categories": [
                                          "Filtering",
                                        ],
                                      },
                                      "userToken": {
                                        "description": "Associates a certain user token with the current search.",
                                        "type": "string",
                                        "x-categories": [
                                          "Personalization",
                                        ],
                                      },
                                    },
                                    "type": "object",
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "advancedSyntax": {
                                        "default": false,
                                        "description": "Enables the advanced query syntax.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Query strategy",
                                        ],
                                      },
                                      "advancedSyntaxFeatures": {
                                        "default": [
                                          "exactPhrase",
                                          "excludeWords",
                                        ],
                                        "description": "Allows you to specify which advanced syntax features are active when ‘advancedSyntax' is enabled.",
                                        "items": {
                                          "enum": [
                                            "exactPhrase",
                                            "excludeWords",
                                          ],
                                          "type": "string",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Query strategy",
                                        ],
                                      },
                                      "allowTyposOnNumericTokens": {
                                        "default": true,
                                        "description": "Whether to allow typos on numbers (\\"numeric tokens\\") in the query string.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Typos",
                                        ],
                                      },
                                      "alternativesAsExact": {
                                        "default": [
                                          "ignorePlurals",
                                          "singleWordSynonym",
                                        ],
                                        "description": "List of alternatives that should be considered an exact match by the exact ranking criterion.",
                                        "items": {
                                          "enum": [
                                            "ignorePlurals",
                                            "singleWordSynonym",
                                            "multiWordsSynonym",
                                          ],
                                          "type": "string",
                                          "x-categories": [
                                            "Query strategy",
                                          ],
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Query strategy",
                                        ],
                                      },
                                      "attributeCriteriaComputedByMinProximity": {
                                        "default": false,
                                        "description": "When attribute is ranked above proximity in your ranking formula, proximity is used to select which searchable attribute is matched in the attribute ranking stage.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                      "attributeForDistinct": {
                                        "description": "Name of the de-duplication attribute to be used with the distinct feature.",
                                        "type": "string",
                                      },
                                      "attributesForFaceting": {
                                        "default": [],
                                        "description": "The complete list of attributes that will be used for faceting.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Faceting",
                                        ],
                                      },
                                      "attributesToHighlight": {
                                        "description": "List of attributes to highlight.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Highlighting and Snippeting",
                                        ],
                                      },
                                      "attributesToRetrieve": {
                                        "default": [
                                          "*",
                                        ],
                                        "description": "This parameter controls which attributes to retrieve and which not to retrieve.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Attributes",
                                        ],
                                      },
                                      "attributesToSnippet": {
                                        "default": [],
                                        "description": "List of attributes to snippet, with an optional maximum number of words to snippet.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Highlighting and Snippeting",
                                        ],
                                      },
                                      "customRanking": {
                                        "default": [],
                                        "description": "Specifies the custom ranking criterion.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Ranking",
                                        ],
                                      },
                                      "decompoundQuery": {
                                        "default": true,
                                        "description": "Splits compound words into their composing atoms in the query.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Languages",
                                        ],
                                      },
                                      "disableExactOnAttributes": {
                                        "default": [],
                                        "description": "List of attributes on which you want to disable the exact ranking criterion.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Query strategy",
                                        ],
                                      },
                                      "disableTypoToleranceOnAttributes": {
                                        "default": [],
                                        "description": "List of attributes on which you want to disable typo tolerance.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Typos",
                                        ],
                                      },
                                      "distinct": {
                                        "description": "Enables de-duplication or grouping of results.",
                                        "oneOf": [
                                          {
                                            "type": "boolean",
                                          },
                                          {
                                            "default": 0,
                                            "maximum": 4,
                                            "minimum": 0,
                                            "type": "integer",
                                          },
                                        ],
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                      "enablePersonalization": {
                                        "default": false,
                                        "description": "Enable the Personalization feature.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Personalization",
                                        ],
                                      },
                                      "enableRules": {
                                        "default": true,
                                        "description": "Whether Rules should be globally enabled.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Rules",
                                        ],
                                      },
                                      "exactOnSingleWordQuery": {
                                        "default": "attribute",
                                        "description": "Controls how the exact ranking criterion is computed when the query contains only one word.",
                                        "enum": [
                                          "attribute",
                                          "none",
                                          "word",
                                        ],
                                        "type": "string",
                                        "x-categories": [
                                          "Query strategy",
                                        ],
                                      },
                                      "highlightPostTag": {
                                        "default": "</em>",
                                        "description": "The HTML string to insert after the highlighted parts in all highlight and snippet results.",
                                        "type": "string",
                                        "x-categories": [
                                          "Highlighting and Snippeting",
                                        ],
                                      },
                                      "highlightPreTag": {
                                        "default": "<em>",
                                        "description": "The HTML string to insert before the highlighted parts in all highlight and snippet results.",
                                        "type": "string",
                                        "x-categories": [
                                          "Highlighting and Snippeting",
                                        ],
                                      },
                                      "hitsPerPage": {
                                        "default": 20,
                                        "description": "Set the number of hits per page.",
                                        "type": "integer",
                                        "x-categories": [
                                          "Pagination",
                                        ],
                                      },
                                      "ignorePlurals": {
                                        "description": "Treats singular, plurals, and other forms of declensions as matching terms.
ignorePlurals is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the ignore plurals functionality, where singulars and plurals are considered equivalent (foot = feet). The languages supported here are either every language (this is the default, see list of languages below), or those set by queryLanguages. false: disables ignore plurals, where singulars and plurals are not considered the same for matching purposes (foot will not find feet).
",
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "default": false,
                                            "type": "boolean",
                                          },
                                        ],
                                        "x-categories": [
                                          "Languages",
                                        ],
                                      },
                                      "keepDiacriticsOnCharacters": {
                                        "default": "",
                                        "description": "List of characters that the engine shouldn't automatically normalize.",
                                        "type": "string",
                                        "x-categories": [
                                          "Languages",
                                        ],
                                      },
                                      "maxFacetHits": {
                                        "default": 10,
                                        "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                                        "maximum": 100,
                                        "type": "integer",
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                      "minProximity": {
                                        "default": 1,
                                        "description": "Precision of the proximity ranking criterion.",
                                        "maximum": 7,
                                        "minimum": 1,
                                        "type": "integer",
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                      "minWordSizefor1Typo": {
                                        "default": 4,
                                        "description": "Minimum number of characters a word in the query string must contain to accept matches with 1 typo.",
                                        "type": "integer",
                                        "x-categories": [
                                          "Typos",
                                        ],
                                      },
                                      "minWordSizefor2Typos": {
                                        "default": 8,
                                        "description": "Minimum number of characters a word in the query string must contain to accept matches with 2 typos.",
                                        "type": "integer",
                                        "x-categories": [
                                          "Typos",
                                        ],
                                      },
                                      "optionalWords": {
                                        "default": [],
                                        "description": "A list of words that should be considered as optional when found in the query.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Query strategy",
                                        ],
                                      },
                                      "queryLanguages": {
                                        "default": [],
                                        "description": "Sets the languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Languages",
                                        ],
                                      },
                                      "queryType": {
                                        "default": "prefixLast",
                                        "description": "Controls if and how query words are interpreted as prefixes.",
                                        "enum": [
                                          "prefixLast",
                                          "prefixAll",
                                          "prefixNone",
                                        ],
                                        "type": "string",
                                        "x-categories": [
                                          "Query strategy",
                                        ],
                                      },
                                      "ranking": {
                                        "default": [
                                          "typo",
                                          "geo",
                                          "words",
                                          "filters",
                                          "proximity",
                                          "attribute",
                                          "exact",
                                          "custom",
                                        ],
                                        "description": "Controls how Algolia should sort your results.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Ranking",
                                        ],
                                      },
                                      "relevancyStrictness": {
                                        "default": 100,
                                        "description": "Controls the relevancy threshold below which less relevant results aren't included in the results.",
                                        "type": "integer",
                                        "x-categories": [
                                          "Ranking",
                                        ],
                                      },
                                      "removeStopWords": {
                                        "description": "Removes stop (common) words from the query before executing it.
removeStopWords is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the stop word functionality, ensuring that stop words are removed from consideration in a search. The languages supported here are either every language, or those set by queryLanguages. false: disables stop word functionality, allowing stop words to be taken into account in a search.
",
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "default": false,
                                            "type": "boolean",
                                          },
                                        ],
                                        "x-categories": [
                                          "Languages",
                                        ],
                                      },
                                      "removeWordsIfNoResults": {
                                        "default": "none",
                                        "description": "Selects a strategy to remove words from the query when it doesn't match any hits.",
                                        "enum": [
                                          "none",
                                          "lastWords",
                                          "firstWords",
                                          "allOptional",
                                        ],
                                        "type": "string",
                                        "x-categories": [
                                          "Query strategy",
                                        ],
                                      },
                                      "renderingContent": {
                                        "additionalProperties": false,
                                        "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                        "properties": {
                                          "facetOrdering": {
                                            "additionalProperties": false,
                                            "description": "Defining how facets should be ordered.",
                                            "properties": {
                                              "facets": {
                                                "additionalProperties": false,
                                                "description": "The ordering of facets (widgets).",
                                                "properties": {
                                                  "order": {
                                                    "description": "Pinned order of facet lists.",
                                                    "items": {
                                                      "type": "string",
                                                    },
                                                    "type": "array",
                                                  },
                                                },
                                                "type": "object",
                                              },
                                              "values": {
                                                "additionalProperties": {
                                                  "additionalProperties": false,
                                                  "properties": {
                                                    "order": {
                                                      "description": "Pinned order of facet lists.",
                                                      "items": {
                                                        "type": "string",
                                                      },
                                                      "type": "array",
                                                    },
                                                    "sortRemainingBy": {
                                                      "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                                      "enum": [
                                                        "count",
                                                        "alpha",
                                                        "hidden",
                                                      ],
                                                      "type": "string",
                                                    },
                                                  },
                                                  "type": "object",
                                                },
                                                "description": "The ordering of facet values, within an individual list.",
                                                "type": "object",
                                              },
                                            },
                                            "type": "object",
                                          },
                                        },
                                        "type": "object",
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                      "replaceSynonymsInHighlight": {
                                        "default": false,
                                        "description": "Whether to highlight and snippet the original word that matches the synonym or the synonym itself.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Highlighting and Snippeting",
                                        ],
                                      },
                                      "responseFields": {
                                        "default": [],
                                        "description": "Choose which fields to return in the API response. This parameters applies to search and browse queries.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                      "restrictHighlightAndSnippetArrays": {
                                        "default": false,
                                        "description": "Restrict highlighting and snippeting to items that matched the query.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Highlighting and Snippeting",
                                        ],
                                      },
                                      "restrictSearchableAttributes": {
                                        "default": [],
                                        "description": "Restricts a given query to look in only a subset of your searchable attributes.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                        "x-categories": [
                                          "Attributes",
                                        ],
                                      },
                                      "snippetEllipsisText": {
                                        "default": "…",
                                        "description": "String used as an ellipsis indicator when a snippet is truncated.",
                                        "type": "string",
                                        "x-categories": [
                                          "Highlighting and Snippeting",
                                        ],
                                      },
                                      "synonyms": {
                                        "default": true,
                                        "description": "Whether to take into account an index's synonyms for a particular search.",
                                        "type": "boolean",
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                      "typoTolerance": {
                                        "description": "Controls whether typo tolerance is enabled and how it is applied.",
                                        "oneOf": [
                                          {
                                            "default": true,
                                            "type": "boolean",
                                          },
                                          {
                                            "enum": [
                                              "min",
                                              "strict",
                                            ],
                                            "type": "string",
                                          },
                                        ],
                                        "x-categories": [
                                          "Typos",
                                        ],
                                      },
                                    },
                                    "type": "object",
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Additional search parameters. Any valid search parameter is allowed.",
                                    "properties": {
                                      "automaticFacetFilters": {
                                        "description": "Names of facets to which automatic filtering must be applied; they must match the facet name of a facet value placeholder in the query pattern.",
                                        "oneOf": [
                                          {
                                            "items": {
                                              "additionalProperties": false,
                                              "description": "Automatic facet Filter.",
                                              "properties": {
                                                "disjunctive": {
                                                  "default": false,
                                                  "description": "Whether the filter is disjunctive (true) or conjunctive (false).",
                                                  "type": "boolean",
                                                },
                                                "facet": {
                                                  "description": "Attribute to filter on. This must match a facet placeholder in the Rule's pattern.",
                                                  "type": "string",
                                                },
                                                "score": {
                                                  "default": 1,
                                                  "description": "Score for the filter. Typically used for optional or disjunctive filters.",
                                                  "type": "integer",
                                                },
                                              },
                                              "required": [
                                                "facet",
                                              ],
                                              "type": "object",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                        ],
                                      },
                                      "automaticOptionalFacetFilters": {
                                        "description": "Same syntax as automaticFacetFilters, but the engine treats the filters as optional.",
                                        "oneOf": [
                                          {
                                            "items": {
                                              "additionalProperties": false,
                                              "description": "Automatic facet Filter.",
                                              "properties": {
                                                "disjunctive": {
                                                  "default": false,
                                                  "description": "Whether the filter is disjunctive (true) or conjunctive (false).",
                                                  "type": "boolean",
                                                },
                                                "facet": {
                                                  "description": "Attribute to filter on. This must match a facet placeholder in the Rule's pattern.",
                                                  "type": "string",
                                                },
                                                "score": {
                                                  "default": 1,
                                                  "description": "Score for the filter. Typically used for optional or disjunctive filters.",
                                                  "type": "integer",
                                                },
                                              },
                                              "required": [
                                                "facet",
                                              ],
                                              "type": "object",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                        ],
                                      },
                                      "query": {
                                        "description": "When providing a string, it replaces the entire query string. When providing an object, it describes incremental edits to be made to the query string (but you can't do both).",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "properties": {
                                              "edits": {
                                                "description": "Edits to apply.",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "properties": {
                                                    "delete": {
                                                      "description": "Text or patterns to remove from the query string.",
                                                      "type": "string",
                                                    },
                                                    "insert": {
                                                      "description": "Text that should be inserted in place of the removed text inside the query string.",
                                                      "type": "string",
                                                    },
                                                    "type": {
                                                      "description": "Type of edit.",
                                                      "enum": [
                                                        "remove",
                                                        "replace",
                                                      ],
                                                      "type": "string",
                                                    },
                                                  },
                                                  "type": "object",
                                                },
                                                "type": "array",
                                              },
                                              "remove": {
                                                "description": "Words to remove.",
                                                "items": {
                                                  "type": "string",
                                                },
                                                "type": "array",
                                              },
                                            },
                                            "type": "object",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                      },
                                      "renderingContent": {
                                        "additionalProperties": false,
                                        "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                        "properties": {
                                          "facetOrdering": {
                                            "additionalProperties": false,
                                            "description": "Defining how facets should be ordered.",
                                            "properties": {
                                              "facets": {
                                                "additionalProperties": false,
                                                "description": "The ordering of facets (widgets).",
                                                "properties": {
                                                  "order": {
                                                    "description": "Pinned order of facet lists.",
                                                    "items": {
                                                      "type": "string",
                                                    },
                                                    "type": "array",
                                                  },
                                                },
                                                "type": "object",
                                              },
                                              "values": {
                                                "additionalProperties": {
                                                  "additionalProperties": false,
                                                  "properties": {
                                                    "order": {
                                                      "description": "Pinned order of facet lists.",
                                                      "items": {
                                                        "type": "string",
                                                      },
                                                      "type": "array",
                                                    },
                                                    "sortRemainingBy": {
                                                      "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                                      "enum": [
                                                        "count",
                                                        "alpha",
                                                        "hidden",
                                                      ],
                                                      "type": "string",
                                                    },
                                                  },
                                                  "type": "object",
                                                },
                                                "description": "The ordering of facet values, within an individual list.",
                                                "type": "object",
                                              },
                                            },
                                            "type": "object",
                                          },
                                        },
                                        "type": "object",
                                        "x-categories": [
                                          "Advanced",
                                        ],
                                      },
                                    },
                                    "type": "object",
                                  },
                                ],
                              },
                              "promote": {
                                "description": "Objects to promote as hits.",
                                "items": {
                                  "oneOf": [
                                    {
                                      "additionalProperties": false,
                                      "description": "Multiple objectIDs to promote as hits.",
                                      "properties": {
                                        "objectIDs": {
                                          "description": "Array of unique identifiers of the objects to promote.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        "position": {
                                          "description": "The position to promote the objects to (zero-based). If you pass objectIDs, the objects are placed at this position as a group. For example, if you pass four objectIDs to position 0, the objects take the first four positions.",
                                          "type": "integer",
                                        },
                                      },
                                      "required": [
                                        "position",
                                        "objectIDs",
                                      ],
                                      "type": "object",
                                    },
                                    {
                                      "additionalProperties": false,
                                      "description": "Single objectID to promote as hits.",
                                      "properties": {
                                        "objectID": {
                                          "description": "Unique identifier of the object to promote.",
                                          "type": "string",
                                        },
                                        "position": {
                                          "description": "The position to promote the objects to (zero-based). If you pass objectIDs, the objects are placed at this position as a group. For example, if you pass four objectIDs to position 0, the objects take the first four positions.",
                                          "type": "integer",
                                        },
                                      },
                                      "required": [
                                        "position",
                                        "objectID",
                                      ],
                                      "type": "object",
                                    },
                                  ],
                                },
                                "type": "array",
                              },
                              "userData": {
                                "description": "Custom JSON object that will be appended to the userData array in the response. This object isn't interpreted by the API. It's limited to 1kB of minified JSON.",
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                          "description": {
                            "description": "This field is intended for Rule management purposes, in particular to ease searching for Rules and presenting them to human readers. It's not interpreted by the API.",
                            "type": "string",
                          },
                          "enabled": {
                            "default": true,
                            "description": "Whether the Rule is enabled. Disabled Rules remain in the index, but aren't applied at query time.",
                            "type": "boolean",
                          },
                          "objectID": {
                            "description": "Unique identifier of the object.",
                            "type": "string",
                          },
                          "validity": {
                            "description": "By default, Rules are permanently valid. When validity periods are specified, the Rule applies only during those periods; it's ignored the rest of the time. The list must not be empty.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "from": {
                                  "description": "Lower bound of the time range (Unix timestamp).",
                                  "type": "integer",
                                },
                                "until": {
                                  "description": "Upper bound of the time range (Unix timestamp).",
                                  "type": "integer",
                                },
                              },
                              "required": [
                                "from",
                                "until",
                              ],
                              "type": "object",
                            },
                            "type": "array",
                          },
                        },
                        "required": [
                          "objectID",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "nbHits": {
                      "description": "Number of fetched rules.",
                      "type": "integer",
                    },
                    "nbPages": {
                      "description": "Number of pages.",
                      "type": "integer",
                    },
                    "page": {
                      "description": "Current page.",
                      "type": "integer",
                    },
                  },
                  "required": [
                    "hits",
                    "nbHits",
                    "page",
                    "nbPages",
                  ],
                  "title": "searchRulesResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Search for rules.",
        "tags": [
          "Rules",
        ],
        "x-cacheable": true,
        "x-use-read-transporter": true,
      },
    },
    "/1/indexes/{indexName}/rules/{objectID}": {
      "delete": {
        "description": "Delete the Rule with the specified objectID.",
        "operationId": "deleteRule",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Unique identifier of an object.",
            "in": "path",
            "name": "objectID",
            "required": true,
            "schema": {
              "example": "123",
              "type": "string",
            },
          },
          {
            "description": "When true, changes are also propagated to replicas of the given indexName.",
            "in": "query",
            "name": "forwardToReplicas",
            "schema": {
              "type": "boolean",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and an updatedAt timestamp.",
                  "properties": {
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                  ],
                  "title": "updatedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Delete a rule.",
        "tags": [
          "Rules",
        ],
      },
      "get": {
        "description": "Retrieve the Rule with the specified objectID.",
        "operationId": "getRule",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Unique identifier of an object.",
            "in": "path",
            "name": "objectID",
            "required": true,
            "schema": {
              "example": "123",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Rule object.",
                  "properties": {
                    "conditions": {
                      "description": "A list of conditions that should apply to activate a Rule. You can use up to 25 conditions per Rule.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "alternatives": {
                            "default": false,
                            "description": "Whether the pattern matches on plurals, synonyms, and typos.",
                            "type": "boolean",
                          },
                          "anchoring": {
                            "description": "Whether the pattern parameter must match the beginning or the end of the query string, or both, or none.",
                            "enum": [
                              "is",
                              "startsWith",
                              "endsWith",
                              "contains",
                            ],
                            "type": "string",
                          },
                          "context": {
                            "description": "Rule context format: [A-Za-z0-9_-]+).",
                            "type": "string",
                          },
                          "pattern": {
                            "description": "Query pattern syntax.",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "consequence": {
                      "additionalProperties": false,
                      "description": "Consequence of the Rule.",
                      "properties": {
                        "filterPromotes": {
                          "default": false,
                          "description": "Only use in combination with the promote consequence. When true, promoted results will be restricted to match the filters of the current search. When false, the promoted results will show up regardless of the filters.",
                          "type": "boolean",
                        },
                        "hide": {
                          "description": "Objects to hide from hits. Each object must contain an objectID field. By default, you can hide up to 50 items per rule.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Unique identifier of the object to hide.",
                            "properties": {
                              "objectID": {
                                "description": "Unique identifier of the object.",
                                "type": "string",
                              },
                            },
                            "required": [
                              "objectID",
                            ],
                            "title": "consequenceHide",
                            "type": "object",
                          },
                          "type": "array",
                        },
                        "params": {
                          "allOf": [
                            {
                              "additionalProperties": false,
                              "properties": {
                                "analytics": {
                                  "default": true,
                                  "description": "Whether the current query will be taken into account in the Analytics.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Analytics",
                                  ],
                                },
                                "analyticsTags": {
                                  "default": [],
                                  "description": "List of tags to apply to the query for analytics purposes.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Analytics",
                                  ],
                                },
                                "aroundLatLng": {
                                  "default": "",
                                  "description": "Search for entries around a central geolocation, enabling a geo search within a circular area.",
                                  "type": "string",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "aroundLatLngViaIP": {
                                  "default": false,
                                  "description": "Search for entries around a given location automatically computed from the requester's IP address.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "aroundPrecision": {
                                  "default": 10,
                                  "description": "Precision of geo search (in meters), to add grouping by geo location to the ranking formula.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "aroundRadius": {
                                  "description": "Define the maximum radius for a geo search (in meters).",
                                  "oneOf": [
                                    {
                                      "minimum": 1,
                                      "type": "integer",
                                    },
                                    {
                                      "enum": [
                                        "all",
                                      ],
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "clickAnalytics": {
                                  "default": false,
                                  "description": "Enable the Click Analytics feature.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Analytics",
                                  ],
                                },
                                "enableABTest": {
                                  "default": true,
                                  "description": "Whether this search should participate in running AB tests.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "enableReRanking": {
                                  "default": true,
                                  "description": "Whether this search should use AI Re-Ranking.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "facetFilters": {
                                  "description": "Filter hits by facet value.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "facetingAfterDistinct": {
                                  "default": false,
                                  "description": "Force faceting to be applied after de-duplication (via the Distinct setting).",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Faceting",
                                  ],
                                },
                                "facets": {
                                  "default": [],
                                  "description": "Retrieve facets and their facet values.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Faceting",
                                  ],
                                },
                                "filters": {
                                  "default": "",
                                  "description": "Filter the query with numeric, facet and/or tag filters.",
                                  "type": "string",
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "getRankingInfo": {
                                  "default": false,
                                  "description": "Retrieve detailed ranking information.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "insideBoundingBox": {
                                  "description": "Search inside a rectangular area (in geo coordinates).",
                                  "items": {
                                    "format": "double",
                                    "type": "number",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "insidePolygon": {
                                  "description": "Search inside a polygon (in geo coordinates).",
                                  "items": {
                                    "format": "double",
                                    "type": "number",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "length": {
                                  "description": "Set the number of hits to retrieve (used only with offset).",
                                  "maximum": 1000,
                                  "minimum": 1,
                                  "type": "integer",
                                  "x-categories": [
                                    "Pagination",
                                  ],
                                },
                                "maxValuesPerFacet": {
                                  "default": 100,
                                  "description": "Maximum number of facet values to return for each facet during a regular search.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Faceting",
                                  ],
                                },
                                "minimumAroundRadius": {
                                  "description": "Minimum radius (in meters) used for a geo search when aroundRadius is not set.",
                                  "minimum": 1,
                                  "type": "integer",
                                  "x-categories": [
                                    "Geo-Search",
                                  ],
                                },
                                "naturalLanguages": {
                                  "default": [],
                                  "description": "This parameter changes the default values of certain parameters and settings that work best for a natural language query, such as ignorePlurals, removeStopWords, removeWordsIfNoResults, analyticsTags and ruleContexts. These parameters and settings work well together when the query is formatted in natural language instead of keywords, for example when your user performs a voice search.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "numericFilters": {
                                  "description": "Filter on numeric attributes.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "offset": {
                                  "description": "Specify the offset of the first hit to return.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Pagination",
                                  ],
                                },
                                "optionalFilters": {
                                  "description": "Create filters for ranking purposes, where records that match the filter are ranked higher, or lower in the case of a negative optional filter.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "page": {
                                  "default": 0,
                                  "description": "Specify the page to retrieve.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Pagination",
                                  ],
                                },
                                "percentileComputation": {
                                  "default": true,
                                  "description": "Whether to include or exclude a query from the processing-time percentile computation.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "personalizationImpact": {
                                  "default": 100,
                                  "description": "Define the impact of the Personalization feature.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Personalization",
                                  ],
                                },
                                "reRankingApplyFilter": {
                                  "description": "When Dynamic Re-Ranking is enabled, only records that match these filters will be impacted by Dynamic Re-Ranking.",
                                  "nullable": true,
                                  "oneOf": [
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "ruleContexts": {
                                  "default": [],
                                  "description": "Enables contextual rules.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Rules",
                                  ],
                                },
                                "similarQuery": {
                                  "default": "",
                                  "description": "Overrides the query parameter and performs a more generic search that can be used to find \\"similar\\" results.",
                                  "type": "string",
                                  "x-categories": [
                                    "Search",
                                  ],
                                },
                                "sortFacetValuesBy": {
                                  "default": "count",
                                  "description": "Controls how facet values are fetched.",
                                  "type": "string",
                                  "x-categories": [
                                    "Faceting",
                                  ],
                                },
                                "sumOrFiltersScores": {
                                  "default": false,
                                  "description": "Determines how to calculate the total score for filtering.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "tagFilters": {
                                  "description": "Filter hits by tags.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          {
                                            "type": "string",
                                          },
                                        ],
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Filtering",
                                  ],
                                },
                                "userToken": {
                                  "description": "Associates a certain user token with the current search.",
                                  "type": "string",
                                  "x-categories": [
                                    "Personalization",
                                  ],
                                },
                              },
                              "type": "object",
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "advancedSyntax": {
                                  "default": false,
                                  "description": "Enables the advanced query syntax.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "advancedSyntaxFeatures": {
                                  "default": [
                                    "exactPhrase",
                                    "excludeWords",
                                  ],
                                  "description": "Allows you to specify which advanced syntax features are active when ‘advancedSyntax' is enabled.",
                                  "items": {
                                    "enum": [
                                      "exactPhrase",
                                      "excludeWords",
                                    ],
                                    "type": "string",
                                    "x-categories": [
                                      "Query strategy",
                                    ],
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "allowTyposOnNumericTokens": {
                                  "default": true,
                                  "description": "Whether to allow typos on numbers (\\"numeric tokens\\") in the query string.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Typos",
                                  ],
                                },
                                "alternativesAsExact": {
                                  "default": [
                                    "ignorePlurals",
                                    "singleWordSynonym",
                                  ],
                                  "description": "List of alternatives that should be considered an exact match by the exact ranking criterion.",
                                  "items": {
                                    "enum": [
                                      "ignorePlurals",
                                      "singleWordSynonym",
                                      "multiWordsSynonym",
                                    ],
                                    "type": "string",
                                    "x-categories": [
                                      "Query strategy",
                                    ],
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "attributeCriteriaComputedByMinProximity": {
                                  "default": false,
                                  "description": "When attribute is ranked above proximity in your ranking formula, proximity is used to select which searchable attribute is matched in the attribute ranking stage.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "attributeForDistinct": {
                                  "description": "Name of the de-duplication attribute to be used with the distinct feature.",
                                  "type": "string",
                                },
                                "attributesForFaceting": {
                                  "default": [],
                                  "description": "The complete list of attributes that will be used for faceting.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Faceting",
                                  ],
                                },
                                "attributesToHighlight": {
                                  "description": "List of attributes to highlight.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "attributesToRetrieve": {
                                  "default": [
                                    "*",
                                  ],
                                  "description": "This parameter controls which attributes to retrieve and which not to retrieve.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Attributes",
                                  ],
                                },
                                "attributesToSnippet": {
                                  "default": [],
                                  "description": "List of attributes to snippet, with an optional maximum number of words to snippet.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "customRanking": {
                                  "default": [],
                                  "description": "Specifies the custom ranking criterion.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Ranking",
                                  ],
                                },
                                "decompoundQuery": {
                                  "default": true,
                                  "description": "Splits compound words into their composing atoms in the query.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "disableExactOnAttributes": {
                                  "default": [],
                                  "description": "List of attributes on which you want to disable the exact ranking criterion.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "disableTypoToleranceOnAttributes": {
                                  "default": [],
                                  "description": "List of attributes on which you want to disable typo tolerance.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Typos",
                                  ],
                                },
                                "distinct": {
                                  "description": "Enables de-duplication or grouping of results.",
                                  "oneOf": [
                                    {
                                      "type": "boolean",
                                    },
                                    {
                                      "default": 0,
                                      "maximum": 4,
                                      "minimum": 0,
                                      "type": "integer",
                                    },
                                  ],
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "enablePersonalization": {
                                  "default": false,
                                  "description": "Enable the Personalization feature.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Personalization",
                                  ],
                                },
                                "enableRules": {
                                  "default": true,
                                  "description": "Whether Rules should be globally enabled.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Rules",
                                  ],
                                },
                                "exactOnSingleWordQuery": {
                                  "default": "attribute",
                                  "description": "Controls how the exact ranking criterion is computed when the query contains only one word.",
                                  "enum": [
                                    "attribute",
                                    "none",
                                    "word",
                                  ],
                                  "type": "string",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "highlightPostTag": {
                                  "default": "</em>",
                                  "description": "The HTML string to insert after the highlighted parts in all highlight and snippet results.",
                                  "type": "string",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "highlightPreTag": {
                                  "default": "<em>",
                                  "description": "The HTML string to insert before the highlighted parts in all highlight and snippet results.",
                                  "type": "string",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "hitsPerPage": {
                                  "default": 20,
                                  "description": "Set the number of hits per page.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Pagination",
                                  ],
                                },
                                "ignorePlurals": {
                                  "description": "Treats singular, plurals, and other forms of declensions as matching terms.
ignorePlurals is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the ignore plurals functionality, where singulars and plurals are considered equivalent (foot = feet). The languages supported here are either every language (this is the default, see list of languages below), or those set by queryLanguages. false: disables ignore plurals, where singulars and plurals are not considered the same for matching purposes (foot will not find feet).
",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "default": false,
                                      "type": "boolean",
                                    },
                                  ],
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "keepDiacriticsOnCharacters": {
                                  "default": "",
                                  "description": "List of characters that the engine shouldn't automatically normalize.",
                                  "type": "string",
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "maxFacetHits": {
                                  "default": 10,
                                  "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                                  "maximum": 100,
                                  "type": "integer",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "minProximity": {
                                  "default": 1,
                                  "description": "Precision of the proximity ranking criterion.",
                                  "maximum": 7,
                                  "minimum": 1,
                                  "type": "integer",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "minWordSizefor1Typo": {
                                  "default": 4,
                                  "description": "Minimum number of characters a word in the query string must contain to accept matches with 1 typo.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Typos",
                                  ],
                                },
                                "minWordSizefor2Typos": {
                                  "default": 8,
                                  "description": "Minimum number of characters a word in the query string must contain to accept matches with 2 typos.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Typos",
                                  ],
                                },
                                "optionalWords": {
                                  "default": [],
                                  "description": "A list of words that should be considered as optional when found in the query.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "queryLanguages": {
                                  "default": [],
                                  "description": "Sets the languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "queryType": {
                                  "default": "prefixLast",
                                  "description": "Controls if and how query words are interpreted as prefixes.",
                                  "enum": [
                                    "prefixLast",
                                    "prefixAll",
                                    "prefixNone",
                                  ],
                                  "type": "string",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "ranking": {
                                  "default": [
                                    "typo",
                                    "geo",
                                    "words",
                                    "filters",
                                    "proximity",
                                    "attribute",
                                    "exact",
                                    "custom",
                                  ],
                                  "description": "Controls how Algolia should sort your results.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Ranking",
                                  ],
                                },
                                "relevancyStrictness": {
                                  "default": 100,
                                  "description": "Controls the relevancy threshold below which less relevant results aren't included in the results.",
                                  "type": "integer",
                                  "x-categories": [
                                    "Ranking",
                                  ],
                                },
                                "removeStopWords": {
                                  "description": "Removes stop (common) words from the query before executing it.
removeStopWords is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the stop word functionality, ensuring that stop words are removed from consideration in a search. The languages supported here are either every language, or those set by queryLanguages. false: disables stop word functionality, allowing stop words to be taken into account in a search.
",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "default": false,
                                      "type": "boolean",
                                    },
                                  ],
                                  "x-categories": [
                                    "Languages",
                                  ],
                                },
                                "removeWordsIfNoResults": {
                                  "default": "none",
                                  "description": "Selects a strategy to remove words from the query when it doesn't match any hits.",
                                  "enum": [
                                    "none",
                                    "lastWords",
                                    "firstWords",
                                    "allOptional",
                                  ],
                                  "type": "string",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "renderingContent": {
                                  "additionalProperties": false,
                                  "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                  "properties": {
                                    "facetOrdering": {
                                      "additionalProperties": false,
                                      "description": "Defining how facets should be ordered.",
                                      "properties": {
                                        "facets": {
                                          "additionalProperties": false,
                                          "description": "The ordering of facets (widgets).",
                                          "properties": {
                                            "order": {
                                              "description": "Pinned order of facet lists.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                          },
                                          "type": "object",
                                        },
                                        "values": {
                                          "additionalProperties": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "order": {
                                                "description": "Pinned order of facet lists.",
                                                "items": {
                                                  "type": "string",
                                                },
                                                "type": "array",
                                              },
                                              "sortRemainingBy": {
                                                "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                                "enum": [
                                                  "count",
                                                  "alpha",
                                                  "hidden",
                                                ],
                                                "type": "string",
                                              },
                                            },
                                            "type": "object",
                                          },
                                          "description": "The ordering of facet values, within an individual list.",
                                          "type": "object",
                                        },
                                      },
                                      "type": "object",
                                    },
                                  },
                                  "type": "object",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "replaceSynonymsInHighlight": {
                                  "default": false,
                                  "description": "Whether to highlight and snippet the original word that matches the synonym or the synonym itself.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "responseFields": {
                                  "default": [],
                                  "description": "Choose which fields to return in the API response. This parameters applies to search and browse queries.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "restrictHighlightAndSnippetArrays": {
                                  "default": false,
                                  "description": "Restrict highlighting and snippeting to items that matched the query.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "restrictSearchableAttributes": {
                                  "default": [],
                                  "description": "Restricts a given query to look in only a subset of your searchable attributes.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-categories": [
                                    "Attributes",
                                  ],
                                },
                                "snippetEllipsisText": {
                                  "default": "…",
                                  "description": "String used as an ellipsis indicator when a snippet is truncated.",
                                  "type": "string",
                                  "x-categories": [
                                    "Highlighting and Snippeting",
                                  ],
                                },
                                "synonyms": {
                                  "default": true,
                                  "description": "Whether to take into account an index's synonyms for a particular search.",
                                  "type": "boolean",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                                "typoTolerance": {
                                  "description": "Controls whether typo tolerance is enabled and how it is applied.",
                                  "oneOf": [
                                    {
                                      "default": true,
                                      "type": "boolean",
                                    },
                                    {
                                      "enum": [
                                        "min",
                                        "strict",
                                      ],
                                      "type": "string",
                                    },
                                  ],
                                  "x-categories": [
                                    "Typos",
                                  ],
                                },
                              },
                              "type": "object",
                            },
                            {
                              "additionalProperties": false,
                              "description": "Additional search parameters. Any valid search parameter is allowed.",
                              "properties": {
                                "automaticFacetFilters": {
                                  "description": "Names of facets to which automatic filtering must be applied; they must match the facet name of a facet value placeholder in the query pattern.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Automatic facet Filter.",
                                        "properties": {
                                          "disjunctive": {
                                            "default": false,
                                            "description": "Whether the filter is disjunctive (true) or conjunctive (false).",
                                            "type": "boolean",
                                          },
                                          "facet": {
                                            "description": "Attribute to filter on. This must match a facet placeholder in the Rule's pattern.",
                                            "type": "string",
                                          },
                                          "score": {
                                            "default": 1,
                                            "description": "Score for the filter. Typically used for optional or disjunctive filters.",
                                            "type": "integer",
                                          },
                                        },
                                        "required": [
                                          "facet",
                                        ],
                                        "type": "object",
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                  ],
                                },
                                "automaticOptionalFacetFilters": {
                                  "description": "Same syntax as automaticFacetFilters, but the engine treats the filters as optional.",
                                  "oneOf": [
                                    {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Automatic facet Filter.",
                                        "properties": {
                                          "disjunctive": {
                                            "default": false,
                                            "description": "Whether the filter is disjunctive (true) or conjunctive (false).",
                                            "type": "boolean",
                                          },
                                          "facet": {
                                            "description": "Attribute to filter on. This must match a facet placeholder in the Rule's pattern.",
                                            "type": "string",
                                          },
                                          "score": {
                                            "default": 1,
                                            "description": "Score for the filter. Typically used for optional or disjunctive filters.",
                                            "type": "integer",
                                          },
                                        },
                                        "required": [
                                          "facet",
                                        ],
                                        "type": "object",
                                      },
                                      "type": "array",
                                    },
                                    {
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                  ],
                                },
                                "query": {
                                  "description": "When providing a string, it replaces the entire query string. When providing an object, it describes incremental edits to be made to the query string (but you can't do both).",
                                  "oneOf": [
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "edits": {
                                          "description": "Edits to apply.",
                                          "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "delete": {
                                                "description": "Text or patterns to remove from the query string.",
                                                "type": "string",
                                              },
                                              "insert": {
                                                "description": "Text that should be inserted in place of the removed text inside the query string.",
                                                "type": "string",
                                              },
                                              "type": {
                                                "description": "Type of edit.",
                                                "enum": [
                                                  "remove",
                                                  "replace",
                                                ],
                                                "type": "string",
                                              },
                                            },
                                            "type": "object",
                                          },
                                          "type": "array",
                                        },
                                        "remove": {
                                          "description": "Words to remove.",
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                      },
                                      "type": "object",
                                    },
                                    {
                                      "type": "string",
                                    },
                                  ],
                                },
                                "renderingContent": {
                                  "additionalProperties": false,
                                  "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                  "properties": {
                                    "facetOrdering": {
                                      "additionalProperties": false,
                                      "description": "Defining how facets should be ordered.",
                                      "properties": {
                                        "facets": {
                                          "additionalProperties": false,
                                          "description": "The ordering of facets (widgets).",
                                          "properties": {
                                            "order": {
                                              "description": "Pinned order of facet lists.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                          },
                                          "type": "object",
                                        },
                                        "values": {
                                          "additionalProperties": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "order": {
                                                "description": "Pinned order of facet lists.",
                                                "items": {
                                                  "type": "string",
                                                },
                                                "type": "array",
                                              },
                                              "sortRemainingBy": {
                                                "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                                "enum": [
                                                  "count",
                                                  "alpha",
                                                  "hidden",
                                                ],
                                                "type": "string",
                                              },
                                            },
                                            "type": "object",
                                          },
                                          "description": "The ordering of facet values, within an individual list.",
                                          "type": "object",
                                        },
                                      },
                                      "type": "object",
                                    },
                                  },
                                  "type": "object",
                                  "x-categories": [
                                    "Advanced",
                                  ],
                                },
                              },
                              "type": "object",
                            },
                          ],
                        },
                        "promote": {
                          "description": "Objects to promote as hits.",
                          "items": {
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Multiple objectIDs to promote as hits.",
                                "properties": {
                                  "objectIDs": {
                                    "description": "Array of unique identifiers of the objects to promote.",
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                  },
                                  "position": {
                                    "description": "The position to promote the objects to (zero-based). If you pass objectIDs, the objects are placed at this position as a group. For example, if you pass four objectIDs to position 0, the objects take the first four positions.",
                                    "type": "integer",
                                  },
                                },
                                "required": [
                                  "position",
                                  "objectIDs",
                                ],
                                "type": "object",
                              },
                              {
                                "additionalProperties": false,
                                "description": "Single objectID to promote as hits.",
                                "properties": {
                                  "objectID": {
                                    "description": "Unique identifier of the object to promote.",
                                    "type": "string",
                                  },
                                  "position": {
                                    "description": "The position to promote the objects to (zero-based). If you pass objectIDs, the objects are placed at this position as a group. For example, if you pass four objectIDs to position 0, the objects take the first four positions.",
                                    "type": "integer",
                                  },
                                },
                                "required": [
                                  "position",
                                  "objectID",
                                ],
                                "type": "object",
                              },
                            ],
                          },
                          "type": "array",
                        },
                        "userData": {
                          "description": "Custom JSON object that will be appended to the userData array in the response. This object isn't interpreted by the API. It's limited to 1kB of minified JSON.",
                          "type": "object",
                        },
                      },
                      "type": "object",
                    },
                    "description": {
                      "description": "This field is intended for Rule management purposes, in particular to ease searching for Rules and presenting them to human readers. It's not interpreted by the API.",
                      "type": "string",
                    },
                    "enabled": {
                      "default": true,
                      "description": "Whether the Rule is enabled. Disabled Rules remain in the index, but aren't applied at query time.",
                      "type": "boolean",
                    },
                    "objectID": {
                      "description": "Unique identifier of the object.",
                      "type": "string",
                    },
                    "validity": {
                      "description": "By default, Rules are permanently valid. When validity periods are specified, the Rule applies only during those periods; it's ignored the rest of the time. The list must not be empty.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "from": {
                            "description": "Lower bound of the time range (Unix timestamp).",
                            "type": "integer",
                          },
                          "until": {
                            "description": "Upper bound of the time range (Unix timestamp).",
                            "type": "integer",
                          },
                        },
                        "required": [
                          "from",
                          "until",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "objectID",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Get a rule.",
        "tags": [
          "Rules",
        ],
      },
      "put": {
        "description": "Create or update the Rule with the specified objectID.",
        "operationId": "saveRule",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Unique identifier of an object.",
            "in": "path",
            "name": "objectID",
            "required": true,
            "schema": {
              "example": "123",
              "type": "string",
            },
          },
          {
            "description": "When true, changes are also propagated to replicas of the given indexName.",
            "in": "query",
            "name": "forwardToReplicas",
            "schema": {
              "type": "boolean",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Rule object.",
                "properties": {
                  "conditions": {
                    "description": "A list of conditions that should apply to activate a Rule. You can use up to 25 conditions per Rule.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "alternatives": {
                          "default": false,
                          "description": "Whether the pattern matches on plurals, synonyms, and typos.",
                          "type": "boolean",
                        },
                        "anchoring": {
                          "description": "Whether the pattern parameter must match the beginning or the end of the query string, or both, or none.",
                          "enum": [
                            "is",
                            "startsWith",
                            "endsWith",
                            "contains",
                          ],
                          "type": "string",
                        },
                        "context": {
                          "description": "Rule context format: [A-Za-z0-9_-]+).",
                          "type": "string",
                        },
                        "pattern": {
                          "description": "Query pattern syntax.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "consequence": {
                    "additionalProperties": false,
                    "description": "Consequence of the Rule.",
                    "properties": {
                      "filterPromotes": {
                        "default": false,
                        "description": "Only use in combination with the promote consequence. When true, promoted results will be restricted to match the filters of the current search. When false, the promoted results will show up regardless of the filters.",
                        "type": "boolean",
                      },
                      "hide": {
                        "description": "Objects to hide from hits. Each object must contain an objectID field. By default, you can hide up to 50 items per rule.",
                        "items": {
                          "additionalProperties": false,
                          "description": "Unique identifier of the object to hide.",
                          "properties": {
                            "objectID": {
                              "description": "Unique identifier of the object.",
                              "type": "string",
                            },
                          },
                          "required": [
                            "objectID",
                          ],
                          "title": "consequenceHide",
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "params": {
                        "allOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "analytics": {
                                "default": true,
                                "description": "Whether the current query will be taken into account in the Analytics.",
                                "type": "boolean",
                                "x-categories": [
                                  "Analytics",
                                ],
                              },
                              "analyticsTags": {
                                "default": [],
                                "description": "List of tags to apply to the query for analytics purposes.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Analytics",
                                ],
                              },
                              "aroundLatLng": {
                                "default": "",
                                "description": "Search for entries around a central geolocation, enabling a geo search within a circular area.",
                                "type": "string",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "aroundLatLngViaIP": {
                                "default": false,
                                "description": "Search for entries around a given location automatically computed from the requester's IP address.",
                                "type": "boolean",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "aroundPrecision": {
                                "default": 10,
                                "description": "Precision of geo search (in meters), to add grouping by geo location to the ranking formula.",
                                "type": "integer",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "aroundRadius": {
                                "description": "Define the maximum radius for a geo search (in meters).",
                                "oneOf": [
                                  {
                                    "minimum": 1,
                                    "type": "integer",
                                  },
                                  {
                                    "enum": [
                                      "all",
                                    ],
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "clickAnalytics": {
                                "default": false,
                                "description": "Enable the Click Analytics feature.",
                                "type": "boolean",
                                "x-categories": [
                                  "Analytics",
                                ],
                              },
                              "enableABTest": {
                                "default": true,
                                "description": "Whether this search should participate in running AB tests.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "enableReRanking": {
                                "default": true,
                                "description": "Whether this search should use AI Re-Ranking.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "facetFilters": {
                                "description": "Filter hits by facet value.",
                                "oneOf": [
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        {
                                          "type": "string",
                                        },
                                      ],
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "facetingAfterDistinct": {
                                "default": false,
                                "description": "Force faceting to be applied after de-duplication (via the Distinct setting).",
                                "type": "boolean",
                                "x-categories": [
                                  "Faceting",
                                ],
                              },
                              "facets": {
                                "default": [],
                                "description": "Retrieve facets and their facet values.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Faceting",
                                ],
                              },
                              "filters": {
                                "default": "",
                                "description": "Filter the query with numeric, facet and/or tag filters.",
                                "type": "string",
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "getRankingInfo": {
                                "default": false,
                                "description": "Retrieve detailed ranking information.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "insideBoundingBox": {
                                "description": "Search inside a rectangular area (in geo coordinates).",
                                "items": {
                                  "format": "double",
                                  "type": "number",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "insidePolygon": {
                                "description": "Search inside a polygon (in geo coordinates).",
                                "items": {
                                  "format": "double",
                                  "type": "number",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "length": {
                                "description": "Set the number of hits to retrieve (used only with offset).",
                                "maximum": 1000,
                                "minimum": 1,
                                "type": "integer",
                                "x-categories": [
                                  "Pagination",
                                ],
                              },
                              "maxValuesPerFacet": {
                                "default": 100,
                                "description": "Maximum number of facet values to return for each facet during a regular search.",
                                "type": "integer",
                                "x-categories": [
                                  "Faceting",
                                ],
                              },
                              "minimumAroundRadius": {
                                "description": "Minimum radius (in meters) used for a geo search when aroundRadius is not set.",
                                "minimum": 1,
                                "type": "integer",
                                "x-categories": [
                                  "Geo-Search",
                                ],
                              },
                              "naturalLanguages": {
                                "default": [],
                                "description": "This parameter changes the default values of certain parameters and settings that work best for a natural language query, such as ignorePlurals, removeStopWords, removeWordsIfNoResults, analyticsTags and ruleContexts. These parameters and settings work well together when the query is formatted in natural language instead of keywords, for example when your user performs a voice search.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "numericFilters": {
                                "description": "Filter on numeric attributes.",
                                "oneOf": [
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        {
                                          "type": "string",
                                        },
                                      ],
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "offset": {
                                "description": "Specify the offset of the first hit to return.",
                                "type": "integer",
                                "x-categories": [
                                  "Pagination",
                                ],
                              },
                              "optionalFilters": {
                                "description": "Create filters for ranking purposes, where records that match the filter are ranked higher, or lower in the case of a negative optional filter.",
                                "oneOf": [
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        {
                                          "type": "string",
                                        },
                                      ],
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "page": {
                                "default": 0,
                                "description": "Specify the page to retrieve.",
                                "type": "integer",
                                "x-categories": [
                                  "Pagination",
                                ],
                              },
                              "percentileComputation": {
                                "default": true,
                                "description": "Whether to include or exclude a query from the processing-time percentile computation.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "personalizationImpact": {
                                "default": 100,
                                "description": "Define the impact of the Personalization feature.",
                                "type": "integer",
                                "x-categories": [
                                  "Personalization",
                                ],
                              },
                              "reRankingApplyFilter": {
                                "description": "When Dynamic Re-Ranking is enabled, only records that match these filters will be impacted by Dynamic Re-Ranking.",
                                "nullable": true,
                                "oneOf": [
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        {
                                          "type": "string",
                                        },
                                      ],
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "ruleContexts": {
                                "default": [],
                                "description": "Enables contextual rules.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Rules",
                                ],
                              },
                              "similarQuery": {
                                "default": "",
                                "description": "Overrides the query parameter and performs a more generic search that can be used to find \\"similar\\" results.",
                                "type": "string",
                                "x-categories": [
                                  "Search",
                                ],
                              },
                              "sortFacetValuesBy": {
                                "default": "count",
                                "description": "Controls how facet values are fetched.",
                                "type": "string",
                                "x-categories": [
                                  "Faceting",
                                ],
                              },
                              "sumOrFiltersScores": {
                                "default": false,
                                "description": "Determines how to calculate the total score for filtering.",
                                "type": "boolean",
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "tagFilters": {
                                "description": "Filter hits by tags.",
                                "oneOf": [
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "items": {
                                            "type": "string",
                                          },
                                          "type": "array",
                                        },
                                        {
                                          "type": "string",
                                        },
                                      ],
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Filtering",
                                ],
                              },
                              "userToken": {
                                "description": "Associates a certain user token with the current search.",
                                "type": "string",
                                "x-categories": [
                                  "Personalization",
                                ],
                              },
                            },
                            "type": "object",
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "advancedSyntax": {
                                "default": false,
                                "description": "Enables the advanced query syntax.",
                                "type": "boolean",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "advancedSyntaxFeatures": {
                                "default": [
                                  "exactPhrase",
                                  "excludeWords",
                                ],
                                "description": "Allows you to specify which advanced syntax features are active when ‘advancedSyntax' is enabled.",
                                "items": {
                                  "enum": [
                                    "exactPhrase",
                                    "excludeWords",
                                  ],
                                  "type": "string",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "type": "array",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "allowTyposOnNumericTokens": {
                                "default": true,
                                "description": "Whether to allow typos on numbers (\\"numeric tokens\\") in the query string.",
                                "type": "boolean",
                                "x-categories": [
                                  "Typos",
                                ],
                              },
                              "alternativesAsExact": {
                                "default": [
                                  "ignorePlurals",
                                  "singleWordSynonym",
                                ],
                                "description": "List of alternatives that should be considered an exact match by the exact ranking criterion.",
                                "items": {
                                  "enum": [
                                    "ignorePlurals",
                                    "singleWordSynonym",
                                    "multiWordsSynonym",
                                  ],
                                  "type": "string",
                                  "x-categories": [
                                    "Query strategy",
                                  ],
                                },
                                "type": "array",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "attributeCriteriaComputedByMinProximity": {
                                "default": false,
                                "description": "When attribute is ranked above proximity in your ranking formula, proximity is used to select which searchable attribute is matched in the attribute ranking stage.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "attributeForDistinct": {
                                "description": "Name of the de-duplication attribute to be used with the distinct feature.",
                                "type": "string",
                              },
                              "attributesForFaceting": {
                                "default": [],
                                "description": "The complete list of attributes that will be used for faceting.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Faceting",
                                ],
                              },
                              "attributesToHighlight": {
                                "description": "List of attributes to highlight.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "attributesToRetrieve": {
                                "default": [
                                  "*",
                                ],
                                "description": "This parameter controls which attributes to retrieve and which not to retrieve.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Attributes",
                                ],
                              },
                              "attributesToSnippet": {
                                "default": [],
                                "description": "List of attributes to snippet, with an optional maximum number of words to snippet.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "customRanking": {
                                "default": [],
                                "description": "Specifies the custom ranking criterion.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Ranking",
                                ],
                              },
                              "decompoundQuery": {
                                "default": true,
                                "description": "Splits compound words into their composing atoms in the query.",
                                "type": "boolean",
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "disableExactOnAttributes": {
                                "default": [],
                                "description": "List of attributes on which you want to disable the exact ranking criterion.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "disableTypoToleranceOnAttributes": {
                                "default": [],
                                "description": "List of attributes on which you want to disable typo tolerance.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Typos",
                                ],
                              },
                              "distinct": {
                                "description": "Enables de-duplication or grouping of results.",
                                "oneOf": [
                                  {
                                    "type": "boolean",
                                  },
                                  {
                                    "default": 0,
                                    "maximum": 4,
                                    "minimum": 0,
                                    "type": "integer",
                                  },
                                ],
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "enablePersonalization": {
                                "default": false,
                                "description": "Enable the Personalization feature.",
                                "type": "boolean",
                                "x-categories": [
                                  "Personalization",
                                ],
                              },
                              "enableRules": {
                                "default": true,
                                "description": "Whether Rules should be globally enabled.",
                                "type": "boolean",
                                "x-categories": [
                                  "Rules",
                                ],
                              },
                              "exactOnSingleWordQuery": {
                                "default": "attribute",
                                "description": "Controls how the exact ranking criterion is computed when the query contains only one word.",
                                "enum": [
                                  "attribute",
                                  "none",
                                  "word",
                                ],
                                "type": "string",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "highlightPostTag": {
                                "default": "</em>",
                                "description": "The HTML string to insert after the highlighted parts in all highlight and snippet results.",
                                "type": "string",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "highlightPreTag": {
                                "default": "<em>",
                                "description": "The HTML string to insert before the highlighted parts in all highlight and snippet results.",
                                "type": "string",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "hitsPerPage": {
                                "default": 20,
                                "description": "Set the number of hits per page.",
                                "type": "integer",
                                "x-categories": [
                                  "Pagination",
                                ],
                              },
                              "ignorePlurals": {
                                "description": "Treats singular, plurals, and other forms of declensions as matching terms.
ignorePlurals is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the ignore plurals functionality, where singulars and plurals are considered equivalent (foot = feet). The languages supported here are either every language (this is the default, see list of languages below), or those set by queryLanguages. false: disables ignore plurals, where singulars and plurals are not considered the same for matching purposes (foot will not find feet).
",
                                "oneOf": [
                                  {
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "default": false,
                                    "type": "boolean",
                                  },
                                ],
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "keepDiacriticsOnCharacters": {
                                "default": "",
                                "description": "List of characters that the engine shouldn't automatically normalize.",
                                "type": "string",
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "maxFacetHits": {
                                "default": 10,
                                "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                                "maximum": 100,
                                "type": "integer",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "minProximity": {
                                "default": 1,
                                "description": "Precision of the proximity ranking criterion.",
                                "maximum": 7,
                                "minimum": 1,
                                "type": "integer",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "minWordSizefor1Typo": {
                                "default": 4,
                                "description": "Minimum number of characters a word in the query string must contain to accept matches with 1 typo.",
                                "type": "integer",
                                "x-categories": [
                                  "Typos",
                                ],
                              },
                              "minWordSizefor2Typos": {
                                "default": 8,
                                "description": "Minimum number of characters a word in the query string must contain to accept matches with 2 typos.",
                                "type": "integer",
                                "x-categories": [
                                  "Typos",
                                ],
                              },
                              "optionalWords": {
                                "default": [],
                                "description": "A list of words that should be considered as optional when found in the query.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "queryLanguages": {
                                "default": [],
                                "description": "Sets the languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "queryType": {
                                "default": "prefixLast",
                                "description": "Controls if and how query words are interpreted as prefixes.",
                                "enum": [
                                  "prefixLast",
                                  "prefixAll",
                                  "prefixNone",
                                ],
                                "type": "string",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "ranking": {
                                "default": [
                                  "typo",
                                  "geo",
                                  "words",
                                  "filters",
                                  "proximity",
                                  "attribute",
                                  "exact",
                                  "custom",
                                ],
                                "description": "Controls how Algolia should sort your results.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Ranking",
                                ],
                              },
                              "relevancyStrictness": {
                                "default": 100,
                                "description": "Controls the relevancy threshold below which less relevant results aren't included in the results.",
                                "type": "integer",
                                "x-categories": [
                                  "Ranking",
                                ],
                              },
                              "removeStopWords": {
                                "description": "Removes stop (common) words from the query before executing it.
removeStopWords is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the stop word functionality, ensuring that stop words are removed from consideration in a search. The languages supported here are either every language, or those set by queryLanguages. false: disables stop word functionality, allowing stop words to be taken into account in a search.
",
                                "oneOf": [
                                  {
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "default": false,
                                    "type": "boolean",
                                  },
                                ],
                                "x-categories": [
                                  "Languages",
                                ],
                              },
                              "removeWordsIfNoResults": {
                                "default": "none",
                                "description": "Selects a strategy to remove words from the query when it doesn't match any hits.",
                                "enum": [
                                  "none",
                                  "lastWords",
                                  "firstWords",
                                  "allOptional",
                                ],
                                "type": "string",
                                "x-categories": [
                                  "Query strategy",
                                ],
                              },
                              "renderingContent": {
                                "additionalProperties": false,
                                "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                "properties": {
                                  "facetOrdering": {
                                    "additionalProperties": false,
                                    "description": "Defining how facets should be ordered.",
                                    "properties": {
                                      "facets": {
                                        "additionalProperties": false,
                                        "description": "The ordering of facets (widgets).",
                                        "properties": {
                                          "order": {
                                            "description": "Pinned order of facet lists.",
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                        },
                                        "type": "object",
                                      },
                                      "values": {
                                        "additionalProperties": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "order": {
                                              "description": "Pinned order of facet lists.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            "sortRemainingBy": {
                                              "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                              "enum": [
                                                "count",
                                                "alpha",
                                                "hidden",
                                              ],
                                              "type": "string",
                                            },
                                          },
                                          "type": "object",
                                        },
                                        "description": "The ordering of facet values, within an individual list.",
                                        "type": "object",
                                      },
                                    },
                                    "type": "object",
                                  },
                                },
                                "type": "object",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "replaceSynonymsInHighlight": {
                                "default": false,
                                "description": "Whether to highlight and snippet the original word that matches the synonym or the synonym itself.",
                                "type": "boolean",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "responseFields": {
                                "default": [],
                                "description": "Choose which fields to return in the API response. This parameters applies to search and browse queries.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "restrictHighlightAndSnippetArrays": {
                                "default": false,
                                "description": "Restrict highlighting and snippeting to items that matched the query.",
                                "type": "boolean",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "restrictSearchableAttributes": {
                                "default": [],
                                "description": "Restricts a given query to look in only a subset of your searchable attributes.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                                "x-categories": [
                                  "Attributes",
                                ],
                              },
                              "snippetEllipsisText": {
                                "default": "…",
                                "description": "String used as an ellipsis indicator when a snippet is truncated.",
                                "type": "string",
                                "x-categories": [
                                  "Highlighting and Snippeting",
                                ],
                              },
                              "synonyms": {
                                "default": true,
                                "description": "Whether to take into account an index's synonyms for a particular search.",
                                "type": "boolean",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                              "typoTolerance": {
                                "description": "Controls whether typo tolerance is enabled and how it is applied.",
                                "oneOf": [
                                  {
                                    "default": true,
                                    "type": "boolean",
                                  },
                                  {
                                    "enum": [
                                      "min",
                                      "strict",
                                    ],
                                    "type": "string",
                                  },
                                ],
                                "x-categories": [
                                  "Typos",
                                ],
                              },
                            },
                            "type": "object",
                          },
                          {
                            "additionalProperties": false,
                            "description": "Additional search parameters. Any valid search parameter is allowed.",
                            "properties": {
                              "automaticFacetFilters": {
                                "description": "Names of facets to which automatic filtering must be applied; they must match the facet name of a facet value placeholder in the query pattern.",
                                "oneOf": [
                                  {
                                    "items": {
                                      "additionalProperties": false,
                                      "description": "Automatic facet Filter.",
                                      "properties": {
                                        "disjunctive": {
                                          "default": false,
                                          "description": "Whether the filter is disjunctive (true) or conjunctive (false).",
                                          "type": "boolean",
                                        },
                                        "facet": {
                                          "description": "Attribute to filter on. This must match a facet placeholder in the Rule's pattern.",
                                          "type": "string",
                                        },
                                        "score": {
                                          "default": 1,
                                          "description": "Score for the filter. Typically used for optional or disjunctive filters.",
                                          "type": "integer",
                                        },
                                      },
                                      "required": [
                                        "facet",
                                      ],
                                      "type": "object",
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                  },
                                ],
                              },
                              "automaticOptionalFacetFilters": {
                                "description": "Same syntax as automaticFacetFilters, but the engine treats the filters as optional.",
                                "oneOf": [
                                  {
                                    "items": {
                                      "additionalProperties": false,
                                      "description": "Automatic facet Filter.",
                                      "properties": {
                                        "disjunctive": {
                                          "default": false,
                                          "description": "Whether the filter is disjunctive (true) or conjunctive (false).",
                                          "type": "boolean",
                                        },
                                        "facet": {
                                          "description": "Attribute to filter on. This must match a facet placeholder in the Rule's pattern.",
                                          "type": "string",
                                        },
                                        "score": {
                                          "default": 1,
                                          "description": "Score for the filter. Typically used for optional or disjunctive filters.",
                                          "type": "integer",
                                        },
                                      },
                                      "required": [
                                        "facet",
                                      ],
                                      "type": "object",
                                    },
                                    "type": "array",
                                  },
                                  {
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                  },
                                ],
                              },
                              "query": {
                                "description": "When providing a string, it replaces the entire query string. When providing an object, it describes incremental edits to be made to the query string (but you can't do both).",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "edits": {
                                        "description": "Edits to apply.",
                                        "items": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "delete": {
                                              "description": "Text or patterns to remove from the query string.",
                                              "type": "string",
                                            },
                                            "insert": {
                                              "description": "Text that should be inserted in place of the removed text inside the query string.",
                                              "type": "string",
                                            },
                                            "type": {
                                              "description": "Type of edit.",
                                              "enum": [
                                                "remove",
                                                "replace",
                                              ],
                                              "type": "string",
                                            },
                                          },
                                          "type": "object",
                                        },
                                        "type": "array",
                                      },
                                      "remove": {
                                        "description": "Words to remove.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                      },
                                    },
                                    "type": "object",
                                  },
                                  {
                                    "type": "string",
                                  },
                                ],
                              },
                              "renderingContent": {
                                "additionalProperties": false,
                                "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                                "properties": {
                                  "facetOrdering": {
                                    "additionalProperties": false,
                                    "description": "Defining how facets should be ordered.",
                                    "properties": {
                                      "facets": {
                                        "additionalProperties": false,
                                        "description": "The ordering of facets (widgets).",
                                        "properties": {
                                          "order": {
                                            "description": "Pinned order of facet lists.",
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                        },
                                        "type": "object",
                                      },
                                      "values": {
                                        "additionalProperties": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "order": {
                                              "description": "Pinned order of facet lists.",
                                              "items": {
                                                "type": "string",
                                              },
                                              "type": "array",
                                            },
                                            "sortRemainingBy": {
                                              "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                              "enum": [
                                                "count",
                                                "alpha",
                                                "hidden",
                                              ],
                                              "type": "string",
                                            },
                                          },
                                          "type": "object",
                                        },
                                        "description": "The ordering of facet values, within an individual list.",
                                        "type": "object",
                                      },
                                    },
                                    "type": "object",
                                  },
                                },
                                "type": "object",
                                "x-categories": [
                                  "Advanced",
                                ],
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "promote": {
                        "description": "Objects to promote as hits.",
                        "items": {
                          "oneOf": [
                            {
                              "additionalProperties": false,
                              "description": "Multiple objectIDs to promote as hits.",
                              "properties": {
                                "objectIDs": {
                                  "description": "Array of unique identifiers of the objects to promote.",
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                },
                                "position": {
                                  "description": "The position to promote the objects to (zero-based). If you pass objectIDs, the objects are placed at this position as a group. For example, if you pass four objectIDs to position 0, the objects take the first four positions.",
                                  "type": "integer",
                                },
                              },
                              "required": [
                                "position",
                                "objectIDs",
                              ],
                              "type": "object",
                            },
                            {
                              "additionalProperties": false,
                              "description": "Single objectID to promote as hits.",
                              "properties": {
                                "objectID": {
                                  "description": "Unique identifier of the object to promote.",
                                  "type": "string",
                                },
                                "position": {
                                  "description": "The position to promote the objects to (zero-based). If you pass objectIDs, the objects are placed at this position as a group. For example, if you pass four objectIDs to position 0, the objects take the first four positions.",
                                  "type": "integer",
                                },
                              },
                              "required": [
                                "position",
                                "objectID",
                              ],
                              "type": "object",
                            },
                          ],
                        },
                        "type": "array",
                      },
                      "userData": {
                        "description": "Custom JSON object that will be appended to the userData array in the response. This object isn't interpreted by the API. It's limited to 1kB of minified JSON.",
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                  "description": {
                    "description": "This field is intended for Rule management purposes, in particular to ease searching for Rules and presenting them to human readers. It's not interpreted by the API.",
                    "type": "string",
                  },
                  "enabled": {
                    "default": true,
                    "description": "Whether the Rule is enabled. Disabled Rules remain in the index, but aren't applied at query time.",
                    "type": "boolean",
                  },
                  "objectID": {
                    "description": "Unique identifier of the object.",
                    "type": "string",
                  },
                  "validity": {
                    "description": "By default, Rules are permanently valid. When validity periods are specified, the Rule applies only during those periods; it's ignored the rest of the time. The list must not be empty.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "from": {
                          "description": "Lower bound of the time range (Unix timestamp).",
                          "type": "integer",
                        },
                        "until": {
                          "description": "Upper bound of the time range (Unix timestamp).",
                          "type": "integer",
                        },
                      },
                      "required": [
                        "from",
                        "until",
                      ],
                      "type": "object",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "objectID",
                ],
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "objectID": {
                      "description": "Unique identifier of the object.",
                      "type": "string",
                    },
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "objectID",
                    "updatedAt",
                    "taskID",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Save/Update a rule.",
        "tags": [
          "Rules",
        ],
      },
    },
    "/1/indexes/{indexName}/settings": {
      "get": {
        "description": "Retrieve settings of an index.",
        "operationId": "getSettings",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "properties": {
                        "allowCompressionOfIntegerArray": {
                          "default": false,
                          "description": "Enables compression of large integer arrays.",
                          "type": "boolean",
                          "x-categories": [
                            "Performance",
                          ],
                        },
                        "attributesToTransliterate": {
                          "description": "Specify on which attributes in your index Algolia should apply Japanese transliteration to make words indexed in Katakana or Kanji searchable in Hiragana.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Languages",
                          ],
                        },
                        "camelCaseAttributes": {
                          "default": [],
                          "description": "List of attributes on which to do a decomposition of camel case words.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Languages",
                          ],
                        },
                        "customNormalization": {
                          "additionalProperties": {
                            "additionalProperties": {
                              "type": "string",
                            },
                            "type": "object",
                          },
                          "description": "Overrides Algolia's default normalization.",
                          "type": "object",
                          "x-categories": [
                            "Languages",
                          ],
                        },
                        "decompoundedAttributes": {
                          "default": {},
                          "description": "Specify on which attributes in your index Algolia should apply word segmentation, also known as decompounding.",
                          "type": "object",
                          "x-categories": [
                            "Languages",
                          ],
                        },
                        "disablePrefixOnAttributes": {
                          "default": [],
                          "description": "List of attributes on which you want to disable prefix matching.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Query strategy",
                          ],
                        },
                        "disableTypoToleranceOnWords": {
                          "default": [],
                          "description": "A list of words for which you want to turn off typo tolerance.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Typos",
                          ],
                        },
                        "indexLanguages": {
                          "default": [],
                          "description": "Sets the languages at the index level for language-specific processing such as tokenization and normalization.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Languages",
                          ],
                        },
                        "numericAttributesForFiltering": {
                          "default": [],
                          "description": "List of numeric attributes that can be used as numerical filters.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Performance",
                          ],
                        },
                        "paginationLimitedTo": {
                          "default": 1000,
                          "description": "Set the maximum number of hits accessible via pagination.",
                          "type": "integer",
                        },
                        "replicas": {
                          "default": [],
                          "description": "Creates replicas, exact copies of an index.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Ranking",
                          ],
                        },
                        "searchableAttributes": {
                          "default": [],
                          "description": "The complete list of attributes used for searching.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Attributes",
                          ],
                        },
                        "separatorsToIndex": {
                          "default": "",
                          "description": "Control which separators are indexed.",
                          "type": "string",
                          "x-categories": [
                            "Typos",
                          ],
                        },
                        "unretrievableAttributes": {
                          "default": [],
                          "description": "List of attributes that can't be retrieved at query time.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Attributes",
                          ],
                        },
                        "userData": {
                          "default": {},
                          "description": "Lets you store custom data in your indices.",
                          "type": "object",
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                      },
                      "type": "object",
                    },
                    {
                      "additionalProperties": false,
                      "properties": {
                        "advancedSyntax": {
                          "default": false,
                          "description": "Enables the advanced query syntax.",
                          "type": "boolean",
                          "x-categories": [
                            "Query strategy",
                          ],
                        },
                        "advancedSyntaxFeatures": {
                          "default": [
                            "exactPhrase",
                            "excludeWords",
                          ],
                          "description": "Allows you to specify which advanced syntax features are active when ‘advancedSyntax' is enabled.",
                          "items": {
                            "enum": [
                              "exactPhrase",
                              "excludeWords",
                            ],
                            "type": "string",
                            "x-categories": [
                              "Query strategy",
                            ],
                          },
                          "type": "array",
                          "x-categories": [
                            "Query strategy",
                          ],
                        },
                        "allowTyposOnNumericTokens": {
                          "default": true,
                          "description": "Whether to allow typos on numbers (\\"numeric tokens\\") in the query string.",
                          "type": "boolean",
                          "x-categories": [
                            "Typos",
                          ],
                        },
                        "alternativesAsExact": {
                          "default": [
                            "ignorePlurals",
                            "singleWordSynonym",
                          ],
                          "description": "List of alternatives that should be considered an exact match by the exact ranking criterion.",
                          "items": {
                            "enum": [
                              "ignorePlurals",
                              "singleWordSynonym",
                              "multiWordsSynonym",
                            ],
                            "type": "string",
                            "x-categories": [
                              "Query strategy",
                            ],
                          },
                          "type": "array",
                          "x-categories": [
                            "Query strategy",
                          ],
                        },
                        "attributeCriteriaComputedByMinProximity": {
                          "default": false,
                          "description": "When attribute is ranked above proximity in your ranking formula, proximity is used to select which searchable attribute is matched in the attribute ranking stage.",
                          "type": "boolean",
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                        "attributeForDistinct": {
                          "description": "Name of the de-duplication attribute to be used with the distinct feature.",
                          "type": "string",
                        },
                        "attributesForFaceting": {
                          "default": [],
                          "description": "The complete list of attributes that will be used for faceting.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Faceting",
                          ],
                        },
                        "attributesToHighlight": {
                          "description": "List of attributes to highlight.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Highlighting and Snippeting",
                          ],
                        },
                        "attributesToRetrieve": {
                          "default": [
                            "*",
                          ],
                          "description": "This parameter controls which attributes to retrieve and which not to retrieve.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Attributes",
                          ],
                        },
                        "attributesToSnippet": {
                          "default": [],
                          "description": "List of attributes to snippet, with an optional maximum number of words to snippet.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Highlighting and Snippeting",
                          ],
                        },
                        "customRanking": {
                          "default": [],
                          "description": "Specifies the custom ranking criterion.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Ranking",
                          ],
                        },
                        "decompoundQuery": {
                          "default": true,
                          "description": "Splits compound words into their composing atoms in the query.",
                          "type": "boolean",
                          "x-categories": [
                            "Languages",
                          ],
                        },
                        "disableExactOnAttributes": {
                          "default": [],
                          "description": "List of attributes on which you want to disable the exact ranking criterion.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Query strategy",
                          ],
                        },
                        "disableTypoToleranceOnAttributes": {
                          "default": [],
                          "description": "List of attributes on which you want to disable typo tolerance.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Typos",
                          ],
                        },
                        "distinct": {
                          "description": "Enables de-duplication or grouping of results.",
                          "oneOf": [
                            {
                              "type": "boolean",
                            },
                            {
                              "default": 0,
                              "maximum": 4,
                              "minimum": 0,
                              "type": "integer",
                            },
                          ],
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                        "enablePersonalization": {
                          "default": false,
                          "description": "Enable the Personalization feature.",
                          "type": "boolean",
                          "x-categories": [
                            "Personalization",
                          ],
                        },
                        "enableRules": {
                          "default": true,
                          "description": "Whether Rules should be globally enabled.",
                          "type": "boolean",
                          "x-categories": [
                            "Rules",
                          ],
                        },
                        "exactOnSingleWordQuery": {
                          "default": "attribute",
                          "description": "Controls how the exact ranking criterion is computed when the query contains only one word.",
                          "enum": [
                            "attribute",
                            "none",
                            "word",
                          ],
                          "type": "string",
                          "x-categories": [
                            "Query strategy",
                          ],
                        },
                        "highlightPostTag": {
                          "default": "</em>",
                          "description": "The HTML string to insert after the highlighted parts in all highlight and snippet results.",
                          "type": "string",
                          "x-categories": [
                            "Highlighting and Snippeting",
                          ],
                        },
                        "highlightPreTag": {
                          "default": "<em>",
                          "description": "The HTML string to insert before the highlighted parts in all highlight and snippet results.",
                          "type": "string",
                          "x-categories": [
                            "Highlighting and Snippeting",
                          ],
                        },
                        "hitsPerPage": {
                          "default": 20,
                          "description": "Set the number of hits per page.",
                          "type": "integer",
                          "x-categories": [
                            "Pagination",
                          ],
                        },
                        "ignorePlurals": {
                          "description": "Treats singular, plurals, and other forms of declensions as matching terms.
ignorePlurals is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the ignore plurals functionality, where singulars and plurals are considered equivalent (foot = feet). The languages supported here are either every language (this is the default, see list of languages below), or those set by queryLanguages. false: disables ignore plurals, where singulars and plurals are not considered the same for matching purposes (foot will not find feet).
",
                          "oneOf": [
                            {
                              "items": {
                                "type": "string",
                              },
                              "type": "array",
                            },
                            {
                              "default": false,
                              "type": "boolean",
                            },
                          ],
                          "x-categories": [
                            "Languages",
                          ],
                        },
                        "keepDiacriticsOnCharacters": {
                          "default": "",
                          "description": "List of characters that the engine shouldn't automatically normalize.",
                          "type": "string",
                          "x-categories": [
                            "Languages",
                          ],
                        },
                        "maxFacetHits": {
                          "default": 10,
                          "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                          "maximum": 100,
                          "type": "integer",
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                        "minProximity": {
                          "default": 1,
                          "description": "Precision of the proximity ranking criterion.",
                          "maximum": 7,
                          "minimum": 1,
                          "type": "integer",
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                        "minWordSizefor1Typo": {
                          "default": 4,
                          "description": "Minimum number of characters a word in the query string must contain to accept matches with 1 typo.",
                          "type": "integer",
                          "x-categories": [
                            "Typos",
                          ],
                        },
                        "minWordSizefor2Typos": {
                          "default": 8,
                          "description": "Minimum number of characters a word in the query string must contain to accept matches with 2 typos.",
                          "type": "integer",
                          "x-categories": [
                            "Typos",
                          ],
                        },
                        "optionalWords": {
                          "default": [],
                          "description": "A list of words that should be considered as optional when found in the query.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Query strategy",
                          ],
                        },
                        "queryLanguages": {
                          "default": [],
                          "description": "Sets the languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Languages",
                          ],
                        },
                        "queryType": {
                          "default": "prefixLast",
                          "description": "Controls if and how query words are interpreted as prefixes.",
                          "enum": [
                            "prefixLast",
                            "prefixAll",
                            "prefixNone",
                          ],
                          "type": "string",
                          "x-categories": [
                            "Query strategy",
                          ],
                        },
                        "ranking": {
                          "default": [
                            "typo",
                            "geo",
                            "words",
                            "filters",
                            "proximity",
                            "attribute",
                            "exact",
                            "custom",
                          ],
                          "description": "Controls how Algolia should sort your results.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Ranking",
                          ],
                        },
                        "relevancyStrictness": {
                          "default": 100,
                          "description": "Controls the relevancy threshold below which less relevant results aren't included in the results.",
                          "type": "integer",
                          "x-categories": [
                            "Ranking",
                          ],
                        },
                        "removeStopWords": {
                          "description": "Removes stop (common) words from the query before executing it.
removeStopWords is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the stop word functionality, ensuring that stop words are removed from consideration in a search. The languages supported here are either every language, or those set by queryLanguages. false: disables stop word functionality, allowing stop words to be taken into account in a search.
",
                          "oneOf": [
                            {
                              "items": {
                                "type": "string",
                              },
                              "type": "array",
                            },
                            {
                              "default": false,
                              "type": "boolean",
                            },
                          ],
                          "x-categories": [
                            "Languages",
                          ],
                        },
                        "removeWordsIfNoResults": {
                          "default": "none",
                          "description": "Selects a strategy to remove words from the query when it doesn't match any hits.",
                          "enum": [
                            "none",
                            "lastWords",
                            "firstWords",
                            "allOptional",
                          ],
                          "type": "string",
                          "x-categories": [
                            "Query strategy",
                          ],
                        },
                        "renderingContent": {
                          "additionalProperties": false,
                          "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                          "properties": {
                            "facetOrdering": {
                              "additionalProperties": false,
                              "description": "Defining how facets should be ordered.",
                              "properties": {
                                "facets": {
                                  "additionalProperties": false,
                                  "description": "The ordering of facets (widgets).",
                                  "properties": {
                                    "order": {
                                      "description": "Pinned order of facet lists.",
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                  },
                                  "type": "object",
                                },
                                "values": {
                                  "additionalProperties": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "order": {
                                        "description": "Pinned order of facet lists.",
                                        "items": {
                                          "type": "string",
                                        },
                                        "type": "array",
                                      },
                                      "sortRemainingBy": {
                                        "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                        "enum": [
                                          "count",
                                          "alpha",
                                          "hidden",
                                        ],
                                        "type": "string",
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "description": "The ordering of facet values, within an individual list.",
                                  "type": "object",
                                },
                              },
                              "type": "object",
                            },
                          },
                          "type": "object",
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                        "replaceSynonymsInHighlight": {
                          "default": false,
                          "description": "Whether to highlight and snippet the original word that matches the synonym or the synonym itself.",
                          "type": "boolean",
                          "x-categories": [
                            "Highlighting and Snippeting",
                          ],
                        },
                        "responseFields": {
                          "default": [],
                          "description": "Choose which fields to return in the API response. This parameters applies to search and browse queries.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                        "restrictHighlightAndSnippetArrays": {
                          "default": false,
                          "description": "Restrict highlighting and snippeting to items that matched the query.",
                          "type": "boolean",
                          "x-categories": [
                            "Highlighting and Snippeting",
                          ],
                        },
                        "restrictSearchableAttributes": {
                          "default": [],
                          "description": "Restricts a given query to look in only a subset of your searchable attributes.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-categories": [
                            "Attributes",
                          ],
                        },
                        "snippetEllipsisText": {
                          "default": "…",
                          "description": "String used as an ellipsis indicator when a snippet is truncated.",
                          "type": "string",
                          "x-categories": [
                            "Highlighting and Snippeting",
                          ],
                        },
                        "synonyms": {
                          "default": true,
                          "description": "Whether to take into account an index's synonyms for a particular search.",
                          "type": "boolean",
                          "x-categories": [
                            "Advanced",
                          ],
                        },
                        "typoTolerance": {
                          "description": "Controls whether typo tolerance is enabled and how it is applied.",
                          "oneOf": [
                            {
                              "default": true,
                              "type": "boolean",
                            },
                            {
                              "enum": [
                                "min",
                                "strict",
                              ],
                              "type": "string",
                            },
                          ],
                          "x-categories": [
                            "Typos",
                          ],
                        },
                      },
                      "type": "object",
                    },
                  ],
                  "description": "The Algolia index settings.",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Retrieve settings of an index.",
        "tags": [
          "Indices",
        ],
      },
      "put": {
        "description": "Update settings of an index. Only specified settings are overridden; unspecified settings are left unchanged. Specifying null for a setting resets it to its default value.",
        "operationId": "setSettings",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "When true, changes are also propagated to replicas of the given indexName.",
            "in": "query",
            "name": "forwardToReplicas",
            "schema": {
              "type": "boolean",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "allowCompressionOfIntegerArray": {
                        "default": false,
                        "description": "Enables compression of large integer arrays.",
                        "type": "boolean",
                        "x-categories": [
                          "Performance",
                        ],
                      },
                      "attributesToTransliterate": {
                        "description": "Specify on which attributes in your index Algolia should apply Japanese transliteration to make words indexed in Katakana or Kanji searchable in Hiragana.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Languages",
                        ],
                      },
                      "camelCaseAttributes": {
                        "default": [],
                        "description": "List of attributes on which to do a decomposition of camel case words.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Languages",
                        ],
                      },
                      "customNormalization": {
                        "additionalProperties": {
                          "additionalProperties": {
                            "type": "string",
                          },
                          "type": "object",
                        },
                        "description": "Overrides Algolia's default normalization.",
                        "type": "object",
                        "x-categories": [
                          "Languages",
                        ],
                      },
                      "decompoundedAttributes": {
                        "default": {},
                        "description": "Specify on which attributes in your index Algolia should apply word segmentation, also known as decompounding.",
                        "type": "object",
                        "x-categories": [
                          "Languages",
                        ],
                      },
                      "disablePrefixOnAttributes": {
                        "default": [],
                        "description": "List of attributes on which you want to disable prefix matching.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Query strategy",
                        ],
                      },
                      "disableTypoToleranceOnWords": {
                        "default": [],
                        "description": "A list of words for which you want to turn off typo tolerance.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Typos",
                        ],
                      },
                      "indexLanguages": {
                        "default": [],
                        "description": "Sets the languages at the index level for language-specific processing such as tokenization and normalization.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Languages",
                        ],
                      },
                      "numericAttributesForFiltering": {
                        "default": [],
                        "description": "List of numeric attributes that can be used as numerical filters.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Performance",
                        ],
                      },
                      "paginationLimitedTo": {
                        "default": 1000,
                        "description": "Set the maximum number of hits accessible via pagination.",
                        "type": "integer",
                      },
                      "replicas": {
                        "default": [],
                        "description": "Creates replicas, exact copies of an index.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Ranking",
                        ],
                      },
                      "searchableAttributes": {
                        "default": [],
                        "description": "The complete list of attributes used for searching.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Attributes",
                        ],
                      },
                      "separatorsToIndex": {
                        "default": "",
                        "description": "Control which separators are indexed.",
                        "type": "string",
                        "x-categories": [
                          "Typos",
                        ],
                      },
                      "unretrievableAttributes": {
                        "default": [],
                        "description": "List of attributes that can't be retrieved at query time.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Attributes",
                        ],
                      },
                      "userData": {
                        "default": {},
                        "description": "Lets you store custom data in your indices.",
                        "type": "object",
                        "x-categories": [
                          "Advanced",
                        ],
                      },
                    },
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "advancedSyntax": {
                        "default": false,
                        "description": "Enables the advanced query syntax.",
                        "type": "boolean",
                        "x-categories": [
                          "Query strategy",
                        ],
                      },
                      "advancedSyntaxFeatures": {
                        "default": [
                          "exactPhrase",
                          "excludeWords",
                        ],
                        "description": "Allows you to specify which advanced syntax features are active when ‘advancedSyntax' is enabled.",
                        "items": {
                          "enum": [
                            "exactPhrase",
                            "excludeWords",
                          ],
                          "type": "string",
                          "x-categories": [
                            "Query strategy",
                          ],
                        },
                        "type": "array",
                        "x-categories": [
                          "Query strategy",
                        ],
                      },
                      "allowTyposOnNumericTokens": {
                        "default": true,
                        "description": "Whether to allow typos on numbers (\\"numeric tokens\\") in the query string.",
                        "type": "boolean",
                        "x-categories": [
                          "Typos",
                        ],
                      },
                      "alternativesAsExact": {
                        "default": [
                          "ignorePlurals",
                          "singleWordSynonym",
                        ],
                        "description": "List of alternatives that should be considered an exact match by the exact ranking criterion.",
                        "items": {
                          "enum": [
                            "ignorePlurals",
                            "singleWordSynonym",
                            "multiWordsSynonym",
                          ],
                          "type": "string",
                          "x-categories": [
                            "Query strategy",
                          ],
                        },
                        "type": "array",
                        "x-categories": [
                          "Query strategy",
                        ],
                      },
                      "attributeCriteriaComputedByMinProximity": {
                        "default": false,
                        "description": "When attribute is ranked above proximity in your ranking formula, proximity is used to select which searchable attribute is matched in the attribute ranking stage.",
                        "type": "boolean",
                        "x-categories": [
                          "Advanced",
                        ],
                      },
                      "attributeForDistinct": {
                        "description": "Name of the de-duplication attribute to be used with the distinct feature.",
                        "type": "string",
                      },
                      "attributesForFaceting": {
                        "default": [],
                        "description": "The complete list of attributes that will be used for faceting.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Faceting",
                        ],
                      },
                      "attributesToHighlight": {
                        "description": "List of attributes to highlight.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Highlighting and Snippeting",
                        ],
                      },
                      "attributesToRetrieve": {
                        "default": [
                          "*",
                        ],
                        "description": "This parameter controls which attributes to retrieve and which not to retrieve.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Attributes",
                        ],
                      },
                      "attributesToSnippet": {
                        "default": [],
                        "description": "List of attributes to snippet, with an optional maximum number of words to snippet.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Highlighting and Snippeting",
                        ],
                      },
                      "customRanking": {
                        "default": [],
                        "description": "Specifies the custom ranking criterion.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Ranking",
                        ],
                      },
                      "decompoundQuery": {
                        "default": true,
                        "description": "Splits compound words into their composing atoms in the query.",
                        "type": "boolean",
                        "x-categories": [
                          "Languages",
                        ],
                      },
                      "disableExactOnAttributes": {
                        "default": [],
                        "description": "List of attributes on which you want to disable the exact ranking criterion.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Query strategy",
                        ],
                      },
                      "disableTypoToleranceOnAttributes": {
                        "default": [],
                        "description": "List of attributes on which you want to disable typo tolerance.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Typos",
                        ],
                      },
                      "distinct": {
                        "description": "Enables de-duplication or grouping of results.",
                        "oneOf": [
                          {
                            "type": "boolean",
                          },
                          {
                            "default": 0,
                            "maximum": 4,
                            "minimum": 0,
                            "type": "integer",
                          },
                        ],
                        "x-categories": [
                          "Advanced",
                        ],
                      },
                      "enablePersonalization": {
                        "default": false,
                        "description": "Enable the Personalization feature.",
                        "type": "boolean",
                        "x-categories": [
                          "Personalization",
                        ],
                      },
                      "enableRules": {
                        "default": true,
                        "description": "Whether Rules should be globally enabled.",
                        "type": "boolean",
                        "x-categories": [
                          "Rules",
                        ],
                      },
                      "exactOnSingleWordQuery": {
                        "default": "attribute",
                        "description": "Controls how the exact ranking criterion is computed when the query contains only one word.",
                        "enum": [
                          "attribute",
                          "none",
                          "word",
                        ],
                        "type": "string",
                        "x-categories": [
                          "Query strategy",
                        ],
                      },
                      "highlightPostTag": {
                        "default": "</em>",
                        "description": "The HTML string to insert after the highlighted parts in all highlight and snippet results.",
                        "type": "string",
                        "x-categories": [
                          "Highlighting and Snippeting",
                        ],
                      },
                      "highlightPreTag": {
                        "default": "<em>",
                        "description": "The HTML string to insert before the highlighted parts in all highlight and snippet results.",
                        "type": "string",
                        "x-categories": [
                          "Highlighting and Snippeting",
                        ],
                      },
                      "hitsPerPage": {
                        "default": 20,
                        "description": "Set the number of hits per page.",
                        "type": "integer",
                        "x-categories": [
                          "Pagination",
                        ],
                      },
                      "ignorePlurals": {
                        "description": "Treats singular, plurals, and other forms of declensions as matching terms.
ignorePlurals is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the ignore plurals functionality, where singulars and plurals are considered equivalent (foot = feet). The languages supported here are either every language (this is the default, see list of languages below), or those set by queryLanguages. false: disables ignore plurals, where singulars and plurals are not considered the same for matching purposes (foot will not find feet).
",
                        "oneOf": [
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                          {
                            "default": false,
                            "type": "boolean",
                          },
                        ],
                        "x-categories": [
                          "Languages",
                        ],
                      },
                      "keepDiacriticsOnCharacters": {
                        "default": "",
                        "description": "List of characters that the engine shouldn't automatically normalize.",
                        "type": "string",
                        "x-categories": [
                          "Languages",
                        ],
                      },
                      "maxFacetHits": {
                        "default": 10,
                        "description": "Maximum number of facet hits to return during a search for facet values. For performance reasons, the maximum allowed number of returned values is 100.",
                        "maximum": 100,
                        "type": "integer",
                        "x-categories": [
                          "Advanced",
                        ],
                      },
                      "minProximity": {
                        "default": 1,
                        "description": "Precision of the proximity ranking criterion.",
                        "maximum": 7,
                        "minimum": 1,
                        "type": "integer",
                        "x-categories": [
                          "Advanced",
                        ],
                      },
                      "minWordSizefor1Typo": {
                        "default": 4,
                        "description": "Minimum number of characters a word in the query string must contain to accept matches with 1 typo.",
                        "type": "integer",
                        "x-categories": [
                          "Typos",
                        ],
                      },
                      "minWordSizefor2Typos": {
                        "default": 8,
                        "description": "Minimum number of characters a word in the query string must contain to accept matches with 2 typos.",
                        "type": "integer",
                        "x-categories": [
                          "Typos",
                        ],
                      },
                      "optionalWords": {
                        "default": [],
                        "description": "A list of words that should be considered as optional when found in the query.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Query strategy",
                        ],
                      },
                      "queryLanguages": {
                        "default": [],
                        "description": "Sets the languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Languages",
                        ],
                      },
                      "queryType": {
                        "default": "prefixLast",
                        "description": "Controls if and how query words are interpreted as prefixes.",
                        "enum": [
                          "prefixLast",
                          "prefixAll",
                          "prefixNone",
                        ],
                        "type": "string",
                        "x-categories": [
                          "Query strategy",
                        ],
                      },
                      "ranking": {
                        "default": [
                          "typo",
                          "geo",
                          "words",
                          "filters",
                          "proximity",
                          "attribute",
                          "exact",
                          "custom",
                        ],
                        "description": "Controls how Algolia should sort your results.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Ranking",
                        ],
                      },
                      "relevancyStrictness": {
                        "default": 100,
                        "description": "Controls the relevancy threshold below which less relevant results aren't included in the results.",
                        "type": "integer",
                        "x-categories": [
                          "Ranking",
                        ],
                      },
                      "removeStopWords": {
                        "description": "Removes stop (common) words from the query before executing it.
removeStopWords is used in conjunction with the queryLanguages setting.
list: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in queryLanguages. true: enables the stop word functionality, ensuring that stop words are removed from consideration in a search. The languages supported here are either every language, or those set by queryLanguages. false: disables stop word functionality, allowing stop words to be taken into account in a search.
",
                        "oneOf": [
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                          {
                            "default": false,
                            "type": "boolean",
                          },
                        ],
                        "x-categories": [
                          "Languages",
                        ],
                      },
                      "removeWordsIfNoResults": {
                        "default": "none",
                        "description": "Selects a strategy to remove words from the query when it doesn't match any hits.",
                        "enum": [
                          "none",
                          "lastWords",
                          "firstWords",
                          "allOptional",
                        ],
                        "type": "string",
                        "x-categories": [
                          "Query strategy",
                        ],
                      },
                      "renderingContent": {
                        "additionalProperties": false,
                        "description": "Content defining how the search interface should be rendered. Can be set via the settings for a default value and can be overridden via rules.",
                        "properties": {
                          "facetOrdering": {
                            "additionalProperties": false,
                            "description": "Defining how facets should be ordered.",
                            "properties": {
                              "facets": {
                                "additionalProperties": false,
                                "description": "The ordering of facets (widgets).",
                                "properties": {
                                  "order": {
                                    "description": "Pinned order of facet lists.",
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                  },
                                },
                                "type": "object",
                              },
                              "values": {
                                "additionalProperties": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "order": {
                                      "description": "Pinned order of facet lists.",
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                    "sortRemainingBy": {
                                      "description": "How to display the remaining items.
  - \`count\`: facet count (descending).
  - \`alpha\`: alphabetical (ascending).
  - \`hidden\`: show only pinned values.
",
                                      "enum": [
                                        "count",
                                        "alpha",
                                        "hidden",
                                      ],
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "description": "The ordering of facet values, within an individual list.",
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                        "x-categories": [
                          "Advanced",
                        ],
                      },
                      "replaceSynonymsInHighlight": {
                        "default": false,
                        "description": "Whether to highlight and snippet the original word that matches the synonym or the synonym itself.",
                        "type": "boolean",
                        "x-categories": [
                          "Highlighting and Snippeting",
                        ],
                      },
                      "responseFields": {
                        "default": [],
                        "description": "Choose which fields to return in the API response. This parameters applies to search and browse queries.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Advanced",
                        ],
                      },
                      "restrictHighlightAndSnippetArrays": {
                        "default": false,
                        "description": "Restrict highlighting and snippeting to items that matched the query.",
                        "type": "boolean",
                        "x-categories": [
                          "Highlighting and Snippeting",
                        ],
                      },
                      "restrictSearchableAttributes": {
                        "default": [],
                        "description": "Restricts a given query to look in only a subset of your searchable attributes.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-categories": [
                          "Attributes",
                        ],
                      },
                      "snippetEllipsisText": {
                        "default": "…",
                        "description": "String used as an ellipsis indicator when a snippet is truncated.",
                        "type": "string",
                        "x-categories": [
                          "Highlighting and Snippeting",
                        ],
                      },
                      "synonyms": {
                        "default": true,
                        "description": "Whether to take into account an index's synonyms for a particular search.",
                        "type": "boolean",
                        "x-categories": [
                          "Advanced",
                        ],
                      },
                      "typoTolerance": {
                        "description": "Controls whether typo tolerance is enabled and how it is applied.",
                        "oneOf": [
                          {
                            "default": true,
                            "type": "boolean",
                          },
                          {
                            "enum": [
                              "min",
                              "strict",
                            ],
                            "type": "string",
                          },
                        ],
                        "x-categories": [
                          "Typos",
                        ],
                      },
                    },
                    "type": "object",
                  },
                ],
                "description": "The Algolia index settings.",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and an updatedAt timestamp.",
                  "properties": {
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                  ],
                  "title": "updatedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Update settings of an index.",
        "tags": [
          "Indices",
        ],
      },
    },
    "/1/indexes/{indexName}/synonyms/batch": {
      "post": {
        "description": "Create/update multiple synonym objects at once, potentially replacing the entire list of synonyms if replaceExistingSynonyms is true.",
        "operationId": "saveSynonyms",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "When true, changes are also propagated to replicas of the given indexName.",
            "in": "query",
            "name": "forwardToReplicas",
            "schema": {
              "type": "boolean",
            },
          },
          {
            "description": "Replace all synonyms of the index with the ones sent with this request.",
            "in": "query",
            "name": "replaceExistingSynonyms",
            "schema": {
              "type": "boolean",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Array of synonym objects.",
                "items": {
                  "additionalProperties": false,
                  "description": "Synonym object.",
                  "properties": {
                    "corrections": {
                      "description": "Words to be matched in records.",
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "input": {
                      "description": "Word or phrase to appear in query strings (for onewaysynonym).",
                      "type": "string",
                    },
                    "objectID": {
                      "description": "Unique identifier of the synonym object to be created or updated.",
                      "type": "string",
                    },
                    "placeholder": {
                      "description": "Token to be put inside records.",
                      "type": "string",
                    },
                    "replacements": {
                      "description": "List of query words that will match the token.",
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "synonyms": {
                      "description": "Words or phrases to be considered equivalent.",
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "type": {
                      "description": "Type of the synonym object.",
                      "enum": [
                        "synonym",
                        "onewaysynonym",
                        "altcorrection1",
                        "altcorrection2",
                        "placeholder",
                      ],
                      "type": "string",
                    },
                    "word": {
                      "description": "Word or phrase to appear in query strings (for altcorrection1 and altcorrection2).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "objectID",
                    "type",
                  ],
                  "type": "object",
                },
                "type": "array",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and an updatedAt timestamp.",
                  "properties": {
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                  ],
                  "title": "updatedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Save a batch of synonyms.",
        "tags": [
          "Synonyms",
        ],
      },
    },
    "/1/indexes/{indexName}/synonyms/clear": {
      "post": {
        "description": "Remove all synonyms from an index.",
        "operationId": "clearAllSynonyms",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "When true, changes are also propagated to replicas of the given indexName.",
            "in": "query",
            "name": "forwardToReplicas",
            "schema": {
              "type": "boolean",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and an updatedAt timestamp.",
                  "properties": {
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                  ],
                  "title": "updatedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Clear all synonyms.",
        "tags": [
          "Synonyms",
        ],
      },
    },
    "/1/indexes/{indexName}/synonyms/search": {
      "post": {
        "description": "Search or browse all synonyms, optionally filtering them by type.",
        "operationId": "searchSynonyms",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Only search for specific types of synonyms.",
            "in": "query",
            "name": "type",
            "schema": {
              "description": "Type of the synonym object.",
              "enum": [
                "synonym",
                "onewaysynonym",
                "altcorrection1",
                "altcorrection2",
                "placeholder",
              ],
              "type": "string",
            },
          },
          {
            "description": "Requested page (zero-based). When specified, will retrieve a specific page; the page size is implicitly set to 100. When null, will retrieve all indices (no pagination).",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 0,
              "nullable": true,
              "type": "integer",
            },
          },
          {
            "description": "Maximum number of objects to retrieve.",
            "in": "query",
            "name": "hitsPerPage",
            "schema": {
              "default": 100,
              "type": "integer",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "query": {
                    "default": "",
                    "description": "The text to search in the index.",
                    "type": "string",
                    "x-categories": [
                      "Search",
                    ],
                  },
                },
                "title": "searchSynonymsParams",
                "type": "object",
              },
            },
          },
          "description": "The body of the the \`searchSynonyms\` method.",
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "hits": {
                      "description": "Array of synonym objects.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Synonym object.",
                        "properties": {
                          "corrections": {
                            "description": "Words to be matched in records.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                          "input": {
                            "description": "Word or phrase to appear in query strings (for onewaysynonym).",
                            "type": "string",
                          },
                          "objectID": {
                            "description": "Unique identifier of the synonym object to be created or updated.",
                            "type": "string",
                          },
                          "placeholder": {
                            "description": "Token to be put inside records.",
                            "type": "string",
                          },
                          "replacements": {
                            "description": "List of query words that will match the token.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                          "synonyms": {
                            "description": "Words or phrases to be considered equivalent.",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                          "type": {
                            "description": "Type of the synonym object.",
                            "enum": [
                              "synonym",
                              "onewaysynonym",
                              "altcorrection1",
                              "altcorrection2",
                              "placeholder",
                            ],
                            "type": "string",
                          },
                          "word": {
                            "description": "Word or phrase to appear in query strings (for altcorrection1 and altcorrection2).",
                            "type": "string",
                          },
                        },
                        "required": [
                          "objectID",
                          "type",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "nbHits": {
                      "description": "Number of hits that the search query matched.",
                      "example": 20,
                      "type": "integer",
                    },
                  },
                  "required": [
                    "hits",
                    "nbHits",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Search synonyms.",
        "tags": [
          "Synonyms",
        ],
        "x-cacheable": true,
        "x-use-read-transporter": true,
      },
    },
    "/1/indexes/{indexName}/synonyms/{objectID}": {
      "delete": {
        "description": "Delete a single synonyms set, identified by the given objectID.",
        "operationId": "deleteSynonym",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Unique identifier of an object.",
            "in": "path",
            "name": "objectID",
            "required": true,
            "schema": {
              "example": "123",
              "type": "string",
            },
          },
          {
            "description": "When true, changes are also propagated to replicas of the given indexName.",
            "in": "query",
            "name": "forwardToReplicas",
            "schema": {
              "type": "boolean",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and a deletedAt timestamp.",
                  "properties": {
                    "deletedAt": {
                      "description": "Date of deletion (ISO-8601 format).",
                      "type": "string",
                    },
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": [
                    "taskID",
                    "deletedAt",
                  ],
                  "title": "deletedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Delete synonym.",
        "tags": [
          "Synonyms",
        ],
      },
      "get": {
        "description": "Fetch a synonym object identified by its objectID.",
        "operationId": "getSynonym",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Unique identifier of an object.",
            "in": "path",
            "name": "objectID",
            "required": true,
            "schema": {
              "example": "123",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Synonym object.",
                  "properties": {
                    "corrections": {
                      "description": "Words to be matched in records.",
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "input": {
                      "description": "Word or phrase to appear in query strings (for onewaysynonym).",
                      "type": "string",
                    },
                    "objectID": {
                      "description": "Unique identifier of the synonym object to be created or updated.",
                      "type": "string",
                    },
                    "placeholder": {
                      "description": "Token to be put inside records.",
                      "type": "string",
                    },
                    "replacements": {
                      "description": "List of query words that will match the token.",
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "synonyms": {
                      "description": "Words or phrases to be considered equivalent.",
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "type": {
                      "description": "Type of the synonym object.",
                      "enum": [
                        "synonym",
                        "onewaysynonym",
                        "altcorrection1",
                        "altcorrection2",
                        "placeholder",
                      ],
                      "type": "string",
                    },
                    "word": {
                      "description": "Word or phrase to appear in query strings (for altcorrection1 and altcorrection2).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "objectID",
                    "type",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Get synonym.",
        "tags": [
          "Synonyms",
        ],
      },
      "put": {
        "description": "Create a new synonym object or update the existing synonym object with the given object ID.",
        "operationId": "saveSynonym",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Unique identifier of an object.",
            "in": "path",
            "name": "objectID",
            "required": true,
            "schema": {
              "example": "123",
              "type": "string",
            },
          },
          {
            "description": "When true, changes are also propagated to replicas of the given indexName.",
            "in": "query",
            "name": "forwardToReplicas",
            "schema": {
              "type": "boolean",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Synonym object.",
                "properties": {
                  "corrections": {
                    "description": "Words to be matched in records.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "input": {
                    "description": "Word or phrase to appear in query strings (for onewaysynonym).",
                    "type": "string",
                  },
                  "objectID": {
                    "description": "Unique identifier of the synonym object to be created or updated.",
                    "type": "string",
                  },
                  "placeholder": {
                    "description": "Token to be put inside records.",
                    "type": "string",
                  },
                  "replacements": {
                    "description": "List of query words that will match the token.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "synonyms": {
                    "description": "Words or phrases to be considered equivalent.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "type": {
                    "description": "Type of the synonym object.",
                    "enum": [
                      "synonym",
                      "onewaysynonym",
                      "altcorrection1",
                      "altcorrection2",
                      "placeholder",
                    ],
                    "type": "string",
                  },
                  "word": {
                    "description": "Word or phrase to appear in query strings (for altcorrection1 and altcorrection2).",
                    "type": "string",
                  },
                },
                "required": [
                  "objectID",
                  "type",
                ],
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "description": "objectID of the inserted object.",
                      "type": "string",
                    },
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "taskID",
                    "updatedAt",
                    "id",
                  ],
                  "title": "saveSynonymResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Save synonym.",
        "tags": [
          "Synonyms",
        ],
      },
    },
    "/1/indexes/{indexName}/task/{taskID}": {
      "get": {
        "description": "Check the current status of a given task.",
        "operationId": "getTask",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Unique identifier of an task. Numeric value (up to 64bits).",
            "in": "path",
            "name": "taskID",
            "required": true,
            "schema": {
              "example": 13235,
              "format": "int64",
              "type": "integer",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "status": {
                      "enum": [
                        "published",
                        "notPublished",
                      ],
                      "type": "string",
                    },
                  },
                  "required": [
                    "status",
                  ],
                  "title": "getTaskResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Check the status of a task.",
        "tags": [
          "Indices",
        ],
      },
    },
    "/1/indexes/{indexName}/{objectID}": {
      "delete": {
        "description": "Delete an existing object.",
        "operationId": "deleteObject",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Unique identifier of an object.",
            "in": "path",
            "name": "objectID",
            "required": true,
            "schema": {
              "example": "123",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID and a deletedAt timestamp.",
                  "properties": {
                    "deletedAt": {
                      "description": "Date of deletion (ISO-8601 format).",
                      "type": "string",
                    },
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": [
                    "taskID",
                    "deletedAt",
                  ],
                  "title": "deletedAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Delete an object.",
        "tags": [
          "Records",
        ],
      },
      "get": {
        "description": "Retrieve one object from the index.",
        "operationId": "getObject",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Unique identifier of an object.",
            "in": "path",
            "name": "objectID",
            "required": true,
            "schema": {
              "example": "123",
              "type": "string",
            },
          },
          {
            "description": "List of attributes to retrieve. If not specified, all retrievable attributes are returned.",
            "in": "query",
            "name": "attributesToRetrieve",
            "schema": {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "description": "Value of the attribute to be updated.",
                    "type": "string",
                  },
                  "description": "Fetched object.",
                  "title": "getObjectResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Retrieve an object.",
        "tags": [
          "Records",
        ],
      },
      "put": {
        "description": "Add or replace an object with a given object ID.
If the object does not exist, it will be created.
If it already exists, it will be replaced.
",
        "operationId": "addOrUpdateObject",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Unique identifier of an object.",
            "in": "path",
            "name": "objectID",
            "required": true,
            "schema": {
              "example": "123",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
              },
            },
          },
          "description": "The Algolia object.",
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID, an objectID and an updatedAt timestamp.",
                  "properties": {
                    "objectID": {
                      "description": "Unique identifier of the object.",
                      "type": "string",
                    },
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "title": "updatedAtWithObjectIdResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Add or replace an object.",
        "tags": [
          "Records",
        ],
      },
    },
    "/1/indexes/{indexName}/{objectID}/partial": {
      "post": {
        "description": "Update one or more attributes of an existing object.
This method lets you update only a part of an existing object, either by adding new attributes or updating existing ones.
You can partially update several objects in a single method call.
If the index targeted by this operation doesn't exist yet, it's automatically created.
",
        "operationId": "partialUpdateObject",
        "parameters": [
          {
            "description": "The index in which to perform the request.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "example": "myIndexName",
              "type": "string",
            },
          },
          {
            "description": "Unique identifier of an object.",
            "in": "path",
            "name": "objectID",
            "required": true,
            "schema": {
              "example": "123",
              "type": "string",
            },
          },
          {
            "description": "Creates the record if it does not exist yet.",
            "in": "query",
            "name": "createIfNotExists",
            "schema": {
              "default": true,
              "type": "boolean",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "oneOf": [
                    {
                      "description": "Value of the attribute to be updated.",
                      "type": "string",
                    },
                    {
                      "additionalProperties": false,
                      "description": "To update an attribute without pushing the entire record, you can use these built-in operations.",
                      "properties": {
                        "_operation": {
                          "description": "The operation to apply on the attribute.",
                          "enum": [
                            "Increment",
                            "Decrement",
                            "Add",
                            "Remove",
                            "AddUnique",
                            "IncrementFrom",
                            "IncrementSet",
                          ],
                          "type": "string",
                        },
                        "value": {
                          "description": "the right-hand side argument to the operation, for example, increment or decrement step, value to add or remove.",
                          "type": "string",
                        },
                      },
                      "required": [
                        "_operation",
                        "value",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "description": "Attribute(s) to update.",
                "type": "object",
              },
            },
          },
          "description": "Map of attribute(s) to update.",
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a taskID, an objectID and an updatedAt timestamp.",
                  "properties": {
                    "objectID": {
                      "description": "Unique identifier of the object.",
                      "type": "string",
                    },
                    "taskID": {
                      "description": "taskID of the task to wait for.",
                      "format": "int64",
                      "type": "integer",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "title": "updatedAtWithObjectIdResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Partially update an object.",
        "tags": [
          "Records",
        ],
        "x-codegen-request-body-name": "attributesToUpdate",
      },
    },
    "/1/keys": {
      "get": {
        "description": "List API keys, along with their associated rights.",
        "operationId": "listApiKeys",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "keys": {
                      "description": "List of api keys.",
                      "items": {
                        "allOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "createdAt": {
                                "description": "Time of the event expressed in milliseconds since the Unix epoch.",
                                "format": "int64",
                                "type": "integer",
                              },
                              "value": {
                                "description": "The API key.",
                                "type": "string",
                              },
                            },
                            "required": [
                              "key",
                              "createdAt",
                            ],
                            "type": "object",
                          },
                          {
                            "additionalProperties": false,
                            "description": "Api Key object.",
                            "properties": {
                              "acl": {
                                "default": [],
                                "description": "Set of permissions associated with the key.",
                                "items": {
                                  "description": "List of rights for the API key. The following rights can be used:

addObject: allows to add/update an object in the index (copy/move index are also allowed with this right).
analytics: allows to retrieve the analytics through the Analytics API.
browse: allows to retrieve all index content via the browse API.
deleteIndex: allows to delete or clear index content.
deleteObject: allows to delete objects from the index.
editSettings: allows to change index settings.
listIndexes: allows to list all accessible indices.
logs: allows to get the logs.
recommendation: Allows usage of the Personalization dashboard and the Recommendation API.
search: allows to search the index.
seeUnretrievableAttributes: disable unretrievableAttributes feature for all operations returning records.
settings: allows to get index settings.
",
                                  "enum": [
                                    "addObject",
                                    "analytics",
                                    "browse",
                                    "deleteObject",
                                    "deleteIndex",
                                    "editSettings",
                                    "listIndexes",
                                    "logs",
                                    "personalization",
                                    "recommendation",
                                    "search",
                                    "seeUnretrievableAttributes",
                                    "settings",
                                    "usage",
                                  ],
                                  "type": "string",
                                },
                                "type": "array",
                              },
                              "description": {
                                "default": "",
                                "description": "A comment used to identify a key more easily in the dashboard. It is not interpreted by the API.",
                                "type": "string",
                              },
                              "indexes": {
                                "default": [],
                                "description": "Restrict this new API key to a list of indices or index patterns. If the list is empty, all indices are allowed.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                              },
                              "maxHitsPerQuery": {
                                "default": 0,
                                "description": "Maximum number of hits this API key can retrieve in one query. If zero, no limit is enforced.",
                                "type": "integer",
                              },
                              "maxQueriesPerIPPerHour": {
                                "default": 0,
                                "description": "Maximum number of API calls per hour allowed from a given IP address or a user token.",
                                "type": "integer",
                              },
                              "queryParameters": {
                                "default": "",
                                "description": "URL-encoded query string. Force some query parameters to be applied for each query made with this API key.",
                                "type": "string",
                              },
                              "referers": {
                                "default": [],
                                "description": "Restrict this new API key to specific referers. If empty or blank, defaults to all referers.",
                                "items": {
                                  "type": "string",
                                },
                                "type": "array",
                              },
                              "validity": {
                                "default": 0,
                                "description": "Validity limit for this key in seconds. The key will automatically be removed after this period of time.",
                                "type": "integer",
                              },
                            },
                            "required": [
                              "acl",
                            ],
                            "type": "object",
                          },
                        ],
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "keys",
                  ],
                  "title": "listApiKeysResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "List API Keys.",
        "tags": [
          "Api Keys",
        ],
      },
      "post": {
        "description": "Add a new API Key with specific permissions/restrictions.",
        "operationId": "addApiKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Api Key object.",
                "properties": {
                  "acl": {
                    "default": [],
                    "description": "Set of permissions associated with the key.",
                    "items": {
                      "description": "List of rights for the API key. The following rights can be used:

addObject: allows to add/update an object in the index (copy/move index are also allowed with this right).
analytics: allows to retrieve the analytics through the Analytics API.
browse: allows to retrieve all index content via the browse API.
deleteIndex: allows to delete or clear index content.
deleteObject: allows to delete objects from the index.
editSettings: allows to change index settings.
listIndexes: allows to list all accessible indices.
logs: allows to get the logs.
recommendation: Allows usage of the Personalization dashboard and the Recommendation API.
search: allows to search the index.
seeUnretrievableAttributes: disable unretrievableAttributes feature for all operations returning records.
settings: allows to get index settings.
",
                      "enum": [
                        "addObject",
                        "analytics",
                        "browse",
                        "deleteObject",
                        "deleteIndex",
                        "editSettings",
                        "listIndexes",
                        "logs",
                        "personalization",
                        "recommendation",
                        "search",
                        "seeUnretrievableAttributes",
                        "settings",
                        "usage",
                      ],
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "description": {
                    "default": "",
                    "description": "A comment used to identify a key more easily in the dashboard. It is not interpreted by the API.",
                    "type": "string",
                  },
                  "indexes": {
                    "default": [],
                    "description": "Restrict this new API key to a list of indices or index patterns. If the list is empty, all indices are allowed.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "maxHitsPerQuery": {
                    "default": 0,
                    "description": "Maximum number of hits this API key can retrieve in one query. If zero, no limit is enforced.",
                    "type": "integer",
                  },
                  "maxQueriesPerIPPerHour": {
                    "default": 0,
                    "description": "Maximum number of API calls per hour allowed from a given IP address or a user token.",
                    "type": "integer",
                  },
                  "queryParameters": {
                    "default": "",
                    "description": "URL-encoded query string. Force some query parameters to be applied for each query made with this API key.",
                    "type": "string",
                  },
                  "referers": {
                    "default": [],
                    "description": "Restrict this new API key to specific referers. If empty or blank, defaults to all referers.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "validity": {
                    "default": 0,
                    "description": "Validity limit for this key in seconds. The key will automatically be removed after this period of time.",
                    "type": "integer",
                  },
                },
                "required": [
                  "acl",
                ],
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "createdAt": {
                      "description": "Date of creation (ISO-8601 format).",
                      "type": "string",
                    },
                    "key": {
                      "description": "The API key.",
                      "type": "string",
                    },
                  },
                  "required": [
                    "key",
                    "createdAt",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Create an API key.",
        "tags": [
          "Api Keys",
        ],
      },
    },
    "/1/keys/{key}": {
      "delete": {
        "description": "Delete an existing API Key.",
        "operationId": "deleteApiKey",
        "parameters": [
          {
            "description": "API Key string.",
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "example": "myAPIKey",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "deletedAt": {
                      "description": "Date of deletion (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "deletedAt",
                  ],
                  "title": "deleteApiKeyResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Delete an API key.",
        "tags": [
          "Api Keys",
        ],
      },
      "get": {
        "description": "Get the permissions of an API key.",
        "operationId": "getApiKey",
        "parameters": [
          {
            "description": "API Key string.",
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "example": "myAPIKey",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "properties": {
                        "createdAt": {
                          "description": "Time of the event expressed in milliseconds since the Unix epoch.",
                          "format": "int64",
                          "type": "integer",
                        },
                        "value": {
                          "description": "The API key.",
                          "type": "string",
                        },
                      },
                      "required": [
                        "key",
                        "createdAt",
                      ],
                      "type": "object",
                    },
                    {
                      "additionalProperties": false,
                      "description": "Api Key object.",
                      "properties": {
                        "acl": {
                          "default": [],
                          "description": "Set of permissions associated with the key.",
                          "items": {
                            "description": "List of rights for the API key. The following rights can be used:

addObject: allows to add/update an object in the index (copy/move index are also allowed with this right).
analytics: allows to retrieve the analytics through the Analytics API.
browse: allows to retrieve all index content via the browse API.
deleteIndex: allows to delete or clear index content.
deleteObject: allows to delete objects from the index.
editSettings: allows to change index settings.
listIndexes: allows to list all accessible indices.
logs: allows to get the logs.
recommendation: Allows usage of the Personalization dashboard and the Recommendation API.
search: allows to search the index.
seeUnretrievableAttributes: disable unretrievableAttributes feature for all operations returning records.
settings: allows to get index settings.
",
                            "enum": [
                              "addObject",
                              "analytics",
                              "browse",
                              "deleteObject",
                              "deleteIndex",
                              "editSettings",
                              "listIndexes",
                              "logs",
                              "personalization",
                              "recommendation",
                              "search",
                              "seeUnretrievableAttributes",
                              "settings",
                              "usage",
                            ],
                            "type": "string",
                          },
                          "type": "array",
                        },
                        "description": {
                          "default": "",
                          "description": "A comment used to identify a key more easily in the dashboard. It is not interpreted by the API.",
                          "type": "string",
                        },
                        "indexes": {
                          "default": [],
                          "description": "Restrict this new API key to a list of indices or index patterns. If the list is empty, all indices are allowed.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                        },
                        "maxHitsPerQuery": {
                          "default": 0,
                          "description": "Maximum number of hits this API key can retrieve in one query. If zero, no limit is enforced.",
                          "type": "integer",
                        },
                        "maxQueriesPerIPPerHour": {
                          "default": 0,
                          "description": "Maximum number of API calls per hour allowed from a given IP address or a user token.",
                          "type": "integer",
                        },
                        "queryParameters": {
                          "default": "",
                          "description": "URL-encoded query string. Force some query parameters to be applied for each query made with this API key.",
                          "type": "string",
                        },
                        "referers": {
                          "default": [],
                          "description": "Restrict this new API key to specific referers. If empty or blank, defaults to all referers.",
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                        },
                        "validity": {
                          "default": 0,
                          "description": "Validity limit for this key in seconds. The key will automatically be removed after this period of time.",
                          "type": "integer",
                        },
                      },
                      "required": [
                        "acl",
                      ],
                      "type": "object",
                    },
                  ],
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Get an API key.",
        "tags": [
          "Api Keys",
        ],
      },
      "put": {
        "description": "Replace every permission of an existing API key.",
        "operationId": "updateApiKey",
        "parameters": [
          {
            "description": "API Key string.",
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "example": "myAPIKey",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Api Key object.",
                "properties": {
                  "acl": {
                    "default": [],
                    "description": "Set of permissions associated with the key.",
                    "items": {
                      "description": "List of rights for the API key. The following rights can be used:

addObject: allows to add/update an object in the index (copy/move index are also allowed with this right).
analytics: allows to retrieve the analytics through the Analytics API.
browse: allows to retrieve all index content via the browse API.
deleteIndex: allows to delete or clear index content.
deleteObject: allows to delete objects from the index.
editSettings: allows to change index settings.
listIndexes: allows to list all accessible indices.
logs: allows to get the logs.
recommendation: Allows usage of the Personalization dashboard and the Recommendation API.
search: allows to search the index.
seeUnretrievableAttributes: disable unretrievableAttributes feature for all operations returning records.
settings: allows to get index settings.
",
                      "enum": [
                        "addObject",
                        "analytics",
                        "browse",
                        "deleteObject",
                        "deleteIndex",
                        "editSettings",
                        "listIndexes",
                        "logs",
                        "personalization",
                        "recommendation",
                        "search",
                        "seeUnretrievableAttributes",
                        "settings",
                        "usage",
                      ],
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "description": {
                    "default": "",
                    "description": "A comment used to identify a key more easily in the dashboard. It is not interpreted by the API.",
                    "type": "string",
                  },
                  "indexes": {
                    "default": [],
                    "description": "Restrict this new API key to a list of indices or index patterns. If the list is empty, all indices are allowed.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "maxHitsPerQuery": {
                    "default": 0,
                    "description": "Maximum number of hits this API key can retrieve in one query. If zero, no limit is enforced.",
                    "type": "integer",
                  },
                  "maxQueriesPerIPPerHour": {
                    "default": 0,
                    "description": "Maximum number of API calls per hour allowed from a given IP address or a user token.",
                    "type": "integer",
                  },
                  "queryParameters": {
                    "default": "",
                    "description": "URL-encoded query string. Force some query parameters to be applied for each query made with this API key.",
                    "type": "string",
                  },
                  "referers": {
                    "default": [],
                    "description": "Restrict this new API key to specific referers. If empty or blank, defaults to all referers.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "validity": {
                    "default": 0,
                    "description": "Validity limit for this key in seconds. The key will automatically be removed after this period of time.",
                    "type": "integer",
                  },
                },
                "required": [
                  "acl",
                ],
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "key": {
                      "description": "The API key.",
                      "type": "string",
                    },
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "key",
                    "updatedAt",
                  ],
                  "title": "updateApiKeyResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Update an API key.",
        "tags": [
          "Api Keys",
        ],
      },
    },
    "/1/keys/{key}/restore": {
      "post": {
        "description": "Restore a deleted API key, along with its associated rights.",
        "operationId": "restoreApiKey",
        "parameters": [
          {
            "description": "API Key string.",
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "example": "myAPIKey",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "createdAt": {
                      "description": "Date of creation (ISO-8601 format).",
                      "type": "string",
                    },
                    "key": {
                      "description": "The API key.",
                      "type": "string",
                    },
                  },
                  "required": [
                    "key",
                    "createdAt",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Restore an API key.",
        "tags": [
          "Api Keys",
        ],
      },
    },
    "/1/logs": {
      "get": {
        "description": "Return the latest log entries.",
        "operationId": "getLogs",
        "parameters": [
          {
            "description": "First entry to retrieve (zero-based). Log entries are sorted by decreasing date, therefore 0 designates the most recent log entry.",
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "type": "integer",
            },
          },
          {
            "description": "Maximum number of entries to retrieve. The maximum allowed value is 1000.",
            "in": "query",
            "name": "length",
            "schema": {
              "default": 10,
              "maximum": 1000,
              "type": "integer",
            },
          },
          {
            "description": "Index for which log entries should be retrieved. When omitted, log entries are retrieved across all indices.",
            "in": "query",
            "name": "indexName",
            "schema": {
              "nullable": true,
              "type": "string",
            },
          },
          {
            "description": "Type of log entries to retrieve. When omitted, all log entries are retrieved.",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "all",
              "enum": [
                "all",
                "query",
                "build",
                "error",
              ],
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "logs": {
                      "items": {
                        "properties": {
                          "answer": {
                            "description": "Answer body. Truncated after 1000 characters.",
                            "type": "string",
                          },
                          "answer_code": {
                            "description": "HTTP response code.",
                            "type": "string",
                          },
                          "index": {
                            "description": "Index targeted by the query.",
                            "type": "string",
                          },
                          "inner_queries": {
                            "description": "Array of all performed queries for the given request.",
                            "items": {
                              "properties": {
                                "index_name": {
                                  "description": "Index targeted by the query.",
                                  "type": "string",
                                },
                                "query_id": {
                                  "description": "QueryID for the given query.",
                                  "type": "string",
                                },
                                "user_token": {
                                  "description": "User identifier.",
                                  "type": "string",
                                },
                              },
                              "title": "logQuery",
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "ip": {
                            "description": "IP of the client which performed the request.",
                            "type": "string",
                          },
                          "method": {
                            "description": "HTTP method of the performed request.",
                            "type": "string",
                          },
                          "nb_api_calls": {
                            "description": "Number of API calls.",
                            "type": "string",
                          },
                          "processing_time_ms": {
                            "description": "Processing time for the query. It doesn't include network time.",
                            "type": "string",
                          },
                          "query_body": {
                            "description": "Request body. Truncated after 1000 characters.",
                            "type": "string",
                          },
                          "query_headers": {
                            "description": "Request Headers (API Key is obfuscated).",
                            "type": "string",
                          },
                          "query_nb_hits": {
                            "description": "Number of hits returned for the query.",
                            "type": "string",
                          },
                          "query_params": {
                            "description": "Query parameters sent with the request.",
                            "type": "string",
                          },
                          "sha1": {
                            "description": "SHA1 signature of the log entry.",
                            "type": "string",
                          },
                          "timestamp": {
                            "description": "Timestamp in ISO-8601 format.",
                            "type": "string",
                          },
                          "url": {
                            "description": "Request URL.",
                            "type": "string",
                          },
                        },
                        "required": [
                          "timestamp",
                          "method",
                          "answer_code",
                          "query_body",
                          "answer",
                          "url",
                          "ip",
                          "query_headers",
                          "sha1",
                          "nb_api_calls",
                          "processing_time_ms",
                        ],
                        "title": "log",
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "logs",
                  ],
                  "title": "getLogsResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Return the latest log entries.",
        "tags": [
          "Advanced",
        ],
      },
    },
    "/1/security/sources": {
      "get": {
        "description": "List all allowed sources.",
        "operationId": "getSources",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "A list of sources.",
                  "items": {
                    "description": "The source.",
                    "properties": {
                      "description": {
                        "description": "The description of the source.",
                        "type": "string",
                      },
                      "source": {
                        "description": "The IP range of the source.",
                        "example": "10.0.0.1/32",
                        "type": "string",
                      },
                    },
                    "required": [
                      "source",
                    ],
                  },
                  "type": "array",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "List all allowed sources.",
        "tags": [
          "Vaults",
        ],
      },
      "put": {
        "description": "Replace all allowed sources.",
        "operationId": "replaceSources",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "A list of sources.",
                "items": {
                  "description": "The source.",
                  "properties": {
                    "description": {
                      "description": "The description of the source.",
                      "type": "string",
                    },
                    "source": {
                      "description": "The IP range of the source.",
                      "example": "10.0.0.1/32",
                      "type": "string",
                    },
                  },
                  "required": [
                    "source",
                  ],
                },
                "type": "array",
              },
            },
          },
          "description": "The sources to allow.",
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "updatedAt": {
                      "description": "Date of last update (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "updatedAt",
                  ],
                  "title": "replaceSourceResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Replace all allowed sources.",
        "tags": [
          "Vaults",
        ],
      },
    },
    "/1/security/sources/append": {
      "post": {
        "description": "Add a single source to the list of allowed sources.",
        "operationId": "appendSource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The source.",
                "properties": {
                  "description": {
                    "description": "The description of the source.",
                    "type": "string",
                  },
                  "source": {
                    "description": "The IP range of the source.",
                    "example": "10.0.0.1/32",
                    "type": "string",
                  },
                },
                "required": [
                  "source",
                ],
              },
            },
          },
          "description": "The source to add.",
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The response with a createdAt timestamp.",
                  "properties": {
                    "createdAt": {
                      "description": "Date of creation (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "createdAt",
                  ],
                  "title": "createdAtResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Add a single source.",
        "tags": [
          "Vaults",
        ],
      },
    },
    "/1/security/sources/{source}": {
      "delete": {
        "description": "Remove a single source from the list of allowed sources.",
        "operationId": "deleteSource",
        "parameters": [
          {
            "description": "The IP range of the source.",
            "in": "path",
            "name": "source",
            "required": true,
            "schema": {
              "example": "10.0.0.1/32",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "deletedAt": {
                      "description": "Date of deletion (ISO-8601 format).",
                      "type": "string",
                    },
                  },
                  "required": [
                    "deletedAt",
                  ],
                  "title": "deleteSourceResponse",
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Remove a single source.",
        "tags": [
          "Vaults",
        ],
      },
    },
    "/1{path}": {
      "delete": {
        "description": "This method allow you to send requests to the Algolia REST API.",
        "operationId": "del",
        "parameters": [
          {
            "description": "The path of the API endpoint to target, anything after the /1 needs to be specified.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "example": "/keys",
              "type": "string",
            },
          },
          {
            "description": "Query parameters to be applied to the current query.",
            "in": "query",
            "name": "parameters",
            "schema": {
              "additionalProperties": true,
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Send requests to the Algolia REST API.",
      },
      "get": {
        "description": "This method allow you to send requests to the Algolia REST API.",
        "operationId": "get",
        "parameters": [
          {
            "description": "The path of the API endpoint to target, anything after the /1 needs to be specified.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "example": "/keys",
              "type": "string",
            },
          },
          {
            "description": "Query parameters to be applied to the current query.",
            "in": "query",
            "name": "parameters",
            "schema": {
              "additionalProperties": true,
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Send requests to the Algolia REST API.",
      },
      "post": {
        "description": "This method allow you to send requests to the Algolia REST API.",
        "operationId": "post",
        "parameters": [
          {
            "description": "The path of the API endpoint to target, anything after the /1 needs to be specified.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "example": "/keys",
              "type": "string",
            },
          },
          {
            "description": "Query parameters to be applied to the current query.",
            "in": "query",
            "name": "parameters",
            "schema": {
              "additionalProperties": true,
              "type": "object",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
              },
            },
          },
          "description": "The parameters to send with the custom request.",
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Send requests to the Algolia REST API.",
      },
      "put": {
        "description": "This method allow you to send requests to the Algolia REST API.",
        "operationId": "put",
        "parameters": [
          {
            "description": "The path of the API endpoint to target, anything after the /1 needs to be specified.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "example": "/keys",
              "type": "string",
            },
          },
          {
            "description": "Query parameters to be applied to the current query.",
            "in": "query",
            "name": "parameters",
            "schema": {
              "additionalProperties": true,
              "type": "object",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
              },
            },
          },
          "description": "The parameters to send with the custom request.",
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Bad request or request arguments.",
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "This feature is not enabled on your Algolia account.",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Method not allowed with this API key.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "Error.",
                  "properties": {
                    "message": {
                      "example": "Invalid Application-Id or API-Key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Index not found.",
          },
        },
        "summary": "Send requests to the Algolia REST API.",
      },
    },
  },
  "security": [
    {
      "apiKey": [],
      "appId": [],
    },
  ],
  "servers": [
    {
      "url": "https://{appId}.algolia.net",
      "variables": {
        "appId": {
          "default": "myAppId",
        },
      },
    },
    {
      "url": "https://{appId}-1.algolianet.com",
      "variables": {
        "appId": {
          "default": "myAppId",
        },
      },
    },
    {
      "url": "https://{appId}-2.algolianet.com",
      "variables": {
        "appId": {
          "default": "myAppId",
        },
      },
    },
    {
      "url": "https://{appId}-3.algolianet.com",
      "variables": {
        "appId": {
          "default": "myAppId",
        },
      },
    },
    {
      "url": "https://{appId}-dsn.algolia.net",
      "variables": {
        "appId": {
          "default": "myAppId",
        },
      },
    },
  ],
  "tags": [
    {
      "description": "Advanced operations.",
      "name": "Advanced",
    },
    {
      "description": "Manage your Api Keys.",
      "name": "Api Keys",
    },
    {
      "description": "Clusters operations.",
      "name": "Clusters",
    },
    {
      "description": "Dictionaries operations.",
      "name": "Dictionaries",
    },
    {
      "description": "Manage indices.",
      "name": "Indices",
    },
    {
      "description": "Records operations.",
      "name": "Records",
    },
    {
      "description": "Rules operations.",
      "name": "Rules",
    },
    {
      "description": "Perform search operations.",
      "name": "Search",
    },
    {
      "description": "Synonyms operations.",
      "name": "Synonyms",
    },
    {
      "description": "Vault operations.",
      "name": "Vaults",
    },
    {
      "description": "<SchemaDefinition schemaRef=\\"#/components/schemas/indexSettings\\" />.
",
      "name": "_model_index_settings",
      "x-displayName": "Index Settings",
    },
  ],
  "x-tagGroups": [
    {
      "name": "Search and Indexing",
      "tags": [
        "Indices",
        "Records",
        "Search",
      ],
    },
    {
      "name": "Relevance",
      "tags": [
        "Rules",
        "Synonyms",
        "Dictionaries",
      ],
    },
    {
      "name": "Others",
      "tags": [
        "Api Keys",
        "Clusters",
        "Vaults",
        "Advanced",
      ],
    },
    {
      "name": "Models",
      "tags": [
        "_model_index_settings",
      ],
    },
  ],
}
`;
